!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	vim-easymotion/t/easymotion_spec.vim	/^        normal \$$/;"	m
$	vim-easymotion/t/easymotion_spec.vim	/^        normal! \$$/;"	m
$(DLLIB)	command-t/ruby/command-t/Makefile	/^$(DLLIB): $(OBJS) Makefile$/;"	t
$(TARGET)	vimproc/make_android.mak	/^$(TARGET): $(SRC) $(INC)$/;"	t
$(TARGET)	vimproc/make_cygwin.mak	/^$(TARGET): $(SRC) autoload\/vimstack.c$/;"	t
$(TARGET)	vimproc/make_mac.mak	/^$(TARGET): $(SRC) autoload\/vimstack.c$/;"	t
$(TARGET)	vimproc/make_mingw32.mak	/^$(TARGET): $(SRC) autoload\/vimstack.c$/;"	t
$(TARGET)	vimproc/make_mingw64.mak	/^$(TARGET): $(SRC) autoload\/vimstack.c$/;"	t
$(TARGET)	vimproc/make_sunos.mak	/^$(TARGET): $(SRC) $(INC)$/;"	t
$(TARGET)	vimproc/make_unix.mak	/^$(TARGET): $(SRC) autoload\/vimstack.c$/;"	t
,	vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	vim-easymotion/t/easymotion_spec.vim	/^        normal ,$/;"	m
./.RUBYARCHDIR.time	command-t/ruby/command-t/Makefile	/^.\/.RUBYARCHDIR.time:$/;"	t
.C.o	command-t/ruby/command-t/Makefile	/^.C.o:$/;"	t
.PHONY	command-t/Makefile	/^.PHONY: clean$/;"	t
.PHONY	command-t/Makefile	/^.PHONY: spec$/;"	t
.PHONY	command-t/ruby/command-t/Makefile	/^.PHONY: all install static install-so install-rb$/;"	t
.PHONY	command-t/ruby/command-t/Makefile	/^.PHONY: clean clean-so clean-static clean-rb$/;"	t
.PHONY	vimproc/make_mac.mak	/^.PHONY : clean$/;"	t
.PHONY	vimproc/make_msvc.mak	/^.PHONY: build clean$/;"	t
.SUFFIXES	command-t/ruby/command-t/Makefile	/^.SUFFIXES: .c .m .cc .mm .cxx .cpp .C .o$/;"	t
.c.o	command-t/ruby/command-t/Makefile	/^.c.o:$/;"	t
.cc.o	command-t/ruby/command-t/Makefile	/^.cc.o:$/;"	t
.cpp.o	command-t/ruby/command-t/Makefile	/^.cpp.o:$/;"	t
.cxx.o	command-t/ruby/command-t/Makefile	/^.cxx.o:$/;"	t
.m.o	command-t/ruby/command-t/Makefile	/^.m.o:$/;"	t
.mm.o	command-t/ruby/command-t/Makefile	/^.mm.o:$/;"	t
/	vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
0	vim-easymotion/t/easymotion_spec.vim	/^        normal! 0$/;"	m
2,	vim-easymotion/t/easymotion_spec.vim	/^        normal 2,$/;"	m
3;	vim-easymotion/t/easymotion_spec.vim	/^        normal 3;$/;"	m
4,	vim-easymotion/t/easymotion_spec.vim	/^        normal 4,$/;"	m
;	vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	vim-easymotion/t/easymotion_spec.vim	/^        normal ;$/;"	m
<Leader><Leader>	vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Plug>(easymotion-B)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-B)         :<C-u>call EasyMotion#WBW(0,1)<CR>$/;"	m
<Plug>(easymotion-E)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-E)         :<C-u>call EasyMotion#EW(0,0)<CR>$/;"	m
<Plug>(easymotion-N)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-N)         :<C-u>call EasyMotion#Search(0,1)<CR>$/;"	m
<Plug>(easymotion-W)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-W)         :<C-u>call EasyMotion#WBW(0,0)<CR>$/;"	m
<Plug>(easymotion-activate)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-b)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-b)          :<C-u>call EasyMotion#WB(0,1)<CR>$/;"	m
<Plug>(easymotion-bd-E)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-E)      :<C-u>call EasyMotion#EW(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-W)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-W)      :<C-u>call EasyMotion#WBW(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-e)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-e)      :<C-u>call EasyMotion#E(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-el)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-el)      :<C-u>call EasyMotion#EL(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-jk)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-jk)      :<C-u>call EasyMotion#JK(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-n)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-n)      :<C-u>call EasyMotion#Search(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-w)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-w)       :<C-u>call EasyMotion#WB(0,2)<CR>$/;"	m
<Plug>(easymotion-bd-wl)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bd-wl)      :<C-u>call EasyMotion#WBL(0,2)<CR>$/;"	m
<Plug>(easymotion-bl)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-bl)         :<C-u>call EasyMotion#WBL(0,1)<CR>$/;"	m
<Plug>(easymotion-clever-s)	vim-easymotion/plugin/EasyMotion.vim	/^map <silent><expr><Plug>(easymotion-clever-s)$/;"	m
<Plug>(easymotion-clever-s2)	vim-easymotion/plugin/EasyMotion.vim	/^map <silent><expr><Plug>(easymotion-clever-s2)$/;"	m
<Plug>(easymotion-clever-sn)	vim-easymotion/plugin/EasyMotion.vim	/^map <silent><expr><Plug>(easymotion-clever-sn)$/;"	m
<Plug>(easymotion-dotrepeat)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-e)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-e)         :<C-u>call EasyMotion#E(0,0)<CR>$/;"	m
<Plug>(easymotion-el)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-el)         :<C-u>call EasyMotion#EL(0,0)<CR>$/;"	m
<Plug>(easymotion-eol-bd-jk)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-eol-bd-jk)      :<C-u>call EasyMotion#Eol(0,2)<CR>$/;"	m
<Plug>(easymotion-eol-j)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-eol-j)          :<C-u>call EasyMotion#Eol(0,0)<CR>$/;"	m
<Plug>(easymotion-eol-k)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-eol-k)          :<C-u>call EasyMotion#Eol(0,1)<CR>$/;"	m
<Plug>(easymotion-gE)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-gE)        :<C-u>call EasyMotion#EW(0,1)<CR>$/;"	m
<Plug>(easymotion-ge)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-ge)        :<C-u>call EasyMotion#E(0,1)<CR>$/;"	m
<Plug>(easymotion-gel)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-gel)        :<C-u>call EasyMotion#EL(0,1)<CR>$/;"	m
<Plug>(easymotion-j)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-j)          :<C-u>call EasyMotion#JK(0,0)<CR>$/;"	m
<Plug>(easymotion-jumptoanywhere)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-jumptoanywhere)$/;"	m
<Plug>(easymotion-k)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-k)          :<C-u>call EasyMotion#JK(0,1)<CR>$/;"	m
<Plug>(easymotion-lineanywhere)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-lineanywhere)$/;"	m
<Plug>(easymotion-linebackward)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-linebackward)$/;"	m
<Plug>(easymotion-lineforward)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-lineforward)$/;"	m
<Plug>(easymotion-n)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-n)         :<C-u>call EasyMotion#Search(0,0)<CR>$/;"	m
<Plug>(easymotion-next)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-prev)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(easymotion-sol-bd-jk)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-sol-bd-jk)      :<C-u>call EasyMotion#Sol(0,2)<CR>$/;"	m
<Plug>(easymotion-sol-j)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-sol-j)          :<C-u>call EasyMotion#Sol(0,0)<CR>$/;"	m
<Plug>(easymotion-sol-k)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-sol-k)          :<C-u>call EasyMotion#Sol(0,1)<CR>$/;"	m
<Plug>(easymotion-w)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-w)          :<C-u>call EasyMotion#WB(0,0)<CR>$/;"	m
<Plug>(easymotion-wl)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-wl)         :<C-u>call EasyMotion#WBL(0,0)<CR>$/;"	m
<Plug>(gmail_archive)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_archive)         :<C-u>call gmail#win#archive()<CR>$/;"	m
<Plug>(gmail_back)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_back)            :<C-u>call gmail#win#back()<CR>$/;"	m
<Plug>(gmail_delete)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_delete)          :<C-u>call gmail#win#delete()<CR>$/;"	m
<Plug>(gmail_mark_readed)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_mark_readed)     :<C-u>call gmail#win#mark_readed()<CR>$/;"	m
<Plug>(gmail_mark_unread)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_mark_unread)     :<C-u>call gmail#win#mark_unread()<CR>$/;"	m
<Plug>(gmail_new_mail)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_new_mail)        :<C-u>call gmail#smtp#open('',[],'',[])<CR>$/;"	m
<Plug>(gmail_next_menu)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_next_menu)       :<C-u>call gmail#win#tab(1)<CR>$/;"	m
<Plug>(gmail_open)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_open)            :<C-u>call gmail#win#click()<CR>$/;"	m
<Plug>(gmail_prev_menu)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_prev_menu)       :<C-u>call gmail#win#tab(-1)<CR>$/;"	m
<Plug>(gmail_select_all)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_select_all)      :<C-u>call gmail#win#select_all()<CR>$/;"	m
<Plug>(gmail_select_and_next)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_select_and_next) :<C-u>call gmail#win#select('.',  1, '')<CR>$/;"	m
<Plug>(gmail_select_and_prev)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_select_and_prev) :<C-u>call gmail#win#select('.', -1, '')<CR>$/;"	m
<Plug>(gmail_update)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_update)          :<C-u>call gmail#win#update()<cr>$/;"	m
<Plug>(gmail_update_all)	vmail/plugin/gmail.vim	/^nnoremap <silent> <Plug>(gmail_update_all)      :<C-u>call gmail#win#update_all()<cr>$/;"	m
<Plug>SuperTabBackward	supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<SID>YRGetChar	yank/plugin/yankring.vim	/^inoremap <script> <SID>YRGetChar <c-r>=YRGetChar()<CR>$/;"	m
<SID>yrrecord	yank/plugin/yankring.vim	/^inoremap <silent> <SID>yrrecord <C-R>=YRRecord3()<cr>$/;"	m
<SID>yrrecord	yank/plugin/yankring.vim	/^nnoremap <silent> <SID>yrrecord :call YRRecord3()<cr>$/;"	m
<c-x>	supertab/plugin/supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
APPVER	vimproc/make_msvc.mak	/^APPVER = 5.0$/;"	m
AR	command-t/ruby/command-t/Makefile	/^AR = ar$/;"	m
ARCHHDRDIR	command-t/ruby/command-t/Makefile	/^ARCHHDRDIR    = $(DESTDIR)$(rubyhdrdir)\/$(arch)\/ruby$(target_prefix)$/;"	m
ARCHS	vimproc/make_mac.mak	/^ARCHS=i386 x86_64$/;"	m
ARCH_FLAG	command-t/ruby/command-t/Makefile	/^ARCH_FLAG =   $/;"	m
ARR_D	ultisnipps/test.py	/^ARR_D = '\\x1bOB'$/;"	v
ARR_L	ultisnipps/test.py	/^ARR_L = '\\x1bOD'$/;"	v
ARR_R	ultisnipps/test.py	/^ARR_R = '\\x1bOC'$/;"	v
ARR_U	ultisnipps/test.py	/^ARR_U = '\\x1bOA'$/;"	v
AcceptSelection	ctrlp/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
AddFunc_Opt	ultisnipps/test.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	ultisnipps/test.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddLine	vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddModeExtra	tComment/autoload/tcomment.vim	/^function! s:AddModeExtra(mode, extra, beg, end) "{{{3$/;"	f
AddNewSnippetSource	ultisnipps/test.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddedSnippetsSource	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.added import AddedSnippetsSource$/;"	i
AddedSnippetsSource	ultisnipps/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
AddedSnippetsSource	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^        find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
AltFiletype	tComment/autoload/tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
Anon_NoTrigger_AfterSpace	ultisnipps/test.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	ultisnipps/test.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	ultisnipps/test.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	ultisnipps/test.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	ultisnipps/test.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	ultisnipps/test.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	ultisnipps/test.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	ultisnipps/test.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	ultisnipps/test.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
BINDIR	command-t/ruby/command-t/Makefile	/^BINDIR        = $(DESTDIR)$(bindir)$/;"	m
BRACES	ultisnipps/test.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	ultisnipps/test.py	/^BS = '\\x7f'$/;"	v
Backspace_TabStop_NotZero	ultisnipps/test.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	ultisnipps/test.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BlockGetCommentRx	tComment/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	tComment/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	tComment/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Bookmark.AddBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Buffer	command-t/spec/spec_helper.rb	/^  class Buffer; end$/;"	c
BufferFinder	command-t/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
Bug1251994	ultisnipps/test.py	/^class Bug1251994(_VimTest):$/;"	c
BuildPrompt	ctrlp/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
CC	command-t/ruby/command-t/Makefile	/^CC = xcrun clang$/;"	m
CC	vimproc/make_mac.mak	/^CC=$(LLVMCC)$/;"	m
CC	vimproc/make_mac.mak	/^CC=gcc$/;"	m
CC	vimproc/make_sunos.mak	/^CC=gcc$/;"	m
CCDLFLAGS	command-t/ruby/command-t/Makefile	/^CCDLFLAGS = $/;"	m
CFLAGS	command-t/ruby/command-t/Makefile	/^CFLAGS   = $(CCDLFLAGS)  -g -Os -pipe $(ARCH_FLAG)$/;"	m
CFLAGS	vimproc/make_cygwin.mak	/^CFLAGS=-O2 -W -Wall -Wno-unused -Wno-unused-parameter -use=gnu99 -shared$/;"	m
CFLAGS	vimproc/make_mac.mak	/^CFLAGS=-O2 -W -Wall -Wno-unused -Wno-unused-parameter -bundle -fPIC $(foreach ARCH,$(ARCHS),-arch $(ARCH))$/;"	m
CFLAGS	vimproc/make_mingw32.mak	/^CFLAGS=-O2 -Wall -shared -m32$/;"	m
CFLAGS	vimproc/make_mingw64.mak	/^CFLAGS=-O2 -Wall -shared -m64$/;"	m
CFLAGS	vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/O2$/;"	m
CFLAGS	vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	vimproc/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
CFLAGS	vimproc/make_sunos.mak	/^CFLAGS=-W -Wall -Wno-unused -Wno-unused-parameter -std=c99 -O2 -fPIC -pedantic -D__EXTENSIONS__$/;"	m
CFLAGS	vimproc/make_sunos.mak	/^CFLAGS=-errwarn -xc99 -xO3 -native -KPIC -D__EXTENSIONS__$/;"	m
CFLAGS	vimproc/make_unix.mak	/^CFLAGS=-W -O2 -Wall -Wno-unused -Wno-unused-parameter -std=gnu99 -pedantic -shared$/;"	m
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\$\\d+')$/;"	v	class:MirrorToken
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+[:}]')$/;"	v	class:TabStopToken
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+\\\/')$/;"	v	class:TransformationToken
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!p\\s')$/;"	v	class:PythonCodeToken
CHECK	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!v\\s')$/;"	v	class:VimLCodeToken
CHR2XD	vimproc/autoload/vimstack.c	/^static const char CHR2XD[0x100] = {$/;"	v	file:
CLEANFILES	command-t/ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	command-t/ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).bundle $/;"	m
CLEANOBJS	command-t/ruby/command-t/Makefile	/^CLEANOBJS     = *.o  *.bak$/;"	m
COMPLETION_OPTIONS	ultisnipps/test.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	ultisnipps/test.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	ultisnipps/test.py	/^COMPL_KW = chr(24)+chr(14)$/;"	v
COPY	command-t/ruby/command-t/Makefile	/^COPY = cp$/;"	m
COUTFLAG	command-t/ruby/command-t/Makefile	/^COUTFLAG = -o $(empty)$/;"	m
CPPFLAGS	command-t/ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE -D_DARWIN_UNLIMITED_SELECT -D_REENTRANT $(DEFS) $(cppflags)$/;"	m
CSI_WndCols	vimproc/autoload/proc_w32.c	/^#define CSI_WndCols(/;"	d	file:
CSI_WndRows	vimproc/autoload/proc_w32.c	/^#define CSI_WndRows(/;"	d	file:
CXX	command-t/ruby/command-t/Makefile	/^CXX = xcrun clang++$/;"	m
CXXFLAGS	command-t/ruby/command-t/Makefile	/^CXXFLAGS = $(CCDLFLAGS)  -g -Os -pipe  $(ARCH_FLAG)$/;"	m
Cancell	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
CaptureKeyPresses	supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
ClearAllCtrlPCaches	ctrlp/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCtrlPCache	ctrlp/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	ctrlp/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
ClosePreview	supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CommandLineCompletion	supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommandT	command-t/plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	command-t/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/jump_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/tag_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/jump_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/tag_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/util.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	command-t/plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	command-t/plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	command-t/plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	command-t/plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	command-t/plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	command-t/plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	command-t/plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	command-t/plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	command-t/plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	command-t/plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	command-t/plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	command-t/plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	command-t/plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTJump	command-t/plugin/command-t.vim	/^command CommandTJump call <SID>CommandTShowJumpFinder()$/;"	c
CommandTMatcher_initialize	command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_sorted_matches_for	command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTQuickfix	command-t/plugin/command-t.vim	/^function CommandTQuickfix()$/;"	f
CommandTRefresh	command-t/plugin/command-t.vim	/^function CommandTRefresh()$/;"	f
CommandTRubyWarning	command-t/plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	command-t/plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	command-t/plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTShowJumpFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowJumpFinder()$/;"	f
CommandTShowTagFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowTagFinder()$/;"	f
CommandTTag	command-t/plugin/command-t.vim	/^command CommandTTag call <SID>CommandTShowTagFinder()$/;"	c
CommandTToggleFocus	command-t/plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	command-t/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
CommentBlock	tComment/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, commentMode, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	tComment/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CompletionReset	supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	ultisnipps/test.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	ultisnipps/test.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	ultisnipps/test.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ConstructFromComments	tComment/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ContextCompletion	supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextText	supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
Controller	command-t/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
CreateCoordKeyDict	vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreateNewFile	ctrlp/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
Creator.BufNamePrefix	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtrlP	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	ctrlp/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	ctrlp/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	ctrlp/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	ctrlp/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CursorMovement_BS_InEditMode	ultisnipps/test.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	ultisnipps/test.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
CursorPos	vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
DEFFILE	command-t/ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFINES	vimproc/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
DEFS	command-t/ruby/command-t/Makefile	/^DEFS     = $/;"	m
DISTCLEANDIRS	command-t/ruby/command-t/Makefile	/^DISTCLEANDIRS = $/;"	m
DISTCLEANFILES	command-t/ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	command-t/ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(ARCH_FLAG)$/;"	m
DLLIB	command-t/ruby/command-t/Makefile	/^DLLIB = $(TARGET).bundle$/;"	m
DUMP_FILENAME	ultisnipps/pythonx/UltiSnips/debug.py	/^        else "C:\/windows\/temp\/ultisnips.txt"$/;"	v
DefaultValue	tComment/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DeleteCurrentTabStop1_JumpBack	ultisnipps/test.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	ultisnipps/test.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	ultisnipps/test.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	ultisnipps/test.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	ultisnipps/test.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	ultisnipps/test.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	ultisnipps/test.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoReplacements	tComment/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
DotPromptUser	vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
EA	ultisnipps/test.py	/^EA = "#" # Expand anonymous$/;"	v
ECHO	command-t/ruby/command-t/Makefile	/^ECHO = $(ECHO1:0=@echo)$/;"	m
ECHO1	command-t/ruby/command-t/Makefile	/^ECHO1 = $(V:1=@:)$/;"	m
EMCommandLineNoremap	vim-easymotion/plugin/EasyMotion.vim	/^\\	EMCommandLineNoremap$/;"	c
ESC	ultisnipps/test.py	/^ESC = '\\x1b'$/;"	v
EX	ultisnipps/test.py	/^EX = "\\t" # EXPAND$/;"	v
EXEEXT	command-t/ruby/command-t/Makefile	/^EXEEXT = $/;"	m
EXPORT	vimproc/autoload/proc_w32.c	/^# define EXPORT /;"	d	file:
EXPORT	vimproc/autoload/proc_w32.c	/^# define EXPORT$/;"	d	file:
EXTSTATIC	command-t/ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
EasyMotion	vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive) " {{{$/;"	f
EasyMotion#DotRepeat	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat(visualmode) " {{{$/;"	f
EasyMotion#E	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#Repeat	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction) " {{{$/;"	f
EasyMotion#Sol	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive) " {{{$/;"	f
EasyMotion#WB	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#keymaps	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#keymaps() "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_use_smartcase	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_use_smartcase(input) "{{{$/;"	f
EasyMotion#helper#strchars	vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#highlight#add_color_group	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#delete_highlight	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#init	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#init#InitHL	vim-easymotion/autoload/EasyMotion/init.vim	/^function! EasyMotion#init#InitHL(group, colors) " {{{$/;"	f
EasyMotion#init#InitMappings	vim-easymotion/autoload/EasyMotion/init.vim	/^function! EasyMotion#init#InitMappings(motions, do_mapping) "{{{$/;"	f
EasyMotion#is_active	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#reset	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotionInitHL	vim-easymotion/plugin/EasyMotion.vim	/^augroup EasyMotionInitHL$/;"	a
EditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
EditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        NoneditableTextObject$/;"	i
EditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^from UltiSnips.text_objects._base import EditableTextObject$/;"	i
ElementTree	ultisnipps/utils/get_tm_snippets.py	/^from xml.etree import ElementTree$/;"	i
EnableLongestEnhancement	supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EncodeCommentPart	tComment/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	tComment/autoload/tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	tComment/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndOfTextToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
EndPosRx	tComment/autoload/tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
EscapeCharToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapeCharToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
EscapeCharToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
EscapedChar	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
EscapedChar	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
EscapedChar	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._escaped_char import EscapedChar$/;"	i
EscapedChar	ultisnipps/pythonx/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
ExclusiveSelection_RealWorldCase_Test	ultisnipps/test.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	ultisnipps/test.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitRemoteProcess	vimproc/autoload/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	file:
ExitSnippetModeAfterTabstopZero	ultisnipps/test.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	ultisnipps/test.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
ExpandMap	supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpatError	ultisnipps/utils/get_tm_snippets.py	/^from xml.parsers.expat import ExpatError$/;"	i
ExtendCDef	tComment/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtractCommentsPart	tComment/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
F	vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FH	vim-easymotion/t/easymotion_spec.vim	/^        normal FH$/;"	m
FOSimple_Break_ExpectCorrectResult	ultisnipps/test.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	ultisnipps/test.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	ultisnipps/test.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	ultisnipps/test.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
Faa	vim-easymotion/t/easymotion_spec.vim	/^        normal Faa$/;"	m
Fb	vim-easymotion/t/easymotion_spec.vim	/^        normal Fb$/;"	m
Fba	vim-easymotion/t/easymotion_spec.vim	/^        normal Fba$/;"	m
Fha	vim-easymotion/t/easymotion_spec.vim	/^        normal Fha$/;"	m
FileFinder	command-t/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	command-t/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileScanner	command-t/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
Filetype	tComment/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
Finder	command-t/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
FoldOverwrite_Simple_ECR	ultisnipps/test.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	ultisnipps/test.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	ultisnipps/test.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
ForceUpdate	ctrlp/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
Formatter	command-t/spec/vim_formatter.rb	/^    module Formatter$/;"	m	class:Spec.Runner
Fpa	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpa$/;"	m
Fpb	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpb$/;"	m
Fpc	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpc$/;"	m
GetChar	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar() " {{{$/;"	f
GetCommentDefinition	tComment/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	tComment/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	tComment/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCustomCommentString	tComment/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetIndentString	tComment/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetStartEnd	tComment/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetSyntaxName	tComment/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetVisualStartPosition	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
GlobPath	ctrlp/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
Gmail	vmail/plugin/gmail.vim	/^command! -nargs=0 Gmail             :call gmail#start()$/;"	c
GmailChangeUser	vmail/plugin/gmail.vim	/^command! -nargs=0 GmailChangeUser   :call gmail#changeUser()$/;"	c
GmailCheckNewMail	vmail/plugin/gmail.vim	/^command! -nargs=0 GmailCheckNewMail :call gmail#checkNewMail()$/;"	c
GmailExit	vmail/plugin/gmail.vim	/^command! -nargs=0 GmailExit         :call gmail#exit()$/;"	c
GroupingAlgorithmOriginal	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
GuessCommentMode	tComment/autoload/tcomment.vim	/^function! s:GuessCommentMode(commentMode, customCommentMode) "{{{3$/;"	f
GuessCurrentCommentString	tComment/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	tComment/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
HDRDIR	command-t/ruby/command-t/Makefile	/^HDRDIR        = $(DESTDIR)$(rubyhdrdir)\/ruby$(target_prefix)$/;"	m
HDRS	command-t/ruby/command-t/Makefile	/^HDRS = $(srcdir)\/ext.h $(srcdir)\/match.h $(srcdir)\/matcher.h $(srcdir)\/ruby_compat.h$/;"	m
HighlightTags	easytags/plugin/easytags.vim	/^command! -bar HighlightTags call xolox#easytags#highlight()$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	ultisnipps/test.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	ultisnipps/test.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	ultisnipps/test.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	ultisnipps/test.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	ultisnipps/test.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	ultisnipps/test.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	ultisnipps/test.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	ultisnipps/test.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	ultisnipps/test.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INC	vimproc/make_android.mak	/^INC=autoload\/vimstack.c$/;"	m
INC	vimproc/make_sunos.mak	/^INC=autoload\/vimstack.c$/;"	m
INCFLAGS	command-t/ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(arch_hdrdir) -I$(hdrdir)\/ruby\/backward -I$(hdrdir) -I$(srcdir)$/;"	m
INSTALL	command-t/ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	command-t/ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	command-t/ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
IndentUtil	ultisnipps/pythonx/UltiSnips/indent_util.py	/^class IndentUtil(object):$/;"	c
IndentUtil	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
IndentUtil	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
IndentUtil	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
Init	supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
InitBuffer	supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
Init_ext	command-t/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
InlineReplacement	tComment/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
IsPreviewOpen	supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
JB	ultisnipps/test.py	/^JB = "+" # Jump backwards$/;"	v
JF	ultisnipps/test.py	/^JF = "?" # Jump forwards$/;"	v
JumpFinder	command-t/ruby/command-t/finder/jump_finder.rb	/^  class JumpFinder < Finder$/;"	c	class:CommandT
JumpForward_DefSnippet	ultisnipps/test.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpScanner	command-t/ruby/command-t/scanner/jump_scanner.rb	/^  class JumpScanner < Scanner$/;"	c	class:CommandT
KeyLoop	ctrlp/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
LDFLAGS	vimproc/make_mac.mak	/^LDFLAGS=$/;"	m
LDFLAGS	vimproc/make_sunos.mak	/^LDFLAGS=-G$/;"	m
LDFLAGS	vimproc/make_sunos.mak	/^LDFLAGS=-shared$/;"	m
LDSHARED	command-t/ruby/command-t/Makefile	/^LDSHARED = $(CC) -dynamic -bundle$/;"	m
LDSHAREDXX	command-t/ruby/command-t/Makefile	/^LDSHAREDXX = $(CXX) -dynamic -bundle$/;"	m
LIBPATH	command-t/ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	command-t/ruby/command-t/Makefile	/^LIBRUBY = $(LIBRUBY_SO)$/;"	m
LIBRUBYARG_SHARED	command-t/ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	command-t/ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBY_A	command-t/ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	command-t/ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lpthread -ldl -lobjc $/;"	m
LLVMCC	vimproc/make_mac.mak	/^LLVMCC=clang$/;"	m
LLVMCC	vimproc/make_mac.mak	/^LLVMCC=llvm-gcc$/;"	m
LOCAL_LIBS	command-t/ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LS	ultisnipps/test.py	/^LS = "@" # List snippets$/;"	v
LeaveTrailingWhitespace	ultisnipps/test.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
LineIterator	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
LineIterator	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
LineIterator	ultisnipps/pythonx/UltiSnips/text.py	/^class LineIterator(object):$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	ultisnipps/test.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	ultisnipps/test.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	ultisnipps/test.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	ultisnipps/test.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	ultisnipps/test.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	ultisnipps/test.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
MAKEDIRS	command-t/ruby/command-t/Makefile	/^MAKEDIRS = mkdir -p$/;"	m
ManualCompletionEnter	supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
MapNorms	ctrlp/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	ctrlp/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	ctrlp/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
MatchIsTooCheap	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MatchIt	ctrlp/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchWindow	command-t/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
MatchedItems	ctrlp/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MenuController.New	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Message	vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
Mirror	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Mirror	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Mirror	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
Mirror	ultisnipps/pythonx/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
Mirror	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
MirrorBeforeTabstopLeave_ExpectCorrectResult	ultisnipps/test.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	ultisnipps/test.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	ultisnipps/test.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class MirrorToken(Token):$/;"	c
MirrorToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
MirrorToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
Mirror_TestKillTabstop_Kill	ultisnipps/test.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	ultisnipps/test.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	ultisnipps/test.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	ultisnipps/test.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	ultisnipps/test.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
MovePosition_DelSameLine	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	ultisnipps/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	ultisnipps/test.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	ultisnipps/test.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	ultisnipps/test.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	ultisnipps/test.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	ultisnipps/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	ultisnipps/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	ultisnipps/test.py	/^    _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	ultisnipps/test.py	/^    _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	ultisnipps/test.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	ultisnipps/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	ultisnipps/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	ultisnipps/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	ultisnipps/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	ultisnipps/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	ultisnipps/test.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	ultisnipps/test.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	ultisnipps/test.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	ultisnipps/test.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	ultisnipps/test.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	ultisnipps/test.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	ultisnipps/test.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	ultisnipps/test.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	ultisnipps/test.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	ultisnipps/test.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	ultisnipps/test.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
NERDTree	nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
No_Tab_Expand_ET	ultisnipps/test.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	ultisnipps/test.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	ultisnipps/test.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	ultisnipps/test.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	ultisnipps/test.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	ultisnipps/test.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	ultisnipps/test.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	ultisnipps/test.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld,_VimTest):$/;"	c
No_Tab_Expand_Simple	ultisnipps/test.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_escaped_char.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_mirror.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_viml_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
OBJS	command-t/ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
OBJS	vimproc/make_msvc.mak	/^OBJS = $(SRCS:.c=.obj)$/;"	m
OPEN_MAX	vimproc/autoload/fakepoll.h	/^  #define OPEN_MAX /;"	d
ORIG_SRCS	command-t/ruby/command-t/Makefile	/^ORIG_SRCS = ext.c match.c matcher.c$/;"	m
OUTFLAG	command-t/ruby/command-t/Makefile	/^OUTFLAG = -o $(empty)$/;"	m
Open	ctrlp/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenMulti	ctrlp/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	ctrlp/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
Opener.New	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PATH_SEPARATOR	command-t/ruby/command-t/Makefile	/^PATH_SEPARATOR = :$/;"	m
PIPE	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
PLATFORM	vimproc/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	vimproc/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	vimproc/Makefile	/^        PLATFORM = unix$/;"	m
POLLERR	vimproc/autoload/fakepoll.h	/^#define POLLERR /;"	d
POLLHUP	vimproc/autoload/fakepoll.h	/^#define POLLHUP /;"	d
POLLIN	vimproc/autoload/fakepoll.h	/^#define POLLIN /;"	d
POLLNORM	vimproc/autoload/fakepoll.h	/^#define POLLNORM /;"	d
POLLNVAL	vimproc/autoload/fakepoll.h	/^#define POLLNVAL /;"	d
POLLOUT	vimproc/autoload/fakepoll.h	/^#define POLLOUT /;"	d
POLLPRI	vimproc/autoload/fakepoll.h	/^#define POLLPRI /;"	d
POLLRDBAND	vimproc/autoload/fakepoll.h	/^#define POLLRDBAND /;"	d
POLLRDNORM	vimproc/autoload/fakepoll.h	/^#define POLLRDNORM /;"	d
POLLWRBAND	vimproc/autoload/fakepoll.h	/^#define POLLWRBAND /;"	d
POLLWRNORM	vimproc/autoload/fakepoll.h	/^#define POLLWRNORM /;"	d
ParseArgs	tComment/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
ParseSnippets_ClearAll	ultisnipps/test.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	ultisnipps/test.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	ultisnipps/test.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	ultisnipps/test.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	ultisnipps/test.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	ultisnipps/test.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	ultisnipps/test.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	ultisnipps/test.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	ultisnipps/test.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	ultisnipps/test.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	ultisnipps/test.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	ultisnipps/test.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	ultisnipps/test.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	ultisnipps/test.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	ultisnipps/test.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	ultisnipps/test.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	ultisnipps/test.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	ultisnipps/test.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	ultisnipps/test.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	ultisnipps/test.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	ultisnipps/test.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
Path.AbsolutePathFor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PathUtilities	command-t/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
PerlSyntaxFold	ultisnipps/test.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PluginEasyTags	easytags/plugin/easytags.vim	/^augroup PluginEasyTags$/;"	a
Plugin_Neocomplete_BugTest	ultisnipps/test.py	/^class Plugin_Neocomplete_BugTest(_VimTest):$/;"	c
Plugin_SuperTab_SimpleTest	ultisnipps/test.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Plugin_YouCompleteMe_IntegrationTest	ultisnipps/test.py	/^class Plugin_YouCompleteMe_IntegrationTest(_VimTest):$/;"	c
Plugin_unite_BugTest	ultisnipps/test.py	/^class Plugin_unite_BugTest(_VimTest):$/;"	c
Popen	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
Position	ultisnipps/pythonx/UltiSnips/_diff.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/_vim.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/position.py	/^class Position(object):$/;"	c
Position	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/test_diff.py	/^from position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/test_position.py	/^from position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.position import Position$/;"	i
Position	ultisnipps/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.position import Position$/;"	i
ProcessLine	tComment/autoload/tcomment.vim	/^function! s:ProcessLine(uncomment, match, checkRx, replace)$/;"	f
Prompt	command-t/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
Prompt	vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
PromptUser	vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
ProperIndenting_AutoIndentAndNewline_ECR	ultisnipps/test.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	ultisnipps/test.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	ultisnipps/test.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	ultisnipps/test.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	ultisnipps/test.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PrtAdd	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	ctrlp/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PythonCode	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
PythonCode	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._python_code import PythonCode$/;"	i
PythonCode	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	ultisnipps/test.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	ultisnipps/test.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	ultisnipps/test.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	ultisnipps/test.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	ultisnipps/test.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
PythonCode_AccessKilledTabstop_OverwriteFirst	ultisnipps/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	ultisnipps/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_IndentEtSw	ultisnipps/test.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	ultisnipps/test.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	ultisnipps/test.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	ultisnipps/test.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	ultisnipps/test.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	ultisnipps/test.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	ultisnipps/test.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	ultisnipps/test.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	ultisnipps/test.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	ultisnipps/test.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	ultisnipps/test.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	ultisnipps/test.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	ultisnipps/test.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	ultisnipps/test.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	ultisnipps/test.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	ultisnipps/test.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	ultisnipps/test.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	ultisnipps/test.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	ultisnipps/test.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	ultisnipps/test.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	ultisnipps/test.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	ultisnipps/test.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	ultisnipps/test.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	ultisnipps/test.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	ultisnipps/test.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	ultisnipps/test.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	ultisnipps/test.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_WeirdScoping_Error	ultisnipps/test.py	/^class Python_WeirdScoping_Error(_VimTest):$/;"	c
Q	command-t/ruby/command-t/Makefile	/^Q = $(Q1:0=@)$/;"	m
Q1	command-t/ruby/command-t/Makefile	/^Q1 = $(V:1=)$/;"	m
RARRAY_LEN	command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
RFLOAT_VALUE	command-t/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RM	command-t/ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RMDIRS	command-t/ruby/command-t/Makefile	/^RMDIRS = rmdir -p$/;"	m
RM_RF	command-t/ruby/command-t/Makefile	/^RM_RF = $(RUBY) -run -e rm -- -rf$/;"	m
RSTRING_LEN	command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RUBY	command-t/ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	command-t/ruby/command-t/Makefile	/^RUBYARCHDIR   = $(DESTDIR)$(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	command-t/ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(DESTDIR)$(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	command-t/ruby/command-t/Makefile	/^RUBYLIBDIR    = $(DESTDIR)$(sitelibdir)$(target_prefix)$/;"	m
RUBYW_BASE_NAME	command-t/ruby/command-t/Makefile	/^RUBYW_BASE_NAME = rubyw$/;"	m
RUBYW_INSTALL_NAME	command-t/ruby/command-t/Makefile	/^RUBYW_INSTALL_NAME = $/;"	m
RUBY_BASE_NAME	command-t/ruby/command-t/Makefile	/^RUBY_BASE_NAME = ruby$/;"	m
RUBY_EXTCONF_H	command-t/ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	command-t/ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	command-t/ruby/command-t/Makefile	/^RUBY_SO_NAME = ruby.2.0.0$/;"	m
RUBY_VERSION_NAME	command-t/ruby/command-t/Makefile	/^RUBY_VERSION_NAME = $(RUBY_BASE_NAME)-$(ruby_version)$/;"	m
RecTabStopsWithExpandtab_SimpleExample_ECR	ultisnipps/test.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	ultisnipps/test.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	ultisnipps/test.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	ultisnipps/test.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	ultisnipps/test.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	ultisnipps/test.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	ultisnipps/test.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	ultisnipps/test.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	ultisnipps/test.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	ultisnipps/test.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	ultisnipps/test.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	ultisnipps/test.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	ultisnipps/test.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	ultisnipps/test.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	ultisnipps/test.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	ultisnipps/test.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	ultisnipps/test.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	ultisnipps/test.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	ultisnipps/test.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	ultisnipps/test.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	ultisnipps/test.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	ultisnipps/test.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	ultisnipps/test.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	ultisnipps/test.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	ultisnipps/test.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	ultisnipps/test.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	ultisnipps/test.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
ReleaseKeyPresses	supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
RemoveTrailingWhitespace	ultisnipps/test.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
Render	ctrlp/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RepeatCommentstring	tComment/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceInLine	tComment/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
Reset	ctrlp/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
RestoreValue	vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
RetainsTheUnnamedRegister	ultisnipps/test.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	ultisnipps/test.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
Runner	command-t/spec/vim_formatter.rb	/^  module Runner$/;"	m	class:Spec
SEQUENCES	ultisnipps/test.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SHELL	command-t/ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SID_PREFIX	vimproc/autoload/vimproc.vim	/^function! s:SID_PREFIX()$/;"	f
SNIPMATE_SNIPPET_PRIORITY	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SRC	vimproc/make_android.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	vimproc/make_cygwin.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	vimproc/make_mac.mak	/^SRC=autoload\/proc.c$/;"	m
SRC	vimproc/make_mingw32.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	vimproc/make_mingw64.mak	/^SRC=autoload\/proc_w32.c$/;"	m
SRC	vimproc/make_sunos.mak	/^SRC=autoload\/proc.c autoload\/ptytty.c$/;"	m
SRC	vimproc/make_unix.mak	/^SRC=autoload\/proc.c$/;"	m
SRCS	command-t/ruby/command-t/Makefile	/^SRCS = $(ORIG_SRCS) $/;"	m
SRCS	vimproc/make_msvc.mak	/^SRCS = autoload\/proc_w32.c$/;"	m
STATIC_LIB	command-t/ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
SaveValue	vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
Scanner	command-t/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	command-t/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
SearchDict	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
SearchDict2	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
SelectCompletion	supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	ultisnipps/test.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	ultisnipps/test.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	ultisnipps/test.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	ultisnipps/test.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	ultisnipps/test.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	ultisnipps/test.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SetCompletionType	supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefTxt	ctrlp/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetDefaultCompletionType	supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetLines	vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
SetWD	ctrlp/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetWhitespaceMode	tComment/autoload/tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
Settings	command-t/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
ShellCode	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
ShellCode	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._shell_code import ShellCode$/;"	i
ShellCode	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShellCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
ShellCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
SimpleExpandEndingWithNewline_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	ultisnipps/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	ultisnipps/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	ultisnipps/test.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SnipMateFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.file.snipmate import SnipMateFileSource$/;"	i
SnipMateFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateFileSource	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^        find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
SnipMateSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.snipmate import SnipMateSnippetDefinition$/;"	i
SnipMateSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnipMateSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.definition import SnipMateSnippetDefinition$/;"	i
SnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^class SnippetDefinition(object):$/;"	c
SnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.definition._base import SnippetDefinition$/;"	i
SnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/ultisnips.py	/^from UltiSnips.snippet.definition._base import SnippetDefinition$/;"	i
SnippetDictionary	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^from UltiSnips.snippet.source._snippet_dictionary import SnippetDictionary$/;"	i
SnippetDictionary	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^class SnippetDictionary(object):$/;"	c
SnippetFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file._base import SnippetFileSource$/;"	i
SnippetFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips.snippet.source.file._base import SnippetFileSource$/;"	i
SnippetInstance	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.text_objects import SnippetInstance$/;"	i
SnippetInstance	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._snippet_instance import SnippetInstance$/;"	i
SnippetInstance	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	ultisnipps/pythonx/UltiSnips/__init__.py	/^from UltiSnips.snippet_manager import SnippetManager$/;"	i
SnippetManager	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	ultisnipps/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	ultisnipps/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	ultisnipps/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	ultisnipps/test.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	ultisnipps/test.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	ultisnipps/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	ultisnipps/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	ultisnipps/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	ultisnipps/test.py	/^    _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	ultisnipps/test.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	ultisnipps/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	ultisnipps/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	ultisnipps/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	ultisnipps/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	ultisnipps/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	ultisnipps/test.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	ultisnipps/test.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	ultisnipps/test.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	ultisnipps/test.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	ultisnipps/test.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	ultisnipps/test.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	ultisnipps/test.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	ultisnipps/test.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	ultisnipps/test.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	ultisnipps/test.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	ultisnipps/test.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	ultisnipps/test.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	ultisnipps/test.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	ultisnipps/test.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	ultisnipps/test.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	ultisnipps/test.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	ultisnipps/test.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	ultisnipps/test.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetSource	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSource	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^class SnippetSource(object):$/;"	c
SnippetSource	ultisnipps/pythonx/UltiSnips/snippet/source/added.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSyntaxError	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
Snippet_With_DoubleQuote	ultisnipps/test.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	ultisnipps/test.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	ultisnipps/test.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	ultisnipps/test.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	ultisnipps/test.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	ultisnipps/test.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	ultisnipps/test.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	ultisnipps/test.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	ultisnipps/test.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	ultisnipps/test.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	ultisnipps/test.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	ultisnipps/test.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Spec	command-t/spec/vim_formatter.rb	/^module Spec$/;"	m
SpecInputs	ctrlp/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	ctrlp/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StartColRx	tComment/autoload/tcomment.vim	/^function! s:StartColRx(mode, col)$/;"	f
StartLineRx	tComment/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	tComment/autoload/tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
Stub	command-t/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SuperTab	supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
T	vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T/	vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
T;	vim-easymotion/t/easymotion_spec.vim	/^        normal T;$/;"	m
TARGET	command-t/ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGET	vimproc/make_android.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	vimproc/make_cygwin.mak	/^TARGET=autoload\/vimproc_cygwin.dll$/;"	m
TARGET	vimproc/make_mac.mak	/^TARGET=autoload\/vimproc_mac.so$/;"	m
TARGET	vimproc/make_mingw32.mak	/^TARGET=autoload\/vimproc_win32.dll$/;"	m
TARGET	vimproc/make_mingw64.mak	/^TARGET=autoload\/vimproc_win64.dll$/;"	m
TARGET	vimproc/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	vimproc/make_sunos.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET	vimproc/make_unix.mak	/^TARGET=autoload\/vimproc_unix.so$/;"	m
TARGET_ENTRY	command-t/ruby/command-t/Makefile	/^TARGET_ENTRY = Init_$(TARGET_NAME)$/;"	m
TARGET_NAME	command-t/ruby/command-t/Makefile	/^TARGET_NAME = ext$/;"	m
TARGET_SO	command-t/ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TComment	tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	tComment/plugin/tcomment.vim	/^command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	tComment/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TH	vim-easymotion/t/easymotion_spec.vim	/^        normal TH$/;"	m
THREAD_THRESHOLD	command-t/ruby/command-t/matcher.c	/^#define THREAD_THRESHOLD /;"	d	file:
THa	vim-easymotion/t/easymotion_spec.vim	/^        normal THa$/;"	m
TOUCH	command-t/ruby/command-t/Makefile	/^TOUCH = exit >$/;"	m
TabStop	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.text_objects import TabStop$/;"	i
TabStop	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
TabStop	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._tabstop import TabStop$/;"	i
TabStop	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	ultisnipps/test.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	ultisnipps/test.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	ultisnipps/test.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.snippet.parsing._lexer import tokenize, TabStopToken$/;"	i
TabStopToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
TabStopToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
TabStopWithOneChar_ExpectCorrectResult	ultisnipps/test.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	ultisnipps/test.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	ultisnipps/test.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	ultisnipps/test.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	ultisnipps/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	ultisnipps/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	ultisnipps/test.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	ultisnipps/test.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	ultisnipps/test.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	ultisnipps/test.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	ultisnipps/test.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	ultisnipps/test.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	ultisnipps/test.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	ultisnipps/test.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	ultisnipps/test.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	ultisnipps/test.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	ultisnipps/test.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	ultisnipps/test.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	ultisnipps/test.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	ultisnipps/test.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	ultisnipps/test.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	ultisnipps/test.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	ultisnipps/test.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	ultisnipps/test.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	ultisnipps/test.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	ultisnipps/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	ultisnipps/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	ultisnipps/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	ultisnipps/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	ultisnipps/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	ultisnipps/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	ultisnipps/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	ultisnipps/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	ultisnipps/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	ultisnipps/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	ultisnipps/test.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	ultisnipps/test.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
TagFinder	command-t/ruby/command-t/finder/tag_finder.rb	/^  class TagFinder < Finder$/;"	c	class:CommandT
TagScanner	command-t/ruby/command-t/scanner/tag_scanner.rb	/^  class TagScanner < Scanner$/;"	c	class:CommandT
TagsByFileType	easytags/plugin/easytags.vim	/^command! -bang TagsByFileType call xolox#easytags#by_filetype(<q-bang> == '!')$/;"	c
Tb	vim-easymotion/t/easymotion_spec.vim	/^        normal Tb$/;"	m
Tba	vim-easymotion/t/easymotion_spec.vim	/^        normal Tba$/;"	m
TestAllMatch	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	ultisnipps/test.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	ultisnipps/test.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	ultisnipps/test.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestRealLife	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestSuperTabCodeComplete	supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestUltiSnipsProblem	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TextObject	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextObjectTransformation	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._transformation import TextObjectTransformation$/;"	i
TextTabStopAfterMirror_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	ultisnipps/test.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	ultisnipps/test.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
Th	vim-easymotion/t/easymotion_spec.vim	/^        normal Th$/;"	m
Tha	vim-easymotion/t/easymotion_spec.vim	/^        normal Tha$/;"	m
Toa	vim-easymotion/t/easymotion_spec.vim	/^        normal Toa$/;"	m
Tob	vim-easymotion/t/easymotion_spec.vim	/^        normal Tob$/;"	m
Toc	vim-easymotion/t/easymotion_spec.vim	/^        normal Toc$/;"	m
Tod	vim-easymotion/t/easymotion_spec.vim	/^        normal Tod$/;"	m
ToggleByFname	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleKeyLoop	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleType	ctrlp/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
Token	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class Token(object):$/;"	c
TrailingNewline_TabStop_EndNL	ultisnipps/test.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	ultisnipps/test.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	ultisnipps/test.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	ultisnipps/test.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	ultisnipps/test.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	ultisnipps/test.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	ultisnipps/test.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Transformation	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._transformation import Transformation$/;"	i
Transformation	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	ultisnipps/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	ultisnipps/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	ultisnipps/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	ultisnipps/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	ultisnipps/test.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	ultisnipps/test.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	ultisnipps/test.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	ultisnipps/test.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	ultisnipps/test.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	ultisnipps/test.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	ultisnipps/test.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	ultisnipps/test.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	ultisnipps/test.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	ultisnipps/test.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	ultisnipps/test.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	ultisnipps/test.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	ultisnipps/test.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	ultisnipps/test.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	ultisnipps/test.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	ultisnipps/test.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	ultisnipps/test.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	ultisnipps/test.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	ultisnipps/test.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	ultisnipps/test.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	ultisnipps/test.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	ultisnipps/test.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	ultisnipps/test.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TreeDirNode.AbsoluteTreeRoot	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
UNAME_S	vimproc/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UNIDECODE_ALERT_RAISED	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	ultisnipps/test.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	ultisnipps/test.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UltiSnips	ultisnipps/autoload/UltiSnips.vim	/^   augroup UltiSnips$/;"	a
UltiSnips	ultisnipps/plugin/UltiSnips.vim	/^augroup UltiSnips$/;"	a
UltiSnips#AddFiletypes	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes)$/;"	f
UltiSnips#AddSnippet	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippet(trigger, value, description, options, ...)$/;"	f
UltiSnips#AddSnippetWithPriority	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority)$/;"	f
UltiSnips#Anon	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...)$/;"	f
UltiSnips#CursorMoved	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved()$/;"	f
UltiSnips#Edit	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...)$/;"	f
UltiSnips#ExpandSnippet	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet()$/;"	f
UltiSnips#ExpandSnippetOrJump	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump()$/;"	f
UltiSnips#FileTypeChanged	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeChanged()$/;"	f
UltiSnips#FileTypeComplete	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos)$/;"	f
UltiSnips#JumpBackwards	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards()$/;"	f
UltiSnips#JumpForwards	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards()$/;"	f
UltiSnips#LeavingBuffer	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer()$/;"	f
UltiSnips#LeavingInsertMode	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode()$/;"	f
UltiSnips#ListSnippets	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets()$/;"	f
UltiSnips#SaveLastVisualSelection	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection()$/;"	f
UltiSnips#SnippetsInCurrentScope	ultisnipps/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope()$/;"	f
UltiSnips#bootstrap#Bootstrap	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^function! UltiSnips#bootstrap#Bootstrap()$/;"	f
UltiSnips#map_keys#MapKeys	ultisnipps/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys()$/;"	f
UltiSnipsAddFiletypes	ultisnipps/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	ultisnipps/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
UltiSnipsFileSource	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsFileSource	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^        find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
UltiSnipsFileType	ultisnipps/autoload/UltiSnips.vim	/^   augroup UltiSnipsFileType$/;"	a
UltiSnipsFileType	ultisnipps/ftdetect/UltiSnips.vim	/^   augroup UltiSnipsFileType$/;"	a
UltiSnipsSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.ultisnips import UltiSnipsSnippetDefinition$/;"	i
UltiSnipsSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/definition/ultisnips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnipsSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
UltiSnipsSnippetDefinition	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
UltiSnips_AddSnippet	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_AddSnippet(...)$/;"	f
UltiSnips_Anon	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_Anon(...)$/;"	f
UltiSnips_ExpandSnippet	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippet()$/;"	f
UltiSnips_ExpandSnippetOrJump	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippetOrJump()$/;"	f
UltiSnips_FileTypeChanged	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_FileTypeChanged()$/;"	f
UltiSnips_JumpBackwards	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_JumpBackwards()$/;"	f
UltiSnips_JumpForwards	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_JumpForwards()$/;"	f
UltiSnips_Manager	ultisnipps/pythonx/UltiSnips/__init__.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UltiSnips_SnippetsInCurrentScope	ultisnipps/plugin/UltiSnips.vim	/^function! UltiSnips_SnippetsInCurrentScope()$/;"	f
Undo_RemoveEditInTabstop	ultisnipps/test.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	ultisnipps/test.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	ultisnipps/test.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UndotreeHide	undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeHide     :call UndotreeHide()$/;"	c
UndotreeHide	undotree/plugin/undotree.vim	/^function! UndotreeHide()$/;"	f
UndotreeIsVisible	undotree/plugin/undotree.vim	/^function! UndotreeIsVisible()$/;"	f
UndotreeShow	undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeShow     :call UndotreeShow()$/;"	c
UndotreeShow	undotree/plugin/undotree.vim	/^function! UndotreeShow()$/;"	f
UndotreeToggle	undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs Vim version >= 7.3"$/;"	c
UndotreeToggle	undotree/plugin/undotree.vim	/^    command! -n=0 -bar UndotreeToggle :echoerr "undotree.vim needs vim7.3 with patch005 applied."$/;"	c
UndotreeToggle	undotree/plugin/undotree.vim	/^command! -n=0 -bar UndotreeToggle   :call UndotreeToggle()$/;"	c
UndotreeToggle	undotree/plugin/undotree.vim	/^function! UndotreeToggle()$/;"	f
UndotreeUpdate	undotree/plugin/undotree.vim	/^function! UndotreeUpdate()$/;"	f
UnknownVariable	ultisnipps/utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
UnreplaceInLine	tComment/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
UnsupportedVariableExpression	ultisnipps/utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
Update	ctrlp/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateTags	easytags/plugin/easytags.vim	/^command! -bar -bang -nargs=* -complete=file UpdateTags call xolox#easytags#update(0, <q-bang> == '!', [<f-args>])$/;"	c
UserCmd	ctrlp/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
Util	command-t/ruby/command-t/util.rb	/^  module Util$/;"	m	class:CommandT
V	command-t/ruby/command-t/Makefile	/^V = 0$/;"	m
VIM	command-t/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/spec/spec_helper.rb	/^module VIM$/;"	m
VIMPROC	vimproc/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	vimproc/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
VPATH	command-t/ruby/command-t/Makefile	/^VPATH = $(srcdir):$(arch_hdrdir)\/ruby:$(hdrdir)\/ruby$/;"	m
VP_EOV	vimproc/autoload/vimstack.c	/^#define VP_EOV /;"	d	file:
VP_EOV_STR	vimproc/autoload/vimstack.c	/^#define VP_EOV_STR /;"	d	file:
VP_ERRMSG_SIZE	vimproc/autoload/vimstack.c	/^#define VP_ERRMSG_SIZE /;"	d	file:
VP_GOTO_ERROR	vimproc/autoload/proc.c	/^#define VP_GOTO_ERROR(/;"	d	file:
VP_GOTO_ERROR	vimproc/autoload/proc.c	/^#undef VP_GOTO_ERROR$/;"	d	file:
VP_INITIAL_BUFSIZE	vimproc/autoload/vimstack.c	/^#define VP_INITIAL_BUFSIZE /;"	d	file:
VP_NUMFMT_BUFSIZE	vimproc/autoload/vimstack.c	/^#define VP_NUMFMT_BUFSIZE /;"	d	file:
VP_NUM_BUFSIZE	vimproc/autoload/vimstack.c	/^#define VP_NUM_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	vimproc/autoload/proc.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_READ_BUFSIZE	vimproc/autoload/proc_w32.c	/^#define VP_READ_BUFSIZE /;"	d	file:
VP_RETURN_IF_FAIL	vimproc/autoload/vimstack.c	/^# define VP_RETURN_IF_FAIL(/;"	d	file:
VP_STACK_NULL	vimproc/autoload/vimstack.c	/^#define VP_STACK_NULL /;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	vimproc/autoload/proc.c	/^#define VP_STACK_PUSH_ALTSIGNAME(/;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	vimproc/autoload/proc.c	/^#undef VP_STACK_PUSH_ALTSIGNAME$/;"	d	file:
VP_STACK_PUSH_SIGNAME	vimproc/autoload/proc.c	/^#define VP_STACK_PUSH_SIGNAME(/;"	d	file:
VP_STACK_PUSH_SIGNAME	vimproc/autoload/proc.c	/^#undef VP_STACK_PUSH_SIGNAME$/;"	d	file:
VarReset	vim-easymotion/autoload/EasyMotion.vim	/^function! s:VarReset(var, ...) " {{{$/;"	f
VerifyVimDict1	ultisnipps/test.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	ultisnipps/test.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	ultisnipps/test.py	/^class VerifyVimDict3(_VimTest):$/;"	c
VimBuffer	ultisnipps/pythonx/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimFormatter	command-t/spec/vim_formatter.rb	/^      class VimFormatter < BaseTextFormatter$/;"	c	class:Spec.Runner.Formatter
VimInterface	ultisnipps/test.py	/^class VimInterface(object):$/;"	c
VimInterfaceScreen	ultisnipps/test.py	/^class VimInterfaceScreen(VimInterface):$/;"	c
VimInterfaceTmux	ultisnipps/test.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceWindows	ultisnipps/test.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
VimLCode	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
VimLCode	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._viml_code import VimLCode$/;"	i
VimLCode	ultisnipps/pythonx/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimLCodeToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
VimPosition	ultisnipps/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimProcBang	vimproc/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang call s:bang(<q-args>)$/;"	c
VimProcRead	vimproc/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead call s:read(<q-args>)$/;"	c
VimState	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
VimState	ultisnipps/pythonx/UltiSnips/vim_state.py	/^class VimState(object):$/;"	c
VirtualEdit	ultisnipps/test.py	/^class VirtualEdit(_VimTest):$/;"	c
Visual	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Visual	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^        ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Visual	ultisnipps/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._visual import Visual$/;"	i
Visual	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
VisualContentPreserver	ultisnipps/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver(object):$/;"	c
VisualToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
VisualToken	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
VisualTransformationWithDefault_ExpandWithVisual	ultisnipps/test.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	ultisnipps/test.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	ultisnipps/test.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	ultisnipps/test.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	ultisnipps/test.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	ultisnipps/test.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	ultisnipps/test.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	ultisnipps/test.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	ultisnipps/test.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	ultisnipps/test.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	ultisnipps/test.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	ultisnipps/test.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	ultisnipps/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	ultisnipps/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	ultisnipps/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	ultisnipps/test.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	ultisnipps/test.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	ultisnipps/test.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	ultisnipps/test.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	ultisnipps/test.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	ultisnipps/test.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	ultisnipps/test.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	ultisnipps/test.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	ultisnipps/test.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	ultisnipps/test.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	ultisnipps/test.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	ultisnipps/test.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	ultisnipps/test.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	ultisnipps/test.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	ultisnipps/test.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	ultisnipps/test.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	ultisnipps/test.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
WIFCONTINUED	vimproc/autoload/proc.c	/^#define WIFCONTINUED(/;"	d	file:
WINVER	vimproc/autoload/proc_w32.c	/^#define WINVER /;"	d	file:
WINVER	vimproc/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WIN_ESCAPES	ultisnipps/test.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	ultisnipps/test.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
WillComplete	supertab/plugin/supertab.vim	/^function! s:WillComplete() " {{{$/;"	f
Window	command-t/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
XD2CHR	vimproc/autoload/vimstack.c	/^static const char *XD2CHR =$/;"	v	file:
YRCheckClipboard	yank/plugin/yankring.vim	/^command!                  -nargs=? YRCheckClipboard call s:YRCheckClipboard(<args>)$/;"	c
YRCheckClipboard	yank/plugin/yankring.vim	/^function! s:YRCheckClipboard()$/;"	f
YRClear	yank/plugin/yankring.vim	/^command!                           YRClear          call s:YRClear()$/;"	c
YRClear	yank/plugin/yankring.vim	/^function! s:YRClear()$/;"	f
YRDeleteRange	yank/plugin/yankring.vim	/^command! -range -bang     -nargs=? YRDeleteRange    <line1>,<line2>call s:YRYankRange(<bang>1, <args>)$/;"	c
YRDisplayElem	yank/plugin/yankring.vim	/^function! s:YRDisplayElem(disp_nbr, script_var)$/;"	f
YRDoRepeat	yank/plugin/yankring.vim	/^function! s:YRDoRepeat()$/;"	f
YRErrorMsg	yank/plugin/yankring.vim	/^function! s:YRErrorMsg(msg)$/;"	f
YRFocusGained	yank/plugin/yankring.vim	/^function! s:YRFocusGained()$/;"	f
YRGetChar	yank/plugin/yankring.vim	/^function! s:YRGetChar()$/;"	f
YRGetElem	yank/plugin/yankring.vim	/^command!                  -nargs=* YRGetElem        call s:YRGetElem(<args>)$/;"	c
YRGetElem	yank/plugin/yankring.vim	/^function! s:YRGetElem(...)$/;"	f
YRGetMultiple	yank/plugin/yankring.vim	/^command!        -bang     -nargs=? YRGetMultiple    call s:YRGetMultiple(<bang>0, <args>)$/;"	c
YRGetMultiple	yank/plugin/yankring.vim	/^function! s:YRGetMultiple(reverse_order, ...)$/;"	f
YRGetNextElem	yank/plugin/yankring.vim	/^function! s:YRGetNextElem(start, iter)$/;"	f
YRGetValElemNbr	yank/plugin/yankring.vim	/^function! s:YRGetValElemNbr( position, type )$/;"	f
YRHistoryDelete	yank/plugin/yankring.vim	/^function! s:YRHistoryDelete()$/;"	f
YRHistoryRead	yank/plugin/yankring.vim	/^function! s:YRHistoryRead()$/;"	f
YRHistorySave	yank/plugin/yankring.vim	/^function! s:YRHistorySave()$/;"	f
YRHistoryUpgrade	yank/plugin/yankring.vim	/^function! s:YRHistoryUpgrade(version)$/;"	f
YRInit	yank/plugin/yankring.vim	/^function! s:YRInit(...)$/;"	f
YRInsertLeave	yank/plugin/yankring.vim	/^function! s:YRInsertLeave()$/;"	f
YRMRUAdd	yank/plugin/yankring.vim	/^function! s:YRMRUAdd( mru_list, element, element_type )$/;"	f
YRMRUDel	yank/plugin/yankring.vim	/^function! s:YRMRUDel( mru_list, elem_nbr )$/;"	f
YRMRUElemFormat	yank/plugin/yankring.vim	/^function! s:YRMRUElemFormat( element, element_type )$/;"	f
YRMRUGet	yank/plugin/yankring.vim	/^function! s:YRMRUGet( mru_list, position )$/;"	f
YRMRUHas	yank/plugin/yankring.vim	/^function! s:YRMRUHas( mru_list, find_str )$/;"	f
YRMRUReset	yank/plugin/yankring.vim	/^function! s:YRMRUReset( mru_list )$/;"	f
YRMRUSize	yank/plugin/yankring.vim	/^function! s:YRMRUSize( mru_list )$/;"	f
YRMapsCreate	yank/plugin/yankring.vim	/^command!                  -nargs=0 YRMapsCreate     call s:YRMapsCreate()$/;"	c
YRMapsCreate	yank/plugin/yankring.vim	/^function! s:YRMapsCreate(...)$/;"	f
YRMapsDelete	yank/plugin/yankring.vim	/^command!                  -nargs=0 YRMapsDelete     call s:YRMapsDelete()$/;"	c
YRMapsDelete	yank/plugin/yankring.vim	/^function! s:YRMapsDelete(...)$/;"	f
YRMapsExpression	yank/plugin/yankring.vim	/^function! YRMapsExpression(sid, motion, ...)$/;"	f
YRMapsMacro	yank/plugin/yankring.vim	/^command! -count=1 -bang   -nargs=0 YRMapsMacro      call s:YRMapsMacro(<bang>0, <args>)$/;"	c
YRMapsMacro	yank/plugin/yankring.vim	/^function! s:YRMapsMacro(bang, ...)$/;"	f
YRPaste	yank/plugin/yankring.vim	/^command! -count -register -nargs=* YRPaste          call s:YRPaste(0,1,<args>)$/;"	c
YRPaste	yank/plugin/yankring.vim	/^function! s:YRPaste(replace_last_paste_selection, nextvalue, direction, ...)$/;"	f
YRPop	yank/plugin/yankring.vim	/^command!                  -nargs=? YRPop            <line1>,<line2>call s:YRPop(<args>)$/;"	c
YRPop	yank/plugin/yankring.vim	/^function! s:YRPop(...)$/;"	f
YRPush	yank/plugin/yankring.vim	/^command!        -register -nargs=? YRPush           call s:YRPush(<args>)$/;"	c
YRPush	yank/plugin/yankring.vim	/^function! s:YRPush(...)$/;"	f
YRRecord	yank/plugin/yankring.vim	/^function! YRRecord(...)$/;"	f
YRRecord3	yank/plugin/yankring.vim	/^function! YRRecord3(...)$/;"	f
YRRegister	yank/plugin/yankring.vim	/^function! s:YRRegister()$/;"	f
YRReplace	yank/plugin/yankring.vim	/^command!                  -nargs=* YRReplace        call s:YRPaste(1,<f-args>)$/;"	c
YRReset	yank/plugin/yankring.vim	/^function! s:YRReset()$/;"	f
YRSearch	yank/plugin/yankring.vim	/^command!                  -nargs=? YRSearch         call s:YRSearch(<q-args>)$/;"	c
YRSearch	yank/plugin/yankring.vim	/^function! s:YRSearch(...)$/;"	f
YRSetNumberedReg	yank/plugin/yankring.vim	/^function! s:YRSetNumberedReg()$/;"	f
YRSetPrevOP	yank/plugin/yankring.vim	/^function! s:YRSetPrevOP(op_code, count, reg, mode)$/;"	f
YRShow	yank/plugin/yankring.vim	/^command!                  -nargs=? YRShow           call s:YRShow(<args>)$/;"	c
YRShow	yank/plugin/yankring.vim	/^function! s:YRShow(...)$/;"	f
YRToggle	yank/plugin/yankring.vim	/^command!                  -nargs=? YRToggle         call s:YRToggle(<args>)$/;"	c
YRToggle	yank/plugin/yankring.vim	/^function! s:YRToggle(...)$/;"	f
YRWarningMsg	yank/plugin/yankring.vim	/^function! s:YRWarningMsg(msg)$/;"	f
YRWinLeave	yank/plugin/yankring.vim	/^function! s:YRWinLeave()$/;"	f
YRWindowAction	yank/plugin/yankring.vim	/^function! s:YRWindowAction(op, cmd_mode) range$/;"	f
YRWindowActionN	yank/plugin/yankring.vim	/^function! s:YRWindowActionN(op, cmd_mode)$/;"	f
YRWindowOpen	yank/plugin/yankring.vim	/^function! s:YRWindowOpen(results)$/;"	f
YRWindowStatus	yank/plugin/yankring.vim	/^function! s:YRWindowStatus(show_help)$/;"	f
YRWindowUpdate	yank/plugin/yankring.vim	/^function! s:YRWindowUpdate()$/;"	f
YRYankCount	yank/plugin/yankring.vim	/^command! -count -register -nargs=* YRYankCount      call s:YRYankCount(<args>)$/;"	c
YRYankCount	yank/plugin/yankring.vim	/^function! s:YRYankCount(...) range$/;"	f
YRYankRange	yank/plugin/yankring.vim	/^command! -range -bang     -nargs=? YRYankRange      <line1>,<line2>call s:YRYankRange(<bang>0, <args>)$/;"	c
YRYankRange	yank/plugin/yankring.vim	/^function! s:YRYankRange(do_delete_selection, ...) range$/;"	f
YankRing	yank/plugin/yankring.vim	/^augroup YankRing$/;"	a
_AddFuncBase	ultisnipps/test.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	ultisnipps/test.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	ultisnipps/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_COMMA	ultisnipps/pythonx/UltiSnips/_vim.py	/^    _COMMA = re.compile(r"(?<!\\\\),")$/;"	v	class:_RealLangMapTranslator
_CONDITIONAL	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_DOLLAR	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_DummyLangMapTranslator	ultisnipps/pythonx/UltiSnips/_vim.py	/^class _DummyLangMapTranslator(object):$/;"	c
_ES_Base	ultisnipps/test.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	ultisnipps/test.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FAKE_POLL_H	vimproc/autoload/fakepoll.h	/^#define _FAKE_POLL_H$/;"	d
_FormatoptionsBase	ultisnipps/test.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_LangMapTranslator	ultisnipps/pythonx/UltiSnips/_vim.py	/^    _LangMapTranslator = _DummyLangMapTranslator$/;"	v
_LangMapTranslator	ultisnipps/pythonx/UltiSnips/_vim.py	/^_LangMapTranslator = _RealLangMapTranslator$/;"	v
_ListAllSnippets	ultisnipps/test.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	ultisnipps/pythonx/UltiSnips/test_position.py	/^class _MPBase(object):$/;"	c
_MultiLineDefault	ultisnipps/test.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	ultisnipps/test.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	ultisnipps/test.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	ultisnipps/test.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_POSIX_	vimproc/autoload/proc_w32.c	/^#define _POSIX_$/;"	d	file:
_ParseSnippets_MultiWord	ultisnipps/test.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	ultisnipps/test.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_REPLACE_NON_WS	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_RealLangMapTranslator	ultisnipps/pythonx/UltiSnips/_vim.py	/^class _RealLangMapTranslator(object):$/;"	c
_Regex_Self	ultisnipps/test.py	/^class _Regex_Self(_VimTest):$/;"	c
_SEMICOLONS	ultisnipps/pythonx/UltiSnips/_vim.py	/^    _SEMICOLONS = re.compile(r"(?<!\\\\);")$/;"	v	class:_RealLangMapTranslator
_SelectModeMappings	ultisnipps/test.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	ultisnipps/test.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	ultisnipps/test.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_TABS	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	ultisnipps/test.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Tabs	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class _TextIterator(object):$/;"	c
_UNESCAPE	ultisnipps/utils/get_tm_snippets.py	/^_UNESCAPE = re.compile(ur'&\\w+?;', re.UNICODE)$/;"	v
_UmlautsBase	ultisnipps/test.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	ultisnipps/test.py	/^class _VimTest(unittest.TestCase):$/;"	c
_VisualContent	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^_VisualContent = namedtuple('_VisualContent', ['mode', 'text'])$/;"	v
_WIN32_IE	vimproc/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	vimproc/autoload/proc_w32.c	/^#define _WIN32_WINNT /;"	d	file:
_XOPEN_SOURCE	vimproc/autoload/proc.c	/^#define _XOPEN_SOURCE /;"	d	file:
__ALLOWED_TOKENS	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__BSD_VISIBLE	vimproc/autoload/proc.c	/^#define __BSD_VISIBLE /;"	d	file:
__add__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__add__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__eq__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__getitem__	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getslice__	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def __getslice__(self, i, j): # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__init__	ultisnipps/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, priority, trigger, value, description,$/;"	m	class:SnippetDefinition
__init__	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	ultisnipps/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token, end=None,$/;"	m	class:TextObject
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext):$/;"	m	class:SnippetUtil
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, snippet, parent, initial_text,$/;"	m	class:SnippetInstance
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	ultisnipps/test.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	ultisnipps/test.py	/^    def __init__(self, session):$/;"	m	class:VimInterfaceScreen
__init__	ultisnipps/test.py	/^    def __init__(self, session):$/;"	m	class:VimInterfaceTmux
__iter__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__iter__	ultisnipps/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__le__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__lshift__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__ne__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__next__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
__next__	ultisnipps/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
__repr__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__repr__	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
__rshift__	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setslice__	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text): # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__sub__	ultisnipps/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
_add_child	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_add_extending_info	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _add_extending_info(self, ft, parents):$/;"	m	class:SnippetFileSource
_as_statusline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
_ask_snippets	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_before_test	ultisnipps/test.py	/^    def _before_test(self):$/;"	f
_before_test	ultisnipps/test.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	ultisnipps/test.py	/^    def _before_test(self):$/;"	m	class:Plugin_YouCompleteMe_IntegrationTest
_before_test	ultisnipps/test.py	/^    def _before_test(self):$/;"	m	class:_VimTest
_buffer_complete	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
_build_module	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_build_module(sid)$/;"	f
_calc_end	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^def _calc_end(text, start):$/;"	f
_check_if_still_inside_snippet	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_version	ultisnipps/test.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _chomp(string):$/;"	f
_clamp	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_clamp(x, max, min)$/;"	f
_create_file	ultisnipps/test.py	/^    def _create_file(self, file_path, content):$/;"	m	class:_VimTest
_create_mirrors	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def _create_mirrors(all_tokens, seen_ts):$/;"	f
_create_transformations	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_create_translation	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def _create_translation(self, langmap):$/;"	m	class:_RealLangMapTranslator
_cs	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _cs(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_del_child	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_do_edit	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd):$/;"	m	class:EditableTextObject
_do_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
_do_print	ultisnipps/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy
_do_snippet	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_easytags_makecmd	easytags/misc/easytags/highlight.py	/^def _easytags_makecmd(syntaxgroup, prefix, suffix, patterns, ignoresyntax):$/;"	f
_echo_cmdline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_echo_cmdline(cmdline)$/;"	f
_editable_children	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_ensure_loaded	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _ensure_loaded(self, ft, already_loaded):$/;"	m	class:SnippetFileSource
_extra_options_post_init	ultisnipps/test.py	/^    def _extra_options_post_init(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_options_post_init	ultisnipps/test.py	/^    def _extra_options_post_init(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_options_post_init	ultisnipps/test.py	/^    def _extra_options_post_init(self, vim_config):$/;"	m	class:_VimTest
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	f
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:Plugin_Neocomplete_BugTest
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:Plugin_YouCompleteMe_IntegrationTest
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:Plugin_unite_BugTest
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:VirtualEdit
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_AddFuncBase
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_AnonBase
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_ES_Base
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_options_pre_init	ultisnipps/test.py	/^    def _extra_options_pre_init(self, vim_config):$/;"	m	class:_VimTest
_file_to_edit	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):  # pylint: disable=no-self-use$/;"	m	class:SnippetManager
_find_closing_brace	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_find_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^    def _find_snippets(self, ft, trigger, potentially=False, seen=None):$/;"	m	class:SnippetSource
_finish	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
_get_all_snippet_files_for	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_functions	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_module_path	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_get_module_path(name)$/;"	f
_get_next_tab	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_prev_tab	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	ultisnipps/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _get_tmp():$/;"	f
_getchar	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_getchar()$/;"	f
_handle_failure	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^def _handle_snippet_or_global(filename, line, lines, python_globals, priority):$/;"	f
_hash_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^def _hash_file(path):$/;"	f
_hl_cursor_off	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_hl_cursor_off()$/;"	f
_hl_cursor_on	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_hl_cursor_on()$/;"	f
_import	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_import(name)$/;"	f
_internal_get_pty	vimproc/autoload/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	file:
_internal_get_tty	vimproc/autoload/ptytty.c	/^_internal_get_tty(int *slave, char *path,$/;"	f	file:
_is_absolute_path	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_jump	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, backwards=False):$/;"	m	class:SnippetManager
_leaving_buffer	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	ultisnipps/test.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:_VimTest
_load_snippets_for	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_map_inner_keys	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _map_inner_keys(self):$/;"	m	class:SnippetManager
_maps	ultisnipps/pythonx/UltiSnips/_vim.py	/^    _maps = {}$/;"	v	class:_RealLangMapTranslator
_move	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_needs_update	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_one_char_case_change	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_line	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
_parse_number	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_place_initial_text	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
_re_match	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_redir	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_redir(cmd)$/;"	f
_redraw	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_redraw()$/;"	f
_reinit	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^def _replace_conditional(match, string):$/;"	f
_reset	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_resolve_ambiguity	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^def _resolve_ambiguity(all_tokens, seen_ts):$/;"	f
_result	vimproc/autoload/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_result	vimproc/autoload/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_run_shell_command	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_scripts	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_scripts()$/;"	f
_snip_quote	ultisnipps/test.py	/^def _snip_quote(qt):$/;"	f
_snips	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial):$/;"	m	class:SnippetManager
_split_conditional	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_string_with_pos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_string_with_pos(...)$/;"	f
_text_to_vim	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^def _text_to_vim(start, end, text):$/;"	f
_transform	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self):$/;"	m	class:SnippetManager
_unify_path	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_unify_path(path)$/;"	f
_uniq	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
_unmap_inner_keys	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def _unmap_inner_keys(self):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	ultisnipps/pythonx/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done):$/;"	m	class:EditableTextObject
_update	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done):$/;"	m	class:NoneditableTextObject
_update	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done):$/;"	m	class:TextObject
_update	ultisnipps/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done):$/;"	m	class:Mirror
_update	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done):$/;"	m	class:PythonCode
_update	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done):$/;"	m	class:ShellCode
_update	ultisnipps/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done):$/;"	m	class:VimLCode
_update	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^    def _update(self, done):$/;"	m	class:Visual
_vim	ultisnipps/pythonx/UltiSnips/_diff.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/indent_util.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/text_objects/_viml_code.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips import _vim$/;"	i
_vim	ultisnipps/pythonx/UltiSnips/vim_state.py	/^from UltiSnips import _vim$/;"	i
_vim_dec	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def _vim_dec(string):$/;"	f
_vim_enc	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(bytearray):$/;"	f
_vim_enc	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(string):$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_vital_depends()$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:_vital_loaded(V)$/;"	f
_words_for_line	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
``	vim-easymotion/t/easymotion_spec.vim	/^        normal! ``$/;"	m
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = 'First Line\\nSecond Line'$/;"	v	class:TestWithNewline
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestCheapDelete
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestRealLife1
a	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    a = 'hallo End Beginning'$/;"	v	class:TestRealLife
abbrev	command-t/ruby/command-t/matcher.c	/^    VALUE abbrev;$/;"	m	struct:__anon3	file:
abbrev_segments	command-t/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
accept_selection	command-t/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller.quickfix
activateAll	nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
add!	command-t/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	command-t/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_buffer_filetypes	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_paths_for_directory	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
add_snippet	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	ultisnipps/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet(self, trigger, value, description,$/;"	m	class:SnippetManager
addtomrufs	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
adjust_screen	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
akey	ultisnipps/test.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	ultisnipps/test.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
all	command-t/ruby/command-t/Makefile	/^all:    $(DLLIB)$/;"	t
all	supertab/Makefile	/^all: dist$/;"	t
all	vimproc/Makefile	/^all:$/;"	t
all	vimproc/make_android.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_cygwin.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_mac.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_mingw32.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_mingw64.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_msvc32.mak	/^all: autoload\/vimproc_win32.dll$/;"	t
all	vimproc/make_msvc64.mak	/^all: autoload\/vimproc_win64.dll$/;"	t
all	vimproc/make_sunos.mak	/^all: $(TARGET)$/;"	t
all	vimproc/make_unix.mak	/^all: $(TARGET)$/;"	t
always_show_dot_files	command-t/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
always_show_dot_files	command-t/ruby/command-t/matcher.c	/^    VALUE always_show_dot_files;$/;"	m	struct:__anon3	file:
answer	vimproc/vest/test-socket.vim	/^  let answer = input('Want to execute socket test? ')$/;"	v
arch	command-t/ruby/command-t/Makefile	/^arch = universal-darwin13$/;"	m
arch_hdrdir	command-t/ruby/command-t/Makefile	/^arch_hdrdir = \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.9.sdk\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/2.0\/usr\/include\/ruby-2.0.0\/universal-darwin13$/;"	m
archdir	command-t/ruby/command-t/Makefile	/^archdir = $(rubyarchdir)$/;"	m
archincludedir	command-t/ruby/command-t/Makefile	/^archincludedir = $(includedir)\/$(arch)$/;"	m
archlibdir	command-t/ruby/command-t/Makefile	/^archlibdir = $(libdir)\/$(arch)$/;"	m
argmaps	ctrlp/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
argparse	ultisnipps/utils/convert_snipmate_snippets.py	/^import argparse$/;"	i
args	ultisnipps/test.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	ultisnipps/test.py	/^    args = ""$/;"	v	class:_AnonBase
args	ultisnipps/test.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	ultisnipps/test.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	ultisnipps/test.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	ultisnipps/test.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	ultisnipps/test.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	ultisnipps/test.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	ultisnipps/test.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	ultisnipps/test.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	ultisnipps/test.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args	ultisnipps/test.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	ultisnipps/test.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
as_keymapping	vim-easymotion/plugin/EasyMotion.vim	/^function! s:as_keymapping(key)$/;"	f
as_unicode	ultisnipps/pythonx/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def as_unicode(string):$/;"	f
as_unicode	ultisnipps/pythonx/UltiSnips/debug.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	ultisnipps/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
as_vimencoding	ultisnipps/pythonx/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
as_vimencoding	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def as_vimencoding(string):$/;"	f
at	ctrlp/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
autocmds	ctrlp/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
autoload/vimproc_win32.dll	vimproc/make_msvc32.mak	/^autoload\/vimproc_win32.dll: autoload\/proc_w32.c autoload\/vimstack.c$/;"	t
autoload/vimproc_win64.dll	vimproc/make_msvc64.mak	/^autoload\/vimproc_win64.dll: autoload\/proc_w32.c autoload\/vimstack.c$/;"	t
autoload\$(VIMPROC).dll	vimproc/make_msvc.mak	/^autoload\\$(VIMPROC).dll: $(OBJS)$/;"	t
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne Hinten'$/;"	v	class:TestCheapDelete
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne hallo  Hinten'$/;"	v	class:TestRealLife1
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = 'hallo End t'$/;"	v	class:TestRealLife
b	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    b = 'n'$/;"	v	class:TestWithNewline
b	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
b64decode	vmail/autoload/gmail/util.vim	/^function! s:b64decode(b64, table, pad)$/;"	f
b64encode	vmail/autoload/gmail/util.vim	/^function! s:b64encode(bytes, table, pad)$/;"	f
b:current_syntax	ultisnipps/syntax/snippets.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	vmail/syntax/gmail.vim	/^let b:current_syntax = 'gmail'$/;"	v
b:match_ignorecase	ultisnipps/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	ultisnipps/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
backspace	command-t/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller.quickfix
backspace!	command-t/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	command-t/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
bang	vimproc/plugin/vimproc.vim	/^function! s:bang(cmdline) "{{{$/;"	f
base._execute	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base._execute()$/;"	f
base._finish	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base._finish()$/;"	f
base._init	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base._init()$/;"	f
base._is_exit	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base._is_exit()$/;"	f
base._main	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base._main(...)$/;"	f
base.backward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.backward()$/;"	f
base.cancel	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.cancel()$/;"	f
base.char	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.char()$/;"	f
base.connect	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.connect(module, ...)$/;"	f
base.disconnect	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.disconnect(name)$/;"	f
base.execute	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.execute()$/;"	f
base.exit	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.exit(...)$/;"	f
base.exit_code	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.exit_code()$/;"	f
base.forward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.forward()$/;"	f
base.get	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.get(...)$/;"	f
base.get_wait_keyinput	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.get_wait_keyinput()$/;"	f
base.getline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.getline()$/;"	f
base.getpos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.getpos()$/;"	f
base.insert	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.insert(word, ...)$/;"	f
base.is_input	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.is_input(key, ...)$/;"	f
base.keymappings	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.keymappings()$/;"	f
base.setchar	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.setchar(char)$/;"	f
base.setline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.setline(line)$/;"	f
base.setpos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.setpos(pos)$/;"	f
base.start	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.start(...)$/;"	f
base.wait_keyinput_off	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.wait_keyinput_off(key)$/;"	f
base.wait_keyinput_on	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:base.wait_keyinput_on(key)$/;"	f
basename	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bgray	vim-monochrome/bin/generate.rb	/^def bgray$/;"	f
bindir	command-t/ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
binsert_r	misc/autoload/xolox/misc/list.vim	/^function! s:binsert_r(list, low, high, value, ignorecase)$/;"	f
black	vim-monochrome/bin/generate.rb	/^def black$/;"	f
buf	ultisnipps/pythonx/UltiSnips/_vim.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buf	vimproc/autoload/vimstack.c	/^    char *buf;   \/* stack bufffer *\/$/;"	m	struct:vp_stack_t	file:
buffer	command-t/spec/command-t/scanner/buffer_scanner_spec.rb	/^  def buffer name$/;"	f
buffer_finder	command-t/ruby/command-t/controller.rb	/^    def buffer_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
buffer_maps	ultisnipps/test.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	ultisnipps/test.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buffunc	ctrlp/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buftab	ctrlp/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	ctrlp/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build	vimproc/make_msvc.mak	/^build: autoload\\$(VIMPROC).dll$/;"	t
build_quietly	command-t/multi-spec.sh	/^function build_quietly()$/;"	f
buildpat	ctrlp/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
byfname	ctrlp/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
byte2col	ultisnipps/pythonx/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
byte2col	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
byte2col	ultisnipps/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
bytes2str	vmail/autoload/gmail/util.vim	/^function! s:bytes2str(bytes)$/;"	f
c	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
cCommandTMatcher	command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cache_tagged_files	easytags/autoload/xolox/easytags.vim	/^function! s:cache_tagged_files(context) " {{{3$/;"	f
cache_tagged_files_in	easytags/autoload/xolox/easytags.vim	/^function! s:cache_tagged_files_in(fname, ftime, entries, context) " {{{3$/;"	f
cachefile	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
calculate_match	command-t/ruby/command-t/match.c	/^void calculate_match(VALUE str,$/;"	f
cancel	command-t/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller.quickfix
canonicalize	easytags/autoload/xolox/easytags.vim	/^function! s:canonicalize(filename, context) " {{{2$/;"	f
capture	command-t/ruby/command-t/vim.rb	/^    def self.capture cmd$/;"	F	class:CommandT.VIM
cfiles	command-t/Makefile	/^cfiles      := $(shell find ruby -name '*.c')$/;"	m
cfiles	command-t/Makefile	/^cfiles      := $(shell find ruby -name '*.c')$/;"	t
cflags	command-t/ruby/command-t/Makefile	/^cflags   =  $(optflags) $(debugflags) $(warnflags)$/;"	m
cgray	vim-monochrome/bin/generate.rb	/^def cgray$/;"	f
chCwd	nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changelist	ctrlp/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
cheaders	command-t/Makefile	/^cheaders    := $(shell find ruby -name '*.h')$/;"	m
cheaders	command-t/Makefile	/^cheaders    := $(shell find ruby -name '*.h')$/;"	t
check_cfile	easytags/autoload/xolox/easytags.vim	/^function! s:check_cfile(silent, filter_tags, have_args) " {{{3$/;"	f
check_ruby_1_9_2	command-t/spec/command-t/controller_spec.rb	/^  def check_ruby_1_9_2$/;"	f
checkbuf	ctrlp/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
children	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chknearby	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	ctrlp/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
clean	command-t/Makefile	/^clean:$/;"	t
clean	command-t/ruby/command-t/Makefile	/^clean: clean-so clean-static clean-rb-default clean-rb$/;"	t
clean	supertab/Makefile	/^clean:$/;"	t
clean	vimproc/Makefile	/^clean:$/;"	t
clean	vimproc/make_android.mak	/^clean:$/;"	t
clean	vimproc/make_cygwin.mak	/^clean:$/;"	t
clean	vimproc/make_mac.mak	/^clean:$/;"	t
clean	vimproc/make_mingw32.mak	/^clean:$/;"	t
clean	vimproc/make_mingw64.mak	/^clean:$/;"	t
clean	vimproc/make_msvc.mak	/^clean:$/;"	t
clean	vimproc/make_msvc32.mak	/^clean:$/;"	t
clean	vimproc/make_msvc64.mak	/^clean:$/;"	t
clean	vimproc/make_sunos.mak	/^clean:$/;"	t
clean	vimproc/make_unix.mak	/^clean:$/;"	t
clean-rb	command-t/ruby/command-t/Makefile	/^clean-rb::$/;"	t
clean-rb-default	command-t/ruby/command-t/Makefile	/^clean-rb-default::$/;"	t
clean-so	command-t/ruby/command-t/Makefile	/^clean-so::$/;"	t
clean-static	command-t/ruby/command-t/Makefile	/^clean-static::$/;"	t
clear	command-t/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller.quickfix
clear	command-t/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
clear!	command-t/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clear_list	vmail/autoload/gmail/win.vim	/^function! s:clear_list()$/;"	f
clear_message	misc/autoload/xolox/misc/msg.vim	/^function! s:clear_message() " {{{1$/;"	f
clear_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def clear_snippets(self, triggers):$/;"	m	class:SnippetDictionary
client	ultisnipps/test.py	/^        import win32com.client, win32gui$/;"	i
clone_plugin	ultisnipps/test.py	/^def clone_plugin(plugin):$/;"	f
close	command-t/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
close	vimproc/autoload/proc_w32.c	/^#define close /;"	d	file:
close	vimproc/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
closeChildren	nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
close_all	vimproc/autoload/vimproc.vim	/^function! s:close_all(self) "{{{$/;"	f
close_fds	vimproc/autoload/proc.c	/^close_fds(int fds[3][2])$/;"	f	file:
closed_fdopen	vimproc/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) "{{{$/;"	f
cmd	vimproc/vest/test-popen.vim	/^  let cmd = 'ls'$/;"	v
cmd	vimproc/vest/test-popen.vim	/^  let cmd = ['ls', '-la']$/;"	v
cmd.close	vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.close() "{{{$/;"	f
cmd.open	vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.open() "{{{$/;"	f
cmd.system	vimproc/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) "{{{$/;"	f
cmp_alpha	command-t/ruby/command-t/matcher.c	/^int cmp_alpha(const void *a, const void *b)$/;"	f
cmp_score	command-t/ruby/command-t/matcher.c	/^int cmp_score(const void *a, const void *b)$/;"	f
cnt	vimproc/tools/benchmark.vim	/^let cnt = 25$/;"	v
coerce_argument	misc/autoload/xolox/misc/msg.vim	/^function! s:coerce_argument(value) " {{{1$/;"	f
col2byte	ultisnipps/pythonx/UltiSnips/_vim.py	/^        as_unicode, as_vimencoding$/;"	i
col2byte	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
command	ultisnipps/pythonx/UltiSnips/_vim.py	/^def command(cmd):$/;"	f
command-t.recipe	command-t/Makefile	/^command-t.recipe: $(rubyfiles) $(cfiles) $(cheaders) $(depends) $(txtfiles) $(vimfiles)$/;"	t
command-t.vba	command-t/Makefile	/^command-t.vba: command-t.recipe$/;"	t
common_error	vmail/autoload/gmail/imap.vim	/^function! s:common_error(cmd, res)$/;"	f
common_request	vmail/autoload/gmail/imap.vim	/^function! s:common_request(cmd, timeout)$/;"	f
comparent	ctrlp/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compatibility	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips import compatibility$/;"	i
compensate_for_pum	ultisnipps/autoload/UltiSnips.vim	/^function! s:compensate_for_pum()$/;"	f
compfnlen	ctrlp/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compmatlen	ctrlp/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	ctrlp/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	ctrlp/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	ctrlp/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	ctrlp/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
conserve	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conv	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f	function:escape
convertMigemo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
convertRegep	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
convertSmartcase	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
convertSmartsign	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(re, char) "{{{$/;"	f
convert_args	vimproc/autoload/vimproc.vim	/^function! s:convert_args(args) "{{{$/;"	f
convert_keys	ultisnipps/test.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
convert_snippet	ultisnipps/utils/convert_snipmate_snippets.py	/^def convert_snippet(source):$/;"	f
convert_snippet_contents	ultisnipps/utils/convert_snipmate_snippets.py	/^def convert_snippet_contents(content):$/;"	f
convert_snippet_file	ultisnipps/utils/convert_snipmate_snippets.py	/^def convert_snippet_file(source):$/;"	f
convert_snippets	ultisnipps/utils/convert_snipmate_snippets.py	/^def convert_snippets(source):$/;"	f
convert_value	misc/autoload/xolox/misc/timer.vim	/^function! s:convert_value(value) " {{{1$/;"	f
could_match	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def could_match(self, trigger):$/;"	m	class:SnippetDefinition
counters	easytags/misc/easytags/why-so-slow.py	/^counters = {}$/;"	v
cr	supertab/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
create_context	easytags/autoload/xolox/easytags.vim	/^function! s:create_context() " {{{2$/;"	f
create_directory	ultisnipps/test.py	/^def create_directory(dirname):$/;"	f
create_temp_file	ultisnipps/test.py	/^def create_temp_file(prefix, suffix, content):$/;"	f
ctrlp#acceptfile	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	ctrlp/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	ctrlp/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	ctrlp/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	ctrlp/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	ctrlp/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	ctrlp/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	ctrlp/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	ctrlp/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	ctrlp/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	ctrlp/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	ctrlp/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	ctrlp/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	ctrlp/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	ctrlp/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	ctrlp/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	ctrlp/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	ctrlp/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	ctrlp/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	ctrlp/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	ctrlp/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	ctrlp/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	ctrlp/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	ctrlp/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	ctrlp/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	ctrlp/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	ctrlp/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	ctrlp/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	ctrlp/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
current_text	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def cursor(self): # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def cursor(self, pos): # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor_end	command-t/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller.quickfix
cursor_end	command-t/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	command-t/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller.quickfix
cursor_left	command-t/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_right	command-t/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller.quickfix
cursor_right	command-t/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_start	command-t/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller.quickfix
cursor_start	command-t/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
d	vim-easymotion/t/easymotion_spec.vim	/^        normal! d$/;"	m
datadir	command-t/ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	command-t/ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
debug	ultisnipps/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
debug	vimproc/autoload/proc.c	/^const int debug = 0;$/;"	v
debug	vimproc/autoload/proc_w32.c	/^const int debug = 0;$/;"	v
debugflags	command-t/ruby/command-t/Makefile	/^debugflags = -g$/;"	m
dedent	ultisnipps/test.py	/^from textwrap import dedent$/;"	i
default_open_command	command-t/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller.quickfix
defaultdict	ultisnipps/pythonx/UltiSnips/_diff.py	/^from collections import defaultdict$/;"	i
defaultdict	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^from collections import defaultdict$/;"	i
defaultdict	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^from collections import defaultdict$/;"	i
defaultdict	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from collections import defaultdict$/;"	i
defaultdict	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from collections import defaultdict$/;"	i
define_default_key_mappings	vmail/autoload/gmail/win.vim	/^function! s:define_default_key_mappings(mode)$/;"	f
define_signals	vimproc/autoload/vimproc.vim	/^function! s:define_signals()$/;"	f
delent	ctrlp/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
delete	command-t/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller.quickfix
delete!	command-t/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
deleteBookmark	nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
delimit_output	misc/autoload/xolox/misc/test.vim	/^function! s:delimit_output() " {{{1$/;"	f
delta	ultisnipps/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
depends	command-t/Makefile	/^depends     := $(shell find ruby -name depend)$/;"	m
depends	command-t/Makefile	/^depends     := $(shell find ruby -name depend)$/;"	t
deque	ultisnipps/pythonx/UltiSnips/vim_state.py	/^from collections import deque$/;"	i
description	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
detain_winsock	vimproc/autoload/proc_w32.c	/^detain_winsock()$/;"	f	file:
detect_parsing	ultisnipps/test.py	/^    def detect_parsing(self):$/;"	m	class:VimInterfaceScreen
dfpa	vim-easymotion/t/easymotion_spec.vim	/^        normal! dfpa$/;"	m
dgray	vim-monochrome/bin/generate.rb	/^def dgray$/;"	f
dict2list	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	ctrlp/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_UltiSnips_after	ultisnipps/after/plugin/UltiSnips_after.vim	/^let did_UltiSnips_after=1$/;"	v
did_UltiSnips_autoload	ultisnipps/autoload/UltiSnips.vim	/^let did_UltiSnips_autoload=1$/;"	v
did_UltiSnips_plugin	ultisnipps/plugin/UltiSnips.vim	/^let did_UltiSnips_plugin=1$/;"	v
diff	ultisnipps/pythonx/UltiSnips/_diff.py	/^def diff(a, b, sline=0):$/;"	f
diff	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
diff	ultisnipps/pythonx/UltiSnips/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
diff_in_buffer_length	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
diffpanel.BindAu	undotree/plugin/undotree.vim	/^function! s:diffpanel.BindAu()$/;"	f
diffpanel.CleanUpHighlight	undotree/plugin/undotree.vim	/^function! s:diffpanel.CleanUpHighlight()$/;"	f
diffpanel.GetStatusLine	undotree/plugin/undotree.vim	/^function! s:diffpanel.GetStatusLine()$/;"	f
diffpanel.Hide	undotree/plugin/undotree.vim	/^function! s:diffpanel.Hide()$/;"	f
diffpanel.Init	undotree/plugin/undotree.vim	/^function! s:diffpanel.Init()$/;"	f
diffpanel.ParseDiff	undotree/plugin/undotree.vim	/^function! s:diffpanel.ParseDiff(diffresult)$/;"	f
diffpanel.Show	undotree/plugin/undotree.vim	/^function! s:diffpanel.Show()$/;"	f
diffpanel.Toggle	undotree/plugin/undotree.vim	/^function! s:diffpanel.Toggle()$/;"	f
diffpanel.Update	undotree/plugin/undotree.vim	/^function! s:diffpanel.Update(seq,targetBufnr,targetid)$/;"	f
dircompl	ctrlp/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dirname	vimproc/autoload/vimproc/filepath.vim	/^function! s:dirname(path)$/;"	f
disable	ultisnipps/pythonx/UltiSnips/__init__.py	/^import vim  # pylint:disable=import-error$/;"	i
disable	ultisnipps/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
disable	ultisnipps/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
disable	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
dismrk	ctrlp/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayHelp	nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
dispose	command-t/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
dist	supertab/Makefile	/^dist:$/;"	t
distclean	command-t/ruby/command-t/Makefile	/^distclean: clean distclean-so distclean-static distclean-rb-default distclean-rb$/;"	t
distclean-rb	command-t/ruby/command-t/Makefile	/^distclean-rb::$/;"	t
distclean-rb-default	command-t/ruby/command-t/Makefile	/^distclean-rb-default::$/;"	t
distclean-so	command-t/ruby/command-t/Makefile	/^distclean-so::$/;"	t
distclean-static	command-t/ruby/command-t/Makefile	/^distclean-static::$/;"	t
dldflags	command-t/ruby/command-t/Makefile	/^dldflags = -undefineddynamic_lookup -multiply_definedsuppress $/;"	m
dll_version	vimproc/autoload/vimproc.vim	/^  let dll_version = vimproc#dll_version()$/;"	v
do_unmapping	ultisnipps/test.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	ultisnipps/test.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
docdir	command-t/ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dohighlight	ctrlp/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	ctrlp/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dot_file	command-t/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:
dump_failure	command-t/spec/vim_formatter.rb	/^        def dump_failure counter, failure$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_pending	command-t/spec/vim_formatter.rb	/^        def dump_pending; end$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_summary	command-t/spec/vim_formatter.rb	/^        def dump_summary duration, example_count, failure_count, pending_count$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dvidir	command-t/ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
easytags_gensyncmd	easytags/misc/easytags/highlight.py	/^def easytags_gensyncmd(tagsfiles, filetype, tagkinds, syntaxgroup, prefix, suffix, filters, ignoresyntax):$/;"	f
easytags_ping	easytags/misc/easytags/highlight.py	/^def easytags_ping():$/;"	f
echo	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echo_to_hierarchy	ultisnipps/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
elapsed	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
empty	command-t/ruby/command-t/Makefile	/^empty =$/;"	m
encodeBase64Str	vmail/autoload/gmail/util.vim	/^function! s:encodeBase64Str(data)$/;"	f
end	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
ensure_appropriate_window_selection	command-t/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller.quickfix
ensure_cache_under_limit	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def ensure_cache_under_limit$/;"	f	class:CommandT.FileScanner
err_to_scratch_buffer	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^def err_to_scratch_buffer(func):$/;"	f
errmsg_save	vimproc/vest/test-functions.vim	/^    let errmsg_save = v:exception$/;"	v
error	ultisnipps/pythonx/UltiSnips/__init__.py	/^import vim  # pylint:disable=import-error$/;"	i
error	ultisnipps/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
error	ultisnipps/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
error	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
escape	misc/autoload/xolox/misc/option.vim	/^function! s:escape(s)$/;"	f
escape	ultisnipps/pythonx/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.text import escape$/;"	i
escape	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.text import escape$/;"	i
escape	ultisnipps/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape_for_single_quotes	command-t/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escape_tags	misc/autoload/xolox/misc/option.vim	/^function! s:escape_tags(s)$/;"	f
esctagscmd	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
eval	ultisnipps/pythonx/UltiSnips/_vim.py	/^def eval(text):$/;"	f
evaluate	command-t/spec/spec_helper.rb	/^    def evaluate(*args); end$/;"	f	class:VIM
events	vimproc/autoload/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd
excl	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exec	undotree/plugin/undotree.vim	/^function! s:exec(cmd)$/;"	f
exec_prefix	command-t/ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
execextvar	ctrlp/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
existing	supertab/plugin/supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
exists	command-t/ruby/command-t/vim.rb	/^    def self.exists? str$/;"	F	class:CommandT.VIM
exitIfLast	undotree/plugin/undotree.vim	/^function! s:exitIfLast()$/;"	f
expand	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon(self, value, trigger="", description="", options=""):$/;"	m	class:SnippetManager
expand_or_jump	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expected_error	ultisnipps/test.py	/^    expected_error = ""$/;"	v	class:_VimTest
expected_error	ultisnipps/test.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	ultisnipps/test.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	ultisnipps/test.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	ultisnipps/test.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	ultisnipps/test.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	ultisnipps/test.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	ultisnipps/test.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expr_map	supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
extends	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def extends(self):$/;"	m	class:SnippetDictionary
extout	command-t/ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	command-t/ruby/command-t/Makefile	/^extout_prefix = $/;"	m
f	vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f)	vim-easymotion/t/easymotion_spec.vim	/^        normal f)$/;"	m
f/	vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
f1	vim-easymotion/t/easymotion_spec.vim	/^        normal f1$/;"	m
f:	vim-easymotion/t/easymotion_spec.vim	/^        normal f:$/;"	m
f;	vim-easymotion/t/easymotion_spec.vim	/^        normal f;$/;"	m
f;a	vim-easymotion/t/easymotion_spec.vim	/^        normal f;a$/;"	m
fH	vim-easymotion/t/easymotion_spec.vim	/^        normal fH$/;"	m
fHa	vim-easymotion/t/easymotion_spec.vim	/^        normal fHa$/;"	m
f^	vim-easymotion/t/easymotion_spec.vim	/^        normal f^$/;"	m
faa	vim-easymotion/t/easymotion_spec.vim	/^        normal faa$/;"	m
fb	vim-easymotion/t/easymotion_spec.vim	/^        normal fb$/;"	m
fba	vim-easymotion/t/easymotion_spec.vim	/^        normal fba$/;"	m
fd	vim-easymotion/t/easymotion_spec.vim	/^        normal fd$/;"	m
fd	vimproc/autoload/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd
fdopen	vimproc/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pgroup	vimproc/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pipes	vimproc/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pty	vimproc/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) "{{{$/;"	f
feedkeys	ultisnipps/pythonx/UltiSnips/_vim.py	/^def feedkeys(keys, mode='n'):$/;"	f
fetch_snippets_from_dir	ultisnipps/utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	ultisnipps/utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
fh	vim-easymotion/t/easymotion_spec.vim	/^        normal fh$/;"	m
fha	vim-easymotion/t/easymotion_spec.vim	/^        normal fha$/;"	m
fhb	vim-easymotion/t/easymotion_spec.vim	/^        normal fhb$/;"	m
fields	easytags/misc/easytags/why-so-slow.py	/^  fields = line.split('\\t')$/;"	v
file	vimproc/vest/test-fopen.vim	/^  let file = vimproc#fopen(filename, 'O_RDONLY', 0)$/;"	v
file_finder	command-t/ruby/command-t/controller.rb	/^    def file_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
filename	easytags/misc/easytags/why-so-slow.py	/^    filename = filename.replace(os.environ['HOME'], '~')$/;"	v
filename	easytags/misc/easytags/why-so-slow.py	/^  filename = fields[1]$/;"	v
filename	vimproc/vest/test-fopen.vim	/^  let filename = expand('<sfile>')$/;"	v
files	ultisnipps/test.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	ultisnipps/test.py	/^    files = {}$/;"	v	class:_VimTest
fill_in_whitespace	ultisnipps/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
fill_in_whitespace	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
filter	ctrlp/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
filter_merge_tags	easytags/autoload/xolox/easytags.vim	/^function! s:filter_merge_tags(filter_tags, tagsfile, output, context) " {{{3$/;"	f
finalize	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
finalize	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize$/;"	i
finalize	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize$/;"	i
finalize	vimproc/autoload/vimproc.vim	/^function! s:finalize()$/;"	f
find	command-t/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
findMotion	vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
find_all_snippet_files	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
find_all_snippet_files	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^def find_all_snippet_files(ft):$/;"	f
find_all_snippet_files	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^        find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
find_motion_map_helper	vim-easymotion/plugin/EasyMotion.vim	/^function! s:find_motion_map_helper(motions) "{{{$/;"	f
find_parent_for_new_to	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_snippet_files	ultisnipps/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
find_snippet_files	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^def find_snippet_files(ft, directory):$/;"	f
find_snippet_files	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^        find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
find_tagged_files	easytags/autoload/xolox/easytags.vim	/^function! s:find_tagged_files(entries, context) " {{{3$/;"	f
findcommon	ctrlp/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	ctrlp/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findroot	ctrlp/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
fixup	ultisnipps/utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f	function:unescape
flatten	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flush	command-t/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller.quickfix
flush	command-t/ruby/command-t/finder/file_finder.rb	/^    def flush$/;"	f	class:CommandT.FileFinder
flush	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
fm	vim-easymotion/t/easymotion_spec.vim	/^        normal fm$/;"	m
fn	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
fnesc	ctrlp/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
foa	vim-easymotion/t/easymotion_spec.vim	/^        normal foa$/;"	m
focus	command-t/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	command-t/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
focus	ultisnipps/test.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
foldcase_compare	easytags/autoload/xolox/easytags.vim	/^function! s:foldcase_compare(a, b)$/;"	f
for	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
forkpty	vimproc/autoload/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f
format	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
formatline	ctrlp/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
ft	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
funcref	vimproc/autoload/vimproc.vim	/^function! s:funcref(funcname)$/;"	f
fxa	vim-easymotion/t/easymotion_spec.vim	/^        normal fxa$/;"	m
fz	vim-easymotion/t/easymotion_spec.vim	/^        normal fz$/;"	m
fza	vim-easymotion/t/easymotion_spec.vim	/^        normal fza$/;"	m
g:EasyMotion_add_search_history	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 0)$/;"	v
g:EasyMotion_do_mapping	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_grouping	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_inc_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_landing_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_move_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_show_prompt	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_startofline	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_us	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:NERDTreeAutoDeleteBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:SuperTabClosePreviewOnPopupClose	supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:UltiSnipsEditSplit	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsExpandTrigger	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpForwardTrigger	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsListSnippets	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:clever_f_use_migemo	vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:colors_name	very-monochrome-grey-theme/colors/grey.vim	/^let g:colors_name="grey"$/;"	v
g:colors_name	vim-monochrome/colors/monochrome.vim	/^let g:colors_name = 'monochrome'$/;"	v
g:command_t_loaded	command-t/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:easytags_by_filetype	easytags/plugin/easytags.vim	/^  let g:easytags_by_filetype = ''$/;"	v
g:easytags_events	easytags/plugin/easytags.vim	/^  let g:easytags_events = []$/;"	v
g:easytags_file	easytags/plugin/easytags.vim	/^    let g:easytags_file = '~\/.vimtags'$/;"	v
g:easytags_file	easytags/plugin/easytags.vim	/^    let g:easytags_file = '~\\_vimtags'$/;"	v
g:easytags_ignored_filetypes	easytags/plugin/easytags.vim	/^  let g:easytags_ignored_filetypes = '^tex$'$/;"	v
g:easytags_python_script	easytags/plugin/easytags.vim	/^  let g:easytags_python_script = expand('<sfile>:p:h') . '\/..\/misc\/easytags\/highlight.py'$/;"	v
g:gmail_command	vmail/plugin/gmail.vim	/^  let g:gmail_command = 'openssl'$/;"	v
g:gmail_default_encoding	vmail/plugin/gmail.vim	/^  let g:gmail_default_encoding = "iso-2022-jp"$/;"	v
g:gmail_default_mailbox	vmail/plugin/gmail.vim	/^  let g:gmail_default_mailbox = 'INBOX'$/;"	v
g:gmail_imap	vmail/plugin/gmail.vim	/^  let g:gmail_imap = 'imap.gmail.com:993'$/;"	v
g:gmail_mailbox_trash	vmail/plugin/gmail.vim	/^  let g:gmail_mailbox_trash = "[Gmail]\/trash"$/;"	v
g:gmail_page_size	vmail/plugin/gmail.vim	/^  let g:gmail_page_size = 10$/;"	v
g:gmail_search_key	vmail/autoload/gmail/win.vim	/^let g:gmail_search_key = 'ALL'$/;"	v
g:gmail_signature	vmail/plugin/gmail.vim	/^    let g:gmail_signature = '# ' . g:gmail_user_name . '(by gmail.vim)'$/;"	v
g:gmail_signature	vmail/plugin/gmail.vim	/^    let g:gmail_signature = '# This e-mail was sent by gmail.vim'$/;"	v
g:gmail_smtp	vmail/plugin/gmail.vim	/^  let g:gmail_smtp = 'smtp.gmail.com:465'$/;"	v
g:gmail_timeout	vmail/plugin/gmail.vim	/^  let g:gmail_timeout = 2000$/;"	v
g:gmail_timeout_for_body	vmail/plugin/gmail.vim	/^  let g:gmail_timeout_for_body   = 10000$/;"	v
g:gmail_timeout_for_search	vmail/plugin/gmail.vim	/^  let g:gmail_timeout_for_search = 4000$/;"	v
g:loaded_ctrlp	ctrlp/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	ctrlp/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	ctrlp/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	ctrlp/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	ctrlp/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	ctrlp/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	ctrlp/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_easytags	easytags/plugin/easytags.vim	/^  let g:loaded_easytags = 1$/;"	v
g:loaded_easytags	easytags/plugin/easytags.vim	/^let g:loaded_easytags = 1$/;"	v
g:loaded_gmail	vmail/plugin/gmail.vim	/^let g:loaded_gmail = 1$/;"	v
g:loaded_nerdtree_autoload	nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_vimproc	vimproc/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:tcomment#blank_lines	tComment/autoload/tcomment.vim	/^    let g:tcomment#blank_lines = 2    "{{{2$/;"	v
g:tcomment#filetype_map	tComment/autoload/tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	tComment/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#ignore_comment_def	tComment/autoload/tcomment.vim	/^    let g:tcomment#ignore_comment_def = []   "{{{2$/;"	v
g:tcomment#replacements_c	tComment/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	tComment/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#rstrip_on_uncomment	tComment/autoload/tcomment.vim	/^    let g:tcomment#rstrip_on_uncomment = 1   "{{{2$/;"	v
g:tcomment#syntax_substitute	tComment/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlockC	tComment/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	tComment/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	tComment/autoload/tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_django	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	tComment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	tComment/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	tComment/autoload/tcomment.vim	/^    let g:tcommentInlineC = {$/;"	v
g:tcommentInlineXML	tComment/autoload/tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC	tComment/autoload/tcomment.vim	/^    let g:tcommentLineC = g:tcommentInlineC$/;"	v
g:tcommentMapLeader1	tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderOp1	tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderOp2	tComment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
g:tcommentMaps	tComment/plugin/tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	tComment/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	tComment/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	tComment/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	tComment/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	tComment/plugin/tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
g:timer_enabled	misc/autoload/xolox/misc/timer.vim	/^  let g:timer_enabled = 0$/;"	v
g:timer_verbosity	misc/autoload/xolox/misc/timer.vim	/^  let g:timer_verbosity = 1$/;"	v
g:undotree_DiffAutoOpen	undotree/plugin/undotree.vim	/^    let g:undotree_DiffAutoOpen = 1$/;"	v
g:undotree_DiffCommand	undotree/plugin/undotree.vim	/^    let g:undotree_DiffCommand = "diff"$/;"	v
g:undotree_DiffpanelHeight	undotree/plugin/undotree.vim	/^    let g:undotree_DiffpanelHeight = 10$/;"	v
g:undotree_HighlightChangedText	undotree/plugin/undotree.vim	/^    let g:undotree_HighlightChangedText = 1$/;"	v
g:undotree_HighlightSyntaxAdd	undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxAdd = "DiffAdd"$/;"	v
g:undotree_HighlightSyntaxChange	undotree/plugin/undotree.vim	/^    let g:undotree_HighlightSyntaxChange = "DiffChange"$/;"	v
g:undotree_RelativeTimestamp	undotree/plugin/undotree.vim	/^    let g:undotree_RelativeTimestamp = 1$/;"	v
g:undotree_SetFocusWhenToggle	undotree/plugin/undotree.vim	/^    let g:undotree_SetFocusWhenToggle = 0$/;"	v
g:undotree_SplitWidth	undotree/plugin/undotree.vim	/^    let g:undotree_SplitWidth = 30$/;"	v
g:undotree_TreeNodeShape	undotree/plugin/undotree.vim	/^    let g:undotree_TreeNodeShape = '*'$/;"	v
g:undotree_WindowLayout	undotree/plugin/undotree.vim	/^    let g:undotree_WindowLayout = 1$/;"	v
g:vimproc#dll_path	vimproc/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	vimproc/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	vimproc/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
g:xolox#easytags#version	easytags/autoload/xolox/easytags.vim	/^let g:xolox#easytags#version = '3.4.3'$/;"	v
g:xolox#misc#test#echo	misc/autoload/xolox/misc/test.vim	/^  let g:xolox#misc#test#echo = 'echo'$/;"	v
g:xolox#misc#test#echo	misc/autoload/xolox/misc/test.vim	/^  let g:xolox#misc#test#echo = xolox#misc#escape#shell(xolox#misc#path#merge(expand('<sfile>:p:h'), 'echo.exe'))$/;"	v
g:xolox#misc#version	misc/autoload/xolox/misc.vim	/^let g:xolox#misc#version = '1.8.5'$/;"	v
g:xolox_message_buffer	misc/autoload/xolox/misc/msg.vim	/^  let g:xolox_message_buffer = 100$/;"	v
g:xolox_messages	misc/autoload/xolox/misc/msg.vim	/^  let g:xolox_messages = []$/;"	v
g:yankring_clipboard_monitor	yank/plugin/yankring.vim	/^    let g:yankring_clipboard_monitor = (has('clipboard')?1:0)$/;"	v
g:yankring_default_menu_mode	yank/plugin/yankring.vim	/^    let g:yankring_default_menu_mode = 3$/;"	v
g:yankring_del_v_key	yank/plugin/yankring.vim	/^    let g:yankring_del_v_key = 'd x'$/;"	v
g:yankring_dot_repeat_yank	yank/plugin/yankring.vim	/^    let g:yankring_dot_repeat_yank = (s:cpo_save=~'y'?1:0)$/;"	v
g:yankring_enabled	yank/plugin/yankring.vim	/^    let g:yankring_enabled = 1$/;"	v
g:yankring_history_dir	yank/plugin/yankring.vim	/^            let g:yankring_history_dir = expand(dir)$/;"	v
g:yankring_history_dir	yank/plugin/yankring.vim	/^    let g:yankring_history_dir = expand('$HOME')$/;"	v
g:yankring_history_file	yank/plugin/yankring.vim	/^    let g:yankring_history_file = 'yankring_history'$/;"	v
g:yankring_ignore_duplicate	yank/plugin/yankring.vim	/^    let g:yankring_ignore_duplicate = 1$/;"	v
g:yankring_ignore_operator	yank/plugin/yankring.vim	/^    let g:yankring_ignore_operator = 'g~ gu gU ! = gq g? > < zf g@'$/;"	v
g:yankring_ignore_operator	yank/plugin/yankring.vim	/^let g:yankring_ignore_operator = ' '.g:yankring_ignore_operator.' '$/;"	v
g:yankring_manage_numbered_reg	yank/plugin/yankring.vim	/^    let g:yankring_manage_numbered_reg = 0$/;"	v
g:yankring_manual_clipboard_check	yank/plugin/yankring.vim	/^            let g:yankring_manual_clipboard_check = 0$/;"	v
g:yankring_manual_clipboard_check	yank/plugin/yankring.vim	/^            let g:yankring_manual_clipboard_check = 1$/;"	v
g:yankring_manual_clipboard_check	yank/plugin/yankring.vim	/^    let g:yankring_manual_clipboard_check = 0$/;"	v
g:yankring_map_dot	yank/plugin/yankring.vim	/^    let g:yankring_map_dot = 1$/;"	v
g:yankring_max_display	yank/plugin/yankring.vim	/^    let g:yankring_max_display = 0$/;"	v
g:yankring_max_element_length	yank/plugin/yankring.vim	/^    let g:yankring_max_element_length = 1048576$/;"	v
g:yankring_max_history	yank/plugin/yankring.vim	/^    let g:yankring_max_history = 100$/;"	v
g:yankring_min_element_length	yank/plugin/yankring.vim	/^    let g:yankring_min_element_length = 1$/;"	v
g:yankring_n_keys	yank/plugin/yankring.vim	/^        let g:yankring_n_keys = 'Y D x X'$/;"	v
g:yankring_n_keys	yank/plugin/yankring.vim	/^        let g:yankring_n_keys = 'x yy dd yw dw ye de yE dE yiw diw yaw daw y$ d$ Y D yG dG ygg dgg'$/;"	v
g:yankring_o_keys	yank/plugin/yankring.vim	/^    let g:yankring_o_keys  = 'b B w W e E d h j k l H M L y G ^ 0 $ , ;'$/;"	v
g:yankring_o_keys	yank/plugin/yankring.vim	/^    let g:yankring_o_keys .= ' g_  g^ gm g$ gk gj gg ge gE - + _ '$/;"	v
g:yankring_o_keys	yank/plugin/yankring.vim	/^    let g:yankring_o_keys .= ' iw iW aw aW as is ap ip a] a[ i] i[ a) a( ab i) i( ib a> a< i> i< at it a} a{ aB i} i{ iB a" a'' a` i" i'' i`'$/;"	v
g:yankring_paste_check_default_register	yank/plugin/yankring.vim	/^    let g:yankring_paste_check_default_register = 1$/;"	v
g:yankring_paste_check_default_register	yank/plugin/yankring.vim	/^    let g:yankring_paste_check_default_register = g:yankring_paste_check_default_buffer$/;"	v
g:yankring_paste_n_akey	yank/plugin/yankring.vim	/^    let g:yankring_paste_n_akey = 'p'$/;"	v
g:yankring_paste_n_bkey	yank/plugin/yankring.vim	/^    let g:yankring_paste_n_bkey = 'P'$/;"	v
g:yankring_paste_using_g	yank/plugin/yankring.vim	/^    let g:yankring_paste_using_g = 1$/;"	v
g:yankring_paste_v_akey	yank/plugin/yankring.vim	/^    let g:yankring_paste_v_akey = 'p'$/;"	v
g:yankring_paste_v_bkey	yank/plugin/yankring.vim	/^    let g:yankring_paste_v_bkey = 'P'$/;"	v
g:yankring_persist	yank/plugin/yankring.vim	/^    let g:yankring_persist = 1$/;"	v
g:yankring_record_insert	yank/plugin/yankring.vim	/^    let g:yankring_record_insert = 0$/;"	v
g:yankring_replace_n_nkey	yank/plugin/yankring.vim	/^    let g:yankring_replace_n_nkey = '<C-N>'$/;"	v
g:yankring_replace_n_pkey	yank/plugin/yankring.vim	/^    let g:yankring_replace_n_pkey = '<C-P>'$/;"	v
g:yankring_share_between_instances	yank/plugin/yankring.vim	/^    let g:yankring_share_between_instances = 1$/;"	v
g:yankring_v_key	yank/plugin/yankring.vim	/^    let g:yankring_v_key = 'y'$/;"	v
g:yankring_warn_on_truncate	yank/plugin/yankring.vim	/^    let g:yankring_warn_on_truncate = 1$/;"	v
g:yankring_window_auto_close	yank/plugin/yankring.vim	/^    let g:yankring_window_auto_close = 1$/;"	v
g:yankring_window_height	yank/plugin/yankring.vim	/^    let g:yankring_window_height = 8$/;"	v
g:yankring_window_increment	yank/plugin/yankring.vim	/^    let g:yankring_window_increment = 50$/;"	v
g:yankring_window_use_bottom	yank/plugin/yankring.vim	/^    let g:yankring_window_use_bottom = 1$/;"	v
g:yankring_window_use_horiz	yank/plugin/yankring.vim	/^    let g:yankring_window_use_horiz = 1$/;"	v
g:yankring_window_use_right	yank/plugin/yankring.vim	/^    let g:yankring_window_use_right = 1$/;"	v
g:yankring_window_use_separate	yank/plugin/yankring.vim	/^    let g:yankring_window_use_separate = 1$/;"	v
g:yankring_window_width	yank/plugin/yankring.vim	/^    let g:yankring_window_width = 30$/;"	v
g:yankring_zap_keys	yank/plugin/yankring.vim	/^    let g:yankring_zap_keys = 'f F t T \/ ?'$/;"	v
garbage_collect	vimproc/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) "{{{$/;"	f
getPromptMessage	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
getUniqueID	undotree/plugin/undotree.vim	/^function! s:getUniqueID()$/;"	f
get_bool	command-t/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller.quickfix
get_bool	command-t/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_buffer_data	ultisnipps/test.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_cursor_highlight	command-t/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
get_fingerprint	easytags/autoload/xolox/easytags.vim	/^  function! s:get_fingerprint(cfile, output)$/;"	f
get_list_or_string	command-t/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller.quickfix
get_matching_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def get_matching_snippets(self, trigger, potentially):$/;"	m	class:SnippetDictionary
get_number	command-t/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller.quickfix
get_number	command-t/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_previewed_id	vmail/autoload/gmail/win.vim	/^function! s:get_previewed_id()$/;"	f
get_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_snippets(self, filetypes, before, possible):$/;"	m	class:SnippetSource
get_snippets	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def get_snippets(self, filetypes, before, possible):$/;"	m	class:SnippetFileSource
get_string	command-t/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller.quickfix
get_uid	vmail/autoload/gmail/win.vim	/^function! s:get_uid(l)$/;"	f
getbookmarks	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getenv	ctrlp/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	ctrlp/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	ctrlp/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	ctrlp/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	ctrlp/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getnewmix	ctrlp/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	ctrlp/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	ctrlp/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
gettime	undotree/plugin/undotree.vim	/^function! s:gettime(time)$/;"	f
getundo	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gg	vim-easymotion/t/easymotion_spec.vim	/^        normal! gg$/;"	m
gg0	vim-easymotion/t/easymotion_spec.vim	/^        normal! gg0$/;"	m
glbpath	ctrlp/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import glob$/;"	i
glob	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^import glob$/;"	i
glob	ultisnipps/utils/get_tm_snippets.py	/^import glob$/;"	i
globdirs	ctrlp/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
gmail#changeUser	vmail/autoload/gmail.vim	/^function! gmail#changeUser()$/;"	f
gmail#checkNewMail	vmail/autoload/gmail.vim	/^function! gmail#checkNewMail()$/;"	f
gmail#exit	vmail/autoload/gmail.vim	/^function! gmail#exit()$/;"	f
gmail#imap#archive	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#archive(id)$/;"	f
gmail#imap#clear_password	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#clear_password()$/;"	f
gmail#imap#copy	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#copy(id, mailbox)$/;"	f
gmail#imap#delete	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#delete(id)$/;"	f
gmail#imap#exit	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#exit()$/;"	f
gmail#imap#expunge	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#expunge()$/;"	f
gmail#imap#fetch_body	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#fetch_body(id)$/;"	f
gmail#imap#fetch_header	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#fetch_header(fs, fe)$/;"	f
gmail#imap#get_header	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#get_header()$/;"	f
gmail#imap#get_mailbox	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#get_mailbox()$/;"	f
gmail#imap#list	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#list(mode)$/;"	f
gmail#imap#login	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#login()$/;"	f
gmail#imap#mailbox_index	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#mailbox_index()$/;"	f
gmail#imap#mailbox_line	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#mailbox_line(mb)$/;"	f
gmail#imap#noop	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#noop()$/;"	f
gmail#imap#search	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#search(key)$/;"	f
gmail#imap#select	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#select(mb)$/;"	f
gmail#imap#set_mailbox_line	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#set_mailbox_line(mb, line)$/;"	f
gmail#imap#set_password	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#set_password(pass)$/;"	f
gmail#imap#status	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#status(stat, mailbox)$/;"	f
gmail#imap#status_recent	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#status_recent(mailbox)$/;"	f
gmail#imap#status_unseen	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#status_unseen(mailbox)$/;"	f
gmail#imap#store_answered	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_answered(id, sign)$/;"	f
gmail#imap#store_deleted	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_deleted(id, sign)$/;"	f
gmail#imap#store_draft	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_draft(id, sign)$/;"	f
gmail#imap#store_flagged	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_flagged(id, sign)$/;"	f
gmail#imap#store_recent	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_recent(id, sign)$/;"	f
gmail#imap#store_seen	vmail/autoload/gmail/imap.vim	/^function! gmail#imap#store_seen(id, sign)$/;"	f
gmail#smtp#open	vmail/autoload/gmail/smtp.vim	/^function! gmail#smtp#open(to, cc, subject, body)$/;"	f
gmail#smtp#send	vmail/autoload/gmail/smtp.vim	/^function! gmail#smtp#send()$/;"	f
gmail#smtp#set_password	vmail/autoload/gmail/smtp.vim	/^function! gmail#smtp#set_password(pass)$/;"	f
gmail#start	vmail/autoload/gmail.vim	/^function! gmail#start()$/;"	f
gmail#util#confirm	vmail/autoload/gmail/util.vim	/^function! gmail#util#confirm(msg)$/;"	f
gmail#util#decodeBase64	vmail/autoload/gmail/util.vim	/^function! gmail#util#decodeBase64(data)$/;"	f
gmail#util#decodeMime	vmail/autoload/gmail/util.vim	/^function! gmail#util#decodeMime(str)$/;"	f
gmail#util#decodeQuotedPrintable	vmail/autoload/gmail/util.vim	/^function! gmail#util#decodeQuotedPrintable(data)$/;"	f
gmail#util#decodeUtf7	vmail/autoload/gmail/util.vim	/^function! gmail#util#decodeUtf7(str)$/;"	f
gmail#util#encodeBase64	vmail/autoload/gmail/util.vim	/^function! gmail#util#encodeBase64(bytes)$/;"	f
gmail#util#encodeMime	vmail/autoload/gmail/util.vim	/^function! gmail#util#encodeMime(str)$/;"	f
gmail#util#encodeUtf7	vmail/autoload/gmail/util.vim	/^function! gmail#util#encodeUtf7(str)$/;"	f
gmail#util#error	vmail/autoload/gmail/util.vim	/^function! gmail#util#error(msg)$/;"	f
gmail#util#message	vmail/autoload/gmail/util.vim	/^function! gmail#util#message(msg)$/;"	f
gmail#util#neglect_htmltag	vmail/autoload/gmail/util.vim	/^function! gmail#util#neglect_htmltag()$/;"	f
gmail#util#response	vmail/autoload/gmail/util.vim	/^function! gmail#util#response(vp, end, timeout)$/;"	f
gmail#util#str2bytes	vmail/autoload/gmail/util.vim	/^function! gmail#util#str2bytes(str)$/;"	f
gmail#win#all_close	vmail/autoload/gmail/win.vim	/^function! gmail#win#all_close()$/;"	f
gmail#win#archive	vmail/autoload/gmail/win.vim	/^function! gmail#win#archive()$/;"	f
gmail#win#back	vmail/autoload/gmail/win.vim	/^function! gmail#win#back()$/;"	f
gmail#win#clear	vmail/autoload/gmail/win.vim	/^function! gmail#win#clear()$/;"	f
gmail#win#click	vmail/autoload/gmail/win.vim	/^function! gmail#win#click()$/;"	f
gmail#win#delete	vmail/autoload/gmail/win.vim	/^function! gmail#win#delete()$/;"	f
gmail#win#get_selections	vmail/autoload/gmail/win.vim	/^function! gmail#win#get_selections()$/;"	f
gmail#win#hilightLine	vmail/autoload/gmail/win.vim	/^function! gmail#win#hilightLine(name, line)$/;"	f
gmail#win#log	vmail/autoload/gmail/win.vim	/^function! gmail#win#log(msg)$/;"	f
gmail#win#mark_readed	vmail/autoload/gmail/win.vim	/^function! gmail#win#mark_readed()$/;"	f
gmail#win#mark_unread	vmail/autoload/gmail/win.vim	/^function! gmail#win#mark_unread()$/;"	f
gmail#win#mode	vmail/autoload/gmail/win.vim	/^function! gmail#win#mode()$/;"	f
gmail#win#more_list	vmail/autoload/gmail/win.vim	/^function! gmail#win#more_list()$/;"	f
gmail#win#newly_list	vmail/autoload/gmail/win.vim	/^function! gmail#win#newly_list()$/;"	f
gmail#win#next	vmail/autoload/gmail/win.vim	/^function! gmail#win#next()$/;"	f
gmail#win#open	vmail/autoload/gmail/win.vim	/^function! gmail#win#open(mode)$/;"	f
gmail#win#prev	vmail/autoload/gmail/win.vim	/^function! gmail#win#prev()$/;"	f
gmail#win#search	vmail/autoload/gmail/win.vim	/^function! gmail#win#search()$/;"	f
gmail#win#select	vmail/autoload/gmail/win.vim	/^function! gmail#win#select(line, direct, mark)$/;"	f
gmail#win#select_all	vmail/autoload/gmail/win.vim	/^function! gmail#win#select_all()$/;"	f
gmail#win#select_mailbox	vmail/autoload/gmail/win.vim	/^function! gmail#win#select_mailbox(mb)$/;"	f
gmail#win#setline	vmail/autoload/gmail/win.vim	/^function! gmail#win#setline(idx, txt)$/;"	f
gmail#win#tab	vmail/autoload/gmail/win.vim	/^function! gmail#win#tab(direct)$/;"	f
gmail#win#update	vmail/autoload/gmail/win.vim	/^function! gmail#win#update()$/;"	f
gmail#win#update_all	vmail/autoload/gmail/win.vim	/^function! gmail#win#update_all()$/;"	f
gmail#win#update_cur_mailbox	vmail/autoload/gmail/win.vim	/^function! gmail#win#update_cur_mailbox(mb)$/;"	f
gmail#win#update_list	vmail/autoload/gmail/win.vim	/^function! gmail#win#update_list(page, clear)$/;"	f
gmail#win#update_mailboxs	vmail/autoload/gmail/win.vim	/^function! gmail#win#update_mailboxs(mode)$/;"	f
guess_edit	ultisnipps/pythonx/UltiSnips/_diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
guess_edit	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
guess_edit	ultisnipps/pythonx/UltiSnips/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
h	vim-easymotion/t/easymotion_spec.vim	/^        normal! h$/;"	m
handleEmpty	vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
handleLeftClick	nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_error	misc/autoload/xolox/misc/open.vim	/^function! s:handle_error(cmd, output) " {{{1$/;"	f
handle_extends	ultisnipps/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_extends	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file._common import handle_extends$/;"	i
handle_extends	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips.snippet.source.file._common import handle_extends$/;"	i
handle_key	command-t/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller.quickfix
has_conceal	command-t/ruby/command-t/vim.rb	/^    def self.has_conceal?$/;"	F	class:CommandT.VIM
has_option	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_syntax	command-t/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
has_updates	easytags/autoload/xolox/easytags.vim	/^function! s:has_updates(cfile, output)$/;"	f
has_vimproc	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
hashlib	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^import hashlib$/;"	i
haystack_len	command-t/ruby/command-t/match.c	/^    long    haystack_len;           \/\/ length of same$/;"	m	struct:__anon1	file:
haystack_p	command-t/ruby/command-t/match.c	/^    char    *haystack_p;            \/\/ pointer to the path string to be searched$/;"	m	struct:__anon1	file:
hd2list	vimproc/autoload/vimproc.vim	/^function! s:hd2list(hd)$/;"	f
hd2str	vimproc/autoload/vimproc.vim	/^function! s:hd2str(hd)$/;"	f
hd2str_lua	vimproc/autoload/vimproc.vim	/^function! s:hd2str_lua(hd)$/;"	f
hdrdir	command-t/ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
head_tail	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	ultisnipps/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
header	command-t/ruby/command-t/extconf.rb	/^def header(item)$/;"	f
headntail	ctrlp/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
hi	vim-monochrome/bin/generate.rb	/^def hi(group, options={})$/;"	f
hide	command-t/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	command-t/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
highlight	ctrlp/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_with_python	easytags/autoload/xolox/easytags.vim	/^function! s:highlight_with_python(syntax_group, tagkind) " {{{2$/;"	f
htmldir	command-t/ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
htmlentitydefs	ultisnipps/utils/get_tm_snippets.py	/^import htmlentitydefs$/;"	i
i	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
iabbrev_map	supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
ifilter	ctrlp/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	ctrlp/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
ignores	ultisnipps/test.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	ultisnipps/test.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	ultisnipps/test.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	ultisnipps/test.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
import	ultisnipps/pythonx/UltiSnips/__init__.py	/^import vim  # pylint:disable=import-error$/;"	i
import	ultisnipps/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
import	ultisnipps/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
import	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
import	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:import(name, ...)$/;"	f
in	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
inc_highlight	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
includedir	command-t/ruby/command-t/Makefile	/^includedir = \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.9.sdk$(prefix)\/include$/;"	m
indent_to_spaces	ultisnipps/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
infile	easytags/misc/easytags/why-so-slow.py	/^infile = open(os.path.expanduser(tagsfile))$/;"	v
infodir	command-t/ruby/command-t/Makefile	/^infodir = $(DESTDIR)\/usr\/share\/info$/;"	m
initVariable	nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initial_line	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	command-t/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	command-t/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	command-t/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	command-t/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	command-t/ruby/command-t/finder/jump_finder.rb	/^    def initialize$/;"	f	class:CommandT.JumpFinder
initialize	command-t/ruby/command-t/finder/tag_finder.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagFinder
initialize	command-t/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	command-t/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagScanner
initialize	command-t/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
insertcache	ctrlp/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	ctrlp/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
install	command-t/ruby/command-t/Makefile	/^install: install-so install-rb$/;"	t
install	supertab/Makefile	/^install: supertab.vmb$/;"	t
install-rb	command-t/ruby/command-t/Makefile	/^install-rb: pre-install-rb install-rb-default$/;"	t
install-rb-default	command-t/ruby/command-t/Makefile	/^install-rb-default: pre-install-rb-default$/;"	t
install-so	command-t/ruby/command-t/Makefile	/^install-so: $(DLLIB) .\/.RUBYARCHDIR.time$/;"	t
instantiate	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	ultisnipps/pythonx/UltiSnips/snippet/definition/ultisnips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
is_absolute	vimproc/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path)$/;"	f
is_case_tolerant	vimproc/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant()$/;"	f
is_catched	vimproc/vest/test-parser.vim	/^      let is_catched = 1$/;"	v
is_catched	vimproc/vest/test-parser.vim	/^    let is_catched = 0$/;"	v
is_cmdwin	vim-easymotion/autoload/EasyMotion.vim	/^function! s:is_cmdwin() "{{{$/;"	f
is_complete_edit	ultisnipps/pythonx/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_focused	ultisnipps/test.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_killed	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_process_running	ultisnipps/test.py	/^def is_process_running(pid):$/;"	f
is_pseudo_device	vimproc/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) "{{{$/;"	f
is_response_error	vmail/autoload/gmail/imap.vim	/^function! s:is_response_error(res)$/;"	f
iscmdwin	ctrlp/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
ispathitem	ctrlp/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
join	vimproc/autoload/vimproc/filepath.vim	/^function! s:join(...)$/;"	f
join_entry	easytags/autoload/xolox/easytags.vim	/^function! s:join_entry(value)$/;"	f
jumpToFirstChild	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
jump_backwards	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_finder	command-t/ruby/command-t/controller.rb	/^    def jump_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
jump_forwards	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jumps	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def jumps$/;"	f	class:CommandT.JumpScanner
key_mapping	vim-easymotion/plugin/EasyMotion.vim	/^function! s:key_mapping(lhs, rhs)$/;"	f
keys	ultisnipps/test.py	/^            " allaway" + JF + "Third" + JF + "Last"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	ultisnipps/test.py	/^            "Lets replace it again" + JF + "Blah" + JF + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	ultisnipps/test.py	/^            "Lets replace it again" + JF + "Blah" + JF + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	ultisnipps/test.py	/^            "Nupl" + JF + "Nox"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	ultisnipps/test.py	/^            "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	ultisnipps/test.py	/^            "hello frac" + EX + JF + JF + "world"$/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	ultisnipps/test.py	/^            "testhallo\\n"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	ultisnipps/test.py	/^            + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	ultisnipps/test.py	/^            COMPL_ACCEPT + " some more"$/;"	v	class:Completion_SimpleExample_ECR
keys	ultisnipps/test.py	/^            ESC + "3k0itest" + EX + ESC + "uiupsy"$/;"	v	class:Undo_RemoveWholeSnippet
keys	ultisnipps/test.py	/^            EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	ultisnipps/test.py	/^            JF + "blah" + JF + "end"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	ultisnipps/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	ultisnipps/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	ultisnipps/test.py	/^            JF + "end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	ultisnipps/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	ultisnipps/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	ultisnipps/test.py	/^            JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	ultisnipps/test.py	/^            JF + "test" + JF + "one more" + JF$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	ultisnipps/test.py	/^            JF + "three" + JF + "four" + JF + "end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	ultisnipps/test.py	/^            JF + "three" + JF + "four" + JF + "end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	ultisnipps/test.py	/^            JF + "ups" + JF + "three" + JF + "end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	ultisnipps/test.py	/^            JF + "ups" + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	ultisnipps/test.py	/^            JF + "ups" + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	ultisnipps/test.py	/^            JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	ultisnipps/test.py	/^           "test" + EX + "hallo->"$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	ultisnipps/test.py	/^           JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	ultisnipps/test.py	/^     keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	ultisnipps/test.py	/^     keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	ultisnipps/test.py	/^     keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	ultisnipps/test.py	/^     keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	ultisnipps/test.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	ultisnipps/test.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	ultisnipps/test.py	/^    keys = "    test" + EX + "\\n"+ "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	ultisnipps/test.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	ultisnipps/test.py	/^    keys = "    test" + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	ultisnipps/test.py	/^    keys = "    test" + EX$/;"	v	class:PythonCode_MultilineIndented
keys	ultisnipps/test.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	ultisnipps/test.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	ultisnipps/test.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	ultisnipps/test.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	ultisnipps/test.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	ultisnipps/test.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	ultisnipps/test.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	ultisnipps/test.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	ultisnipps/test.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	ultisnipps/test.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	ultisnipps/test.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	ultisnipps/test.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	ultisnipps/test.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = ""$/;"	v	class:_VimTest
keys	ultisnipps/test.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	ultisnipps/test.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	ultisnipps/test.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	ultisnipps/test.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	ultisnipps/test.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	ultisnipps/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	ultisnipps/test.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	ultisnipps/test.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	ultisnipps/test.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	ultisnipps/test.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	ultisnipps/test.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	ultisnipps/test.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	ultisnipps/test.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	ultisnipps/test.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	ultisnipps/test.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	ultisnipps/test.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	ultisnipps/test.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	ultisnipps/test.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	ultisnipps/test.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	ultisnipps/test.py	/^    keys = "ab" + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	ultisnipps/test.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	ultisnipps/test.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	ultisnipps/test.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	ultisnipps/test.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	ultisnipps/test.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	ultisnipps/test.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	ultisnipps/test.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	ultisnipps/test.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	ultisnipps/test.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	ultisnipps/test.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	ultisnipps/test.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	ultisnipps/test.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	ultisnipps/test.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	ultisnipps/test.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	ultisnipps/test.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	ultisnipps/test.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	ultisnipps/test.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + "mmm" + JF + "n" + JF + "done" + ESC + "o"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	ultisnipps/test.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v	class:snipMate_Visual_Simple
keys	ultisnipps/test.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	ultisnipps/test.py	/^    keys = "blahfasel" + ESC + "v" + 4*ARR_L + "xotest" + EX + ESC + ARR_U + "v0xo" + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	ultisnipps/test.py	/^    keys = "def" + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	ultisnipps/test.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v
keys	ultisnipps/test.py	/^    keys = "fold" + EX + "hi"$/;"	v
keys	ultisnipps/test.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	ultisnipps/test.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v	class:snipMate_TestMirrors
keys	ultisnipps/test.py	/^    keys = "for" + EX + "k" + JF$/;"	v
keys	ultisnipps/test.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	ultisnipps/test.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	ultisnipps/test.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	ultisnipps/test.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "haselnut" + 2*ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + '\\nhallo' + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	ultisnipps/test.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	ultisnipps/test.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	ultisnipps/test.py	/^    keys = "hello" + EX + "2\\n"$/;"	v	class:snipMate_MultiMatches
keys	ultisnipps/test.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	ultisnipps/test.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippet
keys	ultisnipps/test.py	/^    keys = "hello" + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	ultisnipps/test.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	ultisnipps/test.py	/^    keys = "iab\\\\ t" + EX$/;"	v	class:Plugin_Neocomplete_BugTest
keys	ultisnipps/test.py	/^    keys = "if" + EX + "one\\n\\ttwo\\n\\tthree" + ESC + ARR_U*2 + "V" + ARR_D + EX + "\\tif" + EX$/;"	v	class:Visual_LineSelect_DedentLine
keys	ultisnipps/test.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	ultisnipps/test.py	/^    keys = "inc" + EX + "foo"$/;"	v
keys	ultisnipps/test.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	ultisnipps/test.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + "Hallo" + JF + "Hi" + JF + "endone" + JF + "two" + JF + "totalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + '\\nHallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	ultisnipps/test.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	ultisnipps/test.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	ultisnipps/test.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	ultisnipps/test.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	ultisnipps/test.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	ultisnipps/test.py	/^    keys = "superlo\\ty"$/;"	v	class:Plugin_YouCompleteMe_IntegrationTest
keys	ultisnipps/test.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	ultisnipps/test.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	ultisnipps/test.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	ultisnipps/test.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	ultisnipps/test.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	ultisnipps/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	ultisnipps/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	ultisnipps/test.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	ultisnipps/test.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	ultisnipps/test.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	ultisnipps/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	ultisnipps/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	ultisnipps/test.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	ultisnipps/test.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	ultisnipps/test.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	ultisnipps/test.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	ultisnipps/test.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	ultisnipps/test.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	ultisnipps/test.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	ultisnipps/test.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	ultisnipps/test.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Ball"$/;"	v
keys	ultisnipps/test.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "This is a longer text that should wrap as formatoptions are  enabled" + JF + "end"$/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	ultisnipps/test.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	ultisnipps/test.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	ultisnipps/test.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	ultisnipps/test.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	ultisnipps/test.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	ultisnipps/test.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	ultisnipps/test.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	ultisnipps/test.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	ultisnipps/test.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	ultisnipps/test.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	ultisnipps/test.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	ultisnipps/test.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "text" + 3*ARR_U + 6*ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "this" + 2*ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	ultisnipps/test.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	ultisnipps/test.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "u" + "i" + JF + "\\t"$/;"	v	class:DeleteSnippetInsertion1
keys	ultisnipps/test.py	/^    keys = "test" + EX + ESC + "u" + "inothing"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	ultisnipps/test.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "and more"$/;"	v
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "hi"$/;"	v	class:snipMate_NoNestedTabstops
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB+JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	ultisnipps/test.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_MultiAppend
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleAppend
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:Python_WeirdScoping_Error
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:snipMate_Interpolation
keys	ultisnipps/test.py	/^    keys = "test" + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	ultisnipps/test.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	ultisnipps/test.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
keys	ultisnipps/test.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	ultisnipps/test.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	ultisnipps/test.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	ultisnipps/test.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	ultisnipps/test.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	ultisnipps/test.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	ultisnipps/test.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	ultisnipps/test.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	ultisnipps/test.py	/^    keys = 'te ül' + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	ultisnipps/test.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	ultisnipps/test.py	/^    keys = 'te' + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	ultisnipps/test.py	/^    keys = 'teüst' + EX$/;"	v	class:Snippet_With_Umlauts
keys	ultisnipps/test.py	/^    keys = ( "blumba" + EX + ESC +$/;"	v	class:AddNewSnippetSource
keys	ultisnipps/test.py	/^    keys = ( "longtextlongtext\\n" +$/;"	v	class:Plugin_SuperTab_SimpleTest
keys	ultisnipps/test.py	/^    keys = ("te'=(UltiSnips#SnippetsInCurrentScope()[{}]".format(akey) + ')\\n')$/;"	v	class:VerifyVimDict3
keys	ultisnipps/test.py	/^    keys = ("test" + EX + "This is a longer snippet that should wrap properly "$/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = ("test" + EX + "This is a longersnippet that should wrap properly")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	ultisnipps/test.py	/^    keys = ('te"=(UltiSnips#SnippetsInCurrentScope()[{}]'.format(akey) + ')\\n')$/;"	v	class:VerifyVimDict2
keys	ultisnipps/test.py	/^    keys = ('test=(type(UltiSnips#SnippetsInCurrentScope()) . len(UltiSnips#SnippetsInCurrentScope()) . ' +$/;"	v	class:VerifyVimDict1
keys	ultisnipps/test.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	ultisnipps/test.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
l	vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
lash	ctrlp/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	ctrlp/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lasterror	vimproc/autoload/proc_w32.c	/^lasterror()$/;"	f	file:
lastvisual	ctrlp/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
launch	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
ldflags	command-t/ruby/command-t/Makefile	/^ldflags  = -L. -L\/usr\/local\/lib$/;"	m
leader	yank/plugin/yankring.vim	/^        let leader = g:mapleader$/;"	v
leader	yank/plugin/yankring.vim	/^    let leader = '\\'$/;"	v
leader	yank/plugin/yankring.vim	/^    let leader = escape(leader, '\\')$/;"	v
leave	command-t/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller.quickfix
leave	command-t/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
leavepre	ctrlp/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
len	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
lex	vimproc/vest/test-lexer.vim	/^    let lex = vimproc#lexer#init_lexer('1234 5678')$/;"	v
lexer.advance	vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.advance()$/;"	f
lexer.lex_digit	vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit()$/;"	f
lexer.skip_spaces	vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces()$/;"	f
lexer.token	vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.token()$/;"	f
lexer.value	vimproc/autoload/vimproc/lexer.vim	/^function! s:lexer.value()$/;"	f
lgray	vim-monochrome/bin/generate.rb	/^def lgray$/;"	f
libcall	vimproc/autoload/vimproc.vim	/^function! s:libcall(func, args) "{{{$/;"	f
libdir	command-t/ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	command-t/ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	command-t/ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
line_contains_filename?	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def line_contains_filename? line$/;"	f	class:CommandT.JumpScanner
line_index	ultisnipps/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def line_till_cursor(self): # pylint:disable=no-self-use$/;"	m	class:VimBuffer
lineout	ctrlp/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	command-t/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
list2hd	vimproc/autoload/vimproc.vim	/^function! s:list2hd(lis)$/;"	f
list2str	vimproc/autoload/vimproc.vim	/^function! s:list2str(lis)$/;"	f
list_matches	command-t/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
list_snippets	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
load	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:load(...) dict$/;"	f
load_smart_dict	vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
loaded_nerd_tree	nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_supertab	supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_tcomment	tComment/plugin/tcomment.vim	/^let loaded_tcomment = 300$/;"	v
loaded_yankring	yank/plugin/yankring.vim	/^let loaded_yankring = 170$/;"	v
localedir	command-t/ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localstatedir	command-t/ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
location	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
lock	command-t/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
log	ctrlp/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
log	undotree/plugin/undotree.vim	/^function! s:log(msg)$/;"	f
logout	vmail/autoload/gmail/imap.vim	/^function! s:logout()$/;"	f
looped_symlink?	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def looped_symlink? path$/;"	f	class:CommandT.FileScanner
lsCmd	ctrlp/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
lseek	vimproc/autoload/proc_w32.c	/^#define lseek /;"	d	file:
mCommandT	command-t/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
main	easytags/misc/easytags/normalize-tags.py	/^def main(arguments):$/;"	f
main	ultisnipps/test.py	/^    def main():$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:make(prompt)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Enter.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/HistAdd.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Scroll.vim	/^function! s:make()$/;"	f
make_plain	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:make_plain(prompt)$/;"	f
make_simple	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:make_simple(prompt)$/;"	f
make_special_chars	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
mandir	command-t/ruby/command-t/Makefile	/^mandir = $(DESTDIR)\/usr\/share\/man$/;"	m
map	command-t/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
map	supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map_dict	supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
maps	ultisnipps/test.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	ultisnipps/test.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	ultisnipps/test.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	ultisnipps/test.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	ultisnipps/test.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	ultisnipps/test.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
match_limit	command-t/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
match_t	command-t/ruby/command-t/match.h	/^} match_t;$/;"	t	typeref:struct:__anon2
match_text_for_idx	command-t/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_thread	command-t/ruby/command-t/matcher.c	/^void *match_thread(void *thread_args)$/;"	f
match_window_opts	ctrlp/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
match_with_syntax_highlight	command-t/ruby/command-t/match_window.rb	/^    def match_with_syntax_highlight match$/;"	f	class:CommandT.MatchWindow
matched	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matcher	command-t/spec/command-t/matcher_spec.rb	/^  def matcher(*paths)$/;"	f
matches	command-t/ruby/command-t/matcher.c	/^    match_t *matches;$/;"	m	struct:__anon3	file:
matches	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matches(self, trigger):$/;"	m	class:SnippetDefinition
matches=	command-t/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchfname	ctrlp/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchinfo_t	command-t/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
matchlens	ctrlp/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	ctrlp/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	ctrlp/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	ctrlp/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max	vimproc/tools/leak_check.vim	/^let max = 2048$/;"	v
max_height	command-t/ruby/command-t/controller.rb	/^    def max_height$/;"	f	class:CommandT.Controller.quickfix
max_score_per_char	command-t/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
maxf	ctrlp/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
memo	command-t/ruby/command-t/match.c	/^    double  *memo;                  \/\/ memoization$/;"	m	struct:__anon1	file:
menuPriority	yank/plugin/yankring.vim	/^        let menuPriority = ''$/;"	v
menuPriority	yank/plugin/yankring.vim	/^        let menuPriority = exists("g:yankring_menu_priority") ? yankring_menu_priority : ''$/;"	v
menuRoot	yank/plugin/yankring.vim	/^        let menuRoot = '&Plugin.&YankRing'$/;"	v
menuRoot	yank/plugin/yankring.vim	/^        let menuRoot = '&YankRing'$/;"	v
menuRoot	yank/plugin/yankring.vim	/^        let menuRoot = 'YankRing'$/;"	v
menuRoot	yank/plugin/yankring.vim	/^        let menuRoot = exists("g:yankring_menu_root") ? g:yankring_menu_root : '&Plugin.&YankRing'$/;"	v
mergelists	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
mfunc	ctrlp/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	ctrlp/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
min_height	command-t/ruby/command-t/controller.rb	/^    def min_height$/;"	f	class:CommandT.Controller.quickfix
mixedsort	ctrlp/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mkline	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mmode	ctrlp/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
mode	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
modevar	ctrlp/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
module.complete	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
module.enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.enter(...)$/;"	f
module.get_complete_words	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
module.histories	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
module.is_insert	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_insert(char)$/;"	f
module.on_char	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_char(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Enter.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Scroll.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/HistAdd.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.on_leave(...)$/;"	f
module.search_hl_off	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_off()$/;"	f
module.search_hl_on	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^function! s:module.search_hl_on(pattern)$/;"	f
module_no_insert_special_chars	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^function! s:module_no_insert_special_chars()$/;"	f
move	ultisnipps/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
move_cursor_to_selected_line	command-t/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
msg	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	ctrlp/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multipliers	ctrlp/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
namedtuple	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^from collections import namedtuple$/;"	i
narrowable	ctrlp/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
needle_len	command-t/ruby/command-t/match.c	/^    long    needle_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
needle_p	command-t/ruby/command-t/match.c	/^    char    *needle_p;              \/\/ pointer to search string (needle)$/;"	m	struct:__anon1	file:
neocomplete#sources#ultisnips#define	ultisnipps/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define()$/;"	f
nerdtree#bookmarkNode	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
never_show_dot_files	command-t/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
never_show_dot_files	command-t/ruby/command-t/matcher.c	/^    VALUE never_show_dot_files;$/;"	m	struct:__anon3	file:
new	undotree/plugin/undotree.vim	/^function! s:new(obj)$/;"	f
new_scratch_buffer	ultisnipps/pythonx/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
newcache	ctrlp/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
next	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    next = __next__  # for python2$/;"	v	class:_TextIterator
next	ultisnipps/pythonx/UltiSnips/text.py	/^    next = __next__  # for python2$/;"	v	class:LineIterator
no_unidecode_available	ultisnipps/test.py	/^def no_unidecode_available():$/;"	f
nocache	ctrlp/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	ctrlp/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	ctrlp/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
node.Init	undotree/plugin/undotree.vim	/^function! s:node.Init()$/;"	f
nonamecond	ctrlp/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
normalize	easytags/misc/easytags/normalize-tags.py	/^def normalize(tagsfile):$/;"	f
normalize_mail	vmail/autoload/gmail/smtp.vim	/^function! s:normalize_mail(t)$/;"	f
nosort	ctrlp/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	ctrlp/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
ntabs_to_proper_indent	ultisnipps/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
number	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def number(self): # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number	ultisnipps/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def number(self):$/;"	m	class:TabStop
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (0,3)$/;"	v	class:MovePosition_DelSameLine1
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	ultisnipps/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
off_screen_search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
offset	ctrlp/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
oldincludedir	command-t/ruby/command-t/Makefile	/^oldincludedir = \/usr\/include$/;"	m
open	vimproc/autoload/proc_w32.c	/^#define open /;"	d	file:
open	vmail/autoload/gmail/win.vim	/^function! s:open(mode)$/;"	f
openExplorer	nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
open_ascii_file	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    def open_ascii_file(filename, mode):$/;"	f
open_selection	command-t/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
open_selection	command-t/ruby/command-t/finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.Finder
open_selection	command-t/ruby/command-t/finder/tag_finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.TagFinder
openfile	ctrlp/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
openpty	vimproc/autoload/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f
opt	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
optflags	command-t/ruby/command-t/Makefile	/^optflags = $/;"	m
optparse	ultisnipps/test.py	/^    import optparse$/;"	i
opts	ctrlp/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
ordered_matches	command-t/spec/command-t/matcher_spec.rb	/^    def ordered_matches(paths, query)$/;"	f
origin	vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
os	easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
os	easytags/misc/easytags/why-so-slow.py	/^import os, sys$/;"	i
os	ultisnipps/pythonx/UltiSnips/snippet/source/file/_base.py	/^import os$/;"	i
os	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import os$/;"	i
os	ultisnipps/pythonx/UltiSnips/snippet/source/file/ultisnips.py	/^import os$/;"	i
os	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^import os$/;"	i
os	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^import os$/;"	i
os	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^import os$/;"	i
os	ultisnipps/test.py	/^import os$/;"	i
os	ultisnipps/utils/convert_snipmate_snippets.py	/^import os$/;"	i
os	ultisnipps/utils/get_tm_snippets.py	/^import os$/;"	i
os	vimproc/tools/fork.py	/^import os$/;"	i
out	vimproc/vest/test-socket.vim	/^    let out = sock.read(-1, 100)$/;"	v
out	vimproc/vest/test-socket.vim	/^  let out = sock.read(-1, 100)$/;"	v
output	ultisnipps/test.py	/^    output = ""$/;"	v	class:_VimTest
output	vimproc/vest/test-popen.vim	/^  let output = vimproc#system('echo "foo" > test.txt | echo "bar"')$/;"	v
overwrite	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite(self, gtext=None):$/;"	m	class:TextObject
padding_for_selected_match	command-t/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
panel.Hide	undotree/plugin/undotree.vim	/^function! s:panel.Hide()$/;"	f
panel.Init	undotree/plugin/undotree.vim	/^function! s:panel.Init()$/;"	f
panel.IsVisible	undotree/plugin/undotree.vim	/^function! s:panel.IsVisible()$/;"	f
panel.SetFocus	undotree/plugin/undotree.vim	/^function! s:panel.SetFocus()$/;"	f
parse_and_instantiate	ultisnipps/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.parsing.snipmate import parse_and_instantiate$/;"	i
parse_and_instantiate	ultisnipps/pythonx/UltiSnips/snippet/definition/ultisnips.py	/^from UltiSnips.snippet.parsing.ultisnips import parse_and_instantiate$/;"	i
parse_and_instantiate	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	ultisnipps/test.py	/^    def parse_args():$/;"	f
parse_back_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) "{{{$/;"	f
parse_block	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_block(script) "{{{$/;"	f
parse_cmdline	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) "{{{$/;"	f
parse_content	ultisnipps/utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
parse_content_transfer_encoding	vmail/autoload/gmail/imap.vim	/^function! s:parse_content_transfer_encoding(line)$/;"	f
parse_content_type	vmail/autoload/gmail/imap.vim	/^function! s:parse_content_type(line)$/;"	f
parse_double_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) "{{{$/;"	f
parse_equal	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) "{{{$/;"	f
parse_redirection	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) "{{{$/;"	f
parse_single_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) "{{{$/;"	f
parse_tilde	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) "{{{$/;"	f
parse_variables	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) "{{{$/;"	f
parse_wildcard	vimproc/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) "{{{$/;"	f
parseline	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parts	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
path	command-t/ruby/command-t/match.h	/^    VALUE   path;$/;"	m	struct:__anon2
path=	command-t/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path_count	command-t/ruby/command-t/matcher.c	/^    long path_count;$/;"	m	struct:__anon3	file:
path_excluded?	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
path_extensions	vimproc/autoload/vimproc/filepath.vim	/^function! s:path_extensions()$/;"	f
path_separator	vimproc/autoload/vimproc/filepath.vim	/^function! s:path_separator()$/;"	f
paths	command-t/ruby/command-t/matcher.c	/^    VALUE paths;$/;"	m	struct:__anon3	file:
paths	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
paths	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def paths$/;"	f	class:CommandT.JumpScanner
paths	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def paths$/;"	f	class:CommandT.TagScanner
pathshorten	ctrlp/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pdfdir	command-t/ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
peek	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	ultisnipps/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
pgroup_open	vimproc/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) "{{{$/;"	f
pid	vimproc/tools/fork.py	/^pid = os.fork()$/;"	v
platform	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^import platform$/;"	i
platform	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^import platform$/;"	i
platform	ultisnipps/test.py	/^import platform$/;"	i
plineopen	vimproc/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) "{{{$/;"	f
plugin_cache_dir	ultisnipps/test.py	/^def plugin_cache_dir():$/;"	f
plugins	ultisnipps/test.py	/^    plugins = ["Shougo\/neocomplete.vim"]$/;"	v	class:Plugin_Neocomplete_BugTest
plugins	ultisnipps/test.py	/^    plugins = ["Shougo\/unite.vim"]$/;"	v	class:Plugin_unite_BugTest
plugins	ultisnipps/test.py	/^    plugins = ["Valloric\/YouCompleteMe"]$/;"	v	class:Plugin_YouCompleteMe_IntegrationTest
plugins	ultisnipps/test.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	ultisnipps/test.py	/^    plugins = []$/;"	v	class:_VimTest
poll	vimproc/autoload/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f
pollfd	vimproc/autoload/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	vimproc/autoload/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
pos	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
ppos	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
pre-install-rb	command-t/ruby/command-t/Makefile	/^pre-install-rb: Makefile$/;"	t
pre-install-rb-default	command-t/ruby/command-t/Makefile	/^pre-install-rb-default: Makefile$/;"	t
pre-install-rb-default	command-t/ruby/command-t/Makefile	/^pre-install-rb-default:$/;"	t
prefix	command-t/ruby/command-t/Makefile	/^prefix = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/2.0\/usr$/;"	m
preload	command-t/ruby/command-t/Makefile	/^preload = $/;"	m
prep_cmdline	easytags/autoload/xolox/easytags.vim	/^function! s:prep_cmdline(cfile, tagsfile, firstrun, arguments, context) " {{{3$/;"	f
previewNodeCurrent	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_error	command-t/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_error	vimproc/autoload/vimproc.vim	/^function! s:print_error(string)$/;"	f
print_feedback	misc/autoload/xolox/misc/test.vim	/^function! s:print_feedback() " {{{1$/;"	f
print_match	command-t/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_matches	command-t/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_no_such_file_or_directory	command-t/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_stack	ultisnipps/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
priority	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
process	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	ctrlp/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	vimproc/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process	vimproc/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('ls && ls')$/;"	v
process	vimproc/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('python ' . pwd . '\/fork.py')$/;"	v
processor_count	command-t/ruby/command-t/util.rb	/^      def processor_count$/;"	f	class:CommandT.Util
processor_count!	command-t/ruby/command-t/util.rb	/^      def processor_count!$/;"	f	class:CommandT.Util
promptToDelBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
psdir	command-t/ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
pwd	command-t/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
pwd	vimproc/tools/leak_check2.vim	/^let pwd = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
pylint	ultisnipps/pythonx/UltiSnips/__init__.py	/^import vim  # pylint:disable=import-error$/;"	i
pylint	ultisnipps/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
pylint	ultisnipps/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
pylint	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
python3	ultisnipps/test.py	/^def python3():$/;"	f
python_available	easytags/autoload/xolox/easytags.vim	/^function! s:python_available() " {{{2$/;"	f
quickfix	command-t/ruby/command-t/controller.rb	/^    def quickfix$/;"	f	class:CommandT.Controller
quote_arg	vimproc/autoload/vimproc.vim	/^function! s:quote_arg(arg)$/;"	f
random	ultisnipps/test.py	/^import random$/;"	i
random_string	ultisnipps/test.py	/^def random_string(n):$/;"	f
re	easytags/misc/easytags/highlight.py	/^import re$/;"	i
re	ultisnipps/pythonx/UltiSnips/_vim.py	/^import re$/;"	i
re	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^import re$/;"	i
re	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^import re$/;"	i
re	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^import re$/;"	i
re	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^import re$/;"	i
re	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
re	ultisnipps/test.py	/^import re$/;"	i
re	ultisnipps/utils/convert_snipmate_snippets.py	/^import re$/;"	i
re	ultisnipps/utils/get_tm_snippets.py	/^import re$/;"	i
read	vimproc/autoload/proc_w32.c	/^#define read /;"	d	file:
read	vimproc/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
read	vimproc/plugin/vimproc.vim	/^function! s:read(cmdline) "{{{$/;"	f
read_line	vimproc/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
read_lines	vimproc/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
read_pgroup	vimproc/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
read_pipes	vimproc/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
read_text_file	ultisnipps/test.py	/^def read_text_file(filename):$/;"	f
reader.read	vimproc/autoload/vimproc/lexer.vim	/^function! s:reader.read()$/;"	f
reader.unread	vimproc/autoload/vimproc/lexer.vim	/^function! s:reader.unread()$/;"	f
readfile	misc/autoload/xolox/misc/os.vim	/^function! s:readfile(fname, label, cmd) " {{{1$/;"	f
realclean	command-t/ruby/command-t/Makefile	/^realclean: distclean$/;"	t
record	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
recursive_match	command-t/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,    \/\/ sharable meta-data$/;"	f
redraw	command-t/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
reformat	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refresh	command-t/ruby/command-t/controller.rb	/^    def refresh$/;"	f	class:CommandT.Controller.quickfix
refreshCurrent	nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	ctrlp/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	ctrlp/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
register_for_key_presses	command-t/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
register_snippet_source	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
relative_path_under_working_directory	command-t/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relativize_path	command-t/spec/vim_formatter.rb	/^        def relativize_path path$/;"	f	class:Spec.Runner.Formatter.VimFormatter
release_winsock	vimproc/autoload/proc_w32.c	/^release_winsock()$/;"	f	file:
relogin	vmail/autoload/gmail/imap.vim	/^function! s:relogin()$/;"	f
remarksigns	ctrlp/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remember_buffer	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remove_last_separator	vimproc/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path)$/;"	f
replace	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_initial_text	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initial_text(self):$/;"	m	class:SnippetInstance
replace_vars	ultisnipps/utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replay_user_edits	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds):$/;"	m	class:SnippetInstance
replyBody	vmail/autoload/gmail/win.vim	/^function! s:replyBody()$/;"	f
request	vmail/autoload/gmail/imap.vim	/^function! s:request(cmd, timeout)$/;"	f
request_store	vmail/autoload/gmail/imap.vim	/^function! s:request_store(id, flag, sign)$/;"	f
res	vimproc/vest/test-fopen.vim	/^  let res = file.read()$/;"	v
res	vimproc/vest/test-popen.vim	/^    let res .= sub.stdout.read()$/;"	v
res	vimproc/vest/test-popen.vim	/^  let res = ''$/;"	v
res	vimproc/vest/test-popen.vim	/^  let res = substitute(res, '\\r\\n', '\\n', 'g')$/;"	v
res	vimproc/vest/test-socket.vim	/^    let res .= out$/;"	v
res	vimproc/vest/test-socket.vim	/^  let res = ''$/;"	v
res2	vimproc/vest/test-fopen.vim	/^    let res2 += [file.read_line()]$/;"	v
res2	vimproc/vest/test-fopen.vim	/^  let res2 = []$/;"	v
res2	vimproc/vest/test-fopen.vim	/^  let res2 = file.read_lines()$/;"	v
reselect	vmail/autoload/gmail/win.vim	/^function! s:reselect()$/;"	f
reset	ultisnipps/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_buffer_filetypes	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def reset_buffer_filetypes(self):$/;"	m	class:SnippetManager
reset_indent	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
resolve	easytags/autoload/xolox/easytags.vim	/^function! s:resolve(filename) " {{{2$/;"	f
restore	command-t/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restore_unnamed_register	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
restore_window_dimensions	command-t/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
revents	vimproc/autoload/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd
ridir	command-t/ruby/command-t/Makefile	/^ridir = $(datarootdir)\/$(RI_BASE_NAME)$/;"	m
ruby	command-t/ruby/command-t/Makefile	/^ruby = $(bindir)\/ruby$/;"	m
ruby_headers	command-t/ruby/command-t/Makefile	/^ruby_headers = $(hdrdir)\/ruby.h $(hdrdir)\/ruby\/defines.h $(arch_hdrdir)\/ruby\/config.h$/;"	m
ruby_inspect	command-t/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_version	command-t/ruby/command-t/Makefile	/^ruby_version = 2.0.0$/;"	m
rubyarchdir	command-t/ruby/command-t/Makefile	/^rubyarchdir = $(rubylibdir)\/$(arch)$/;"	m
rubyarchhdrdir	command-t/ruby/command-t/Makefile	/^rubyarchhdrdir = $(rubyhdrdir)\/$(arch)$/;"	m
rubyarchprefix	command-t/ruby/command-t/Makefile	/^rubyarchprefix = $(rubylibprefix)\/$(arch)$/;"	m
rubyfiles	command-t/Makefile	/^rubyfiles   := $(shell find ruby -name '*.rb')$/;"	m
rubyfiles	command-t/Makefile	/^rubyfiles   := $(shell find ruby -name '*.rb')$/;"	t
rubyhdrdir	command-t/ruby/command-t/Makefile	/^rubyhdrdir = $(includedir)\/$(RUBY_VERSION_NAME)$/;"	m
rubylibdir	command-t/ruby/command-t/Makefile	/^rubylibdir = $(rubylibprefix)\/$(ruby_version)$/;"	m
rubylibprefix	command-t/ruby/command-t/Makefile	/^rubylibprefix = $(libdir)\/$(RUBY_BASE_NAME)$/;"	m
rubysitearchprefix	command-t/ruby/command-t/Makefile	/^rubysitearchprefix = $(rubylibprefix)\/$(sitearch)$/;"	m
runTest	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	ultisnipps/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	ultisnipps/test.py	/^    def runTest(self):$/;"	m	class:_VimTest
run_ctags	easytags/autoload/xolox/easytags.vim	/^function! s:run_ctags(starttime, cfile, tagsfile, firstrun, cmdline) " {{{3$/;"	f
running_on_windows	ultisnipps/test.py	/^def running_on_windows():$/;"	f
rv	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
s	vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s/	vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s:Bookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Creator	nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:KeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:MenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeSortStarIndex	nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:Opener	nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:SourcedFile	ultisnipps/autoload/UltiSnips/bootstrap.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:Tab	supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:TreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:aliases	easytags/autoload/xolox/easytags.vim	/^let s:aliases = {}$/;"	v
s:ars	ctrlp/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:auEvents	undotree/plugin/undotree.vim	/^let s:auEvents = "BufEnter,InsertLeave,CursorMoved,BufWritePost"$/;"	v
s:base	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^let s:base = {$/;"	v
s:bg_processes	vimproc/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:bins	ctrlp/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:can_use_dll	misc/autoload/xolox/misc/tests.vim	/^let s:can_use_dll = xolox#misc#os#can_use_dll()$/;"	v
s:canonical_aliases	easytags/autoload/xolox/easytags.vim	/^let s:canonical_aliases = {}$/;"	v
s:ccex	ctrlp/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:cmd	vimproc/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:cmdline	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = vital#of("easymotion").import("Over.Commandline")$/;"	v
s:cntr	undotree/plugin/undotree.vim	/^let s:cntr = 0$/;"	v
s:compare_lim	ctrlp/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:cpo_save	easytags/autoload/xolox/easytags.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	yank/plugin/yankring.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctags_filetypes	easytags/autoload/xolox/easytags.vim	/^let s:ctags_filetypes = []$/;"	v
s:debug	undotree/plugin/undotree.vim	/^    let s:debug = 1$/;"	v
s:debug	undotree/plugin/undotree.vim	/^let s:debug = 0$/;"	v
s:debugfile	undotree/plugin/undotree.vim	/^let s:debugfile = $HOME.'\/undotree_debug.log'$/;"	v
s:defaultCommentString	tComment/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	tComment/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:default_key_mapping	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:default_key_mapping = {$/;"	v
s:definitions	tComment/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:diffpanel	undotree/plugin/undotree.vim	/^let s:diffpanel = s:new(s:panel)$/;"	v
s:dircounts	ctrlp/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:dll_handle	vimproc/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:enoimpl	misc/autoload/xolox/misc/open.vim	/^let s:enoimpl = "vim-misc %s: %s() hasn't been implemented for your platform! If you have suggestions, please get in touch at https:\/\/github.com\/xolox\/vim-misc\/issues"$/;"	v
s:ficounts	ctrlp/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:filecounts	ctrlp/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:fingerprints	easytags/autoload/xolox/easytags.vim	/^let s:fingerprints = {}$/;"	v
s:first_completion	tComment/autoload/tcomment.vim	/^let s:first_completion = 0$/;"	v
s:fpats	ctrlp/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:glbs	ctrlp/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:globpath_third_arg	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:gmail_allow_headers	vmail/autoload/gmail/imap.vim	/^let s:gmail_allow_headers = [ 'From', 'To', 'Cc', 'Bcc', 'Subject' ]$/;"	v
s:gmail_body_menu	vmail/autoload/gmail/win.vim	/^let s:gmail_body_menu = '[next] [prev] [reply] [reply_all] [forward] [unread] [easy_html_view]'$/;"	v
s:gmail_body_separator	vmail/autoload/gmail/imap.vim	/^let s:gmail_body_separator = ''$/;"	v
s:gmail_headers	vmail/autoload/gmail/imap.vim	/^let s:gmail_headers = {'Cc':[]}$/;"	v
s:gmail_list_menu	vmail/autoload/gmail/win.vim	/^let s:gmail_list_menu = '   [more] [update] [unread] [read] [archive] [delete]'$/;"	v
s:gmail_login_now	vmail/autoload/gmail/imap.vim	/^let s:gmail_login_now = 0$/;"	v
s:gmail_mailbox_idx	vmail/autoload/gmail/imap.vim	/^let s:gmail_mailbox_idx = 0$/;"	v
s:gmail_mailbox_item_count	vmail/autoload/gmail/win.vim	/^let s:gmail_mailbox_item_count = 0$/;"	v
s:gmail_sendmail_headers	vmail/autoload/gmail/smtp.vim	/^let s:gmail_sendmail_headers = [ 'To:', 'Cc:', 'Bcc:', 'Subject:' ]$/;"	v
s:gmail_sendmail_normalize_target	vmail/autoload/gmail/smtp.vim	/^let s:gmail_sendmail_normalize_target = [ 'To', 'Cc', 'Bcc' ]$/;"	v
s:gmail_title_prefix	vmail/autoload/gmail/win.vim	/^let s:gmail_title_prefix = 'gmail-'$/;"	v
s:gmail_winname	vmail/autoload/gmail/win.vim	/^let s:gmail_winname = [ 'mailbox', 'list', 'body', 'new', 'log' ]$/;"	v
s:grouping_algorithms	vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[group] = []$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:handlers	misc/autoload/xolox/misc/open.vim	/^let s:handlers = ['gnome-open', 'kde-open', 'exo-open', 'xdg-open']$/;"	v
s:has_reltime	misc/autoload/xolox/misc/timer.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:helpless	undotree/plugin/undotree.vim	/^let s:helpless = ['" Press ? for help.']$/;"	v
s:helpmore	undotree/plugin/undotree.vim	/^let s:helpmore = ['"    ===== Marks ===== ',$/;"	v
s:hlgrps	ctrlp/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:id	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	ctrlp/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:is_case_tolerant	vimproc/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cygwin	vimproc/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	vimproc/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_mac	vimproc/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	vimproc/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows$/;"	v
s:is_windows	vimproc/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	vimproc/autoload/vimproc/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['ClearHistory','C','Clear undo history']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Close','q','Close this panel']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['DiffToggle','D','Toggle diff panel']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Enter','<2-LeftMouse>','Revert to current']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Enter','<cr>','Revert to current']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['FocusTarget','<tab>','Set Focus to editor']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['GoNext','K','Revert to next state']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['GoPrevious','J','Revert to previous state']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Help','?','Toggle quick help']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Redo','<c-r>','Redo']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['TimestampToggle','T','Toggle relative timestamp']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap += [['Undo','u','Undo']]$/;"	v
s:keymap	undotree/plugin/undotree.vim	/^let s:keymap = []$/;"	v
s:known_tagfiles	easytags/autoload/xolox/easytags.vim	/^  let s:known_tagfiles = {}$/;"	v
s:kprange	ctrlp/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:last_automatic_run	easytags/autoload/xolox/easytags.vim	/^let s:last_automatic_run = 0$/;"	v
s:last_errmsg	vimproc/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_status	vimproc/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:lasterr	vimproc/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:lexer	vimproc/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:loaded	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:loaded = {}$/;"	v
s:mac_os_x_compatible	misc/autoload/xolox/misc/path.vim	/^let s:mac_os_x_compatible = xolox#misc#os#is_mac()$/;"	v
s:modes	supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:module	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Enter.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/HistAdd.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Scroll.vim	/^let s:module = {$/;"	v
s:modules	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^let s:modules = [$/;"	v
s:modules_snake	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^let s:modules_snake = [$/;"	v
s:msg	easytags/plugin/easytags.vim	/^        let s:msg .= " On Ubuntu & Debian you can install Exuberant Ctags by"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^        let s:msg .= " Please download & install Exuberant Ctags from http:\/\/ctags.sf.net"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^        let s:msg .= " installing the package named `exuberant-ctags':"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^        let s:msg .= " sudo apt-get install exuberant-ctags"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^      let s:msg .= " or newer is required while you have version %s installed!"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^      let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags 5.5"$/;"	v
s:msg	easytags/plugin/easytags.vim	/^      let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags isn't installed!"$/;"	v
s:node	undotree/plugin/undotree.vim	/^let s:node = {}$/;"	v
s:nullCommentString	tComment/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:old_cpo	nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:panel	undotree/plugin/undotree.vim	/^let s:panel = {}$/;"	v
s:path_sep_pattern	vimproc/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	vimproc/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:priorities	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:read_timeout	vimproc/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:reader	vimproc/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:root_dir	vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:save_cpo	supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	ultisnipps/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	ultisnipps/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Enter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/HistAdd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Incsearch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Scroll.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-fopen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-functions.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-popen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-socket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vimproc/vest/test-system.vim	/^let s:save_cpo = &cpo$/;"	v
s:search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make_plain("\/")$/;"	v
s:search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = "Question"$/;"	v
s:self_version	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:shade_hl_defaults	vim-easymotion/plugin/EasyMotion.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	vim-easymotion/plugin/EasyMotion.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:source	ultisnipps/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:standard_table	vmail/autoload/gmail/util.vim	/^let s:standard_table = [$/;"	v
s:tabHelp	supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tagged_files	easytags/autoload/xolox/easytags.vim	/^  let s:tagged_files = {}$/;"	v
s:tagkinds	easytags/autoload/xolox/easytags.vim	/^let s:tagkinds = {}$/;"	v
s:target_hl2_first_defaults	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	vim-easymotion/plugin/EasyMotion.vim	/^let s:target_hl_move = {$/;"	v
s:text	ctrlp/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:tree_up_dir_line	nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	ctrlp/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types	supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:typesDirty	tComment/autoload/tcomment.vim	/^let s:typesDirty = 1$/;"	v
s:undotree	undotree/plugin/undotree.vim	/^let s:undotree = s:new(s:panel)$/;"	v
s:unique_marker	misc/autoload/xolox/misc/timer.vim	/^let s:unique_marker = 'xolox#misc#timer#value'$/;"	v
s:unite_source	ultisnipps/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	ultisnipps/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	ultisnipps/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:use_dll	misc/autoload/xolox/misc/tests.vim	/^let s:use_dll = 0$/;"	v
s:vim_filetypes	easytags/autoload/xolox/easytags.vim	/^let s:vim_filetypes = []$/;"	v
s:vimproc_dll_basename	vimproc/autoload/vimproc.vim	/^    let s:vimproc_dll_basename = 'vimproc_win32.dll'$/;"	v
s:vimproc_dll_basename	vimproc/autoload/vimproc.vim	/^    let s:vimproc_dll_basename = 'vimproc_win64.dll'$/;"	v
s:vimproc_dll_basename	vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	vimproc/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:wig_cond	ctrlp/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:windows_compatible	misc/autoload/xolox/misc/path.vim	/^let s:windows_compatible = xolox#misc#os#is_win()$/;"	v
s:write_timeout	vimproc/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:yr_buffer_id	yank/plugin/yankring.vim	/^let s:yr_buffer_id         = -1$/;"	v
s:yr_buffer_last	yank/plugin/yankring.vim	/^let s:yr_buffer_last       = -1$/;"	v
s:yr_buffer_last_winnr	yank/plugin/yankring.vim	/^let s:yr_buffer_last_winnr = -1$/;"	v
s:yr_buffer_name	yank/plugin/yankring.vim	/^let s:yr_buffer_name       = '[YankRing]'$/;"	v
s:yr_has_voperator	yank/plugin/yankring.vim	/^    let s:yr_has_voperator = 1$/;"	v
s:yr_has_voperator	yank/plugin/yankring.vim	/^let s:yr_has_voperator     = 0$/;"	v
s:yr_history_file_v1	yank/plugin/yankring.vim	/^    let s:yr_history_file_v1   =$/;"	v
s:yr_history_file_v2	yank/plugin/yankring.vim	/^    let s:yr_history_file_v2   =$/;"	v
s:yr_history_last_upd	yank/plugin/yankring.vim	/^let s:yr_history_last_upd  = 0$/;"	v
s:yr_history_v1_nl	yank/plugin/yankring.vim	/^let s:yr_history_v1_nl     = '@@@'$/;"	v
s:yr_history_v1_nl_pat	yank/plugin/yankring.vim	/^let s:yr_history_v1_nl_pat = '\\%(\\\\\\)\\@<!@@@'$/;"	v
s:yr_history_v2_nl	yank/plugin/yankring.vim	/^let s:yr_history_v2_nl     = "\\2" " Use double quotes for a special character$/;"	v
s:yr_history_v2_nl_pat	yank/plugin/yankring.vim	/^let s:yr_history_v2_nl_pat = "\\2"$/;"	v
s:yr_history_version	yank/plugin/yankring.vim	/^let s:yr_history_version   = 'v2'$/;"	v
s:yr_last_motion	yank/plugin/yankring.vim	/^let s:yr_last_motion       = ''$/;"	v
s:yr_maps_created	yank/plugin/yankring.vim	/^let s:yr_maps_created      = 0$/;"	v
s:yr_maps_created_zap	yank/plugin/yankring.vim	/^let s:yr_maps_created_zap  = 0$/;"	v
s:yr_remove_omap_dot	yank/plugin/yankring.vim	/^let s:yr_remove_omap_dot   = 0$/;"	v
s:yr_search	yank/plugin/yankring.vim	/^let s:yr_search            = ''$/;"	v
s:yr_winsize_chgd	yank/plugin/yankring.vim	/^let s:yr_winsize_chgd      = 0$/;"	v
saa	vim-easymotion/t/easymotion_spec.vim	/^        normal saa$/;"	m
samerootsyml	ctrlp/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanitize_path_string	command-t/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller.quickfix
sanstail	ctrlp/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save	command-t/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
save_by_filetype	easytags/autoload/xolox/easytags.vim	/^function! s:save_by_filetype(filter_tags, headers, entries, context)$/;"	f
savebookmark	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	ctrlp/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
sbindir	command-t/ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
sblue	vim-monochrome/bin/generate.rb	/^def sblue$/;"	f
score	command-t/ruby/command-t/match.h	/^    double  score;$/;"	m	struct:__anon2
scroll	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
search	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
search.keymappings	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymappings() "{{{$/;"	f
search.on_cancel	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_cancel() "{{{$/;"	f
search.on_char	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char() "{{{$/;"	f
search.on_enter	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter() "{{{$/;"	f
search.on_leave	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave() "{{{$/;"	f
select	command-t/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select	ultisnipps/pythonx/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select_and_show_body	vmail/autoload/gmail/win.vim	/^function! s:select_and_show_body(l)$/;"	f
select_next	command-t/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller.quickfix
select_next	command-t/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_next_tab	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards=False):$/;"	m	class:SnippetInstance
select_prev	command-t/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller.quickfix
select_prev	command-t/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selection	command-t/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
self.backward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.backward()$/;"	f
self.forward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.forward()$/;"	f
self.input	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.input(str)$/;"	f
self.length	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.length()$/;"	f
self.next	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.next()$/;"	f
self.pos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.pos()$/;"	f
self.pos_word	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.pos_word()$/;"	f
self.prev	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.prev()$/;"	f
self.remove	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.remove(index)$/;"	f
self.remove_next	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.remove_next()$/;"	f
self.remove_pos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.remove_pos()$/;"	f
self.remove_prev	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.remove_prev()$/;"	f
self.set_pos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.set_pos(pos)$/;"	f
self.set_str	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.set_str(str)$/;"	f
self.str	vim-easymotion/autoload/vital/_easymotion/Over/Commandline.vim	/^	function! self.str()$/;"	f
send	ultisnipps/test.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send	ultisnipps/test.py	/^    def send(self, s):$/;"	m	class:VimInterfaceScreen
send	ultisnipps/test.py	/^    def send(self, s):$/;"	m	class:VimInterfaceTmux
sendmail	vmail/autoload/gmail/smtp.vim	/^function! s:sendmail(header, to, messages)$/;"	f
separator	vimproc/autoload/vimproc/filepath.vim	/^function! s:separator()$/;"	f
setUp	ultisnipps/test.py	/^    def setUp(self):$/;"	m	class:_VimTest
set_bool	command-t/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_number	command-t/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_status	command-t/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_wild_ignore	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def set_wild_ignore(ignore)$/;"	f	class:CommandT.FileScanner
setentries	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settype	ctrlp/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup_other_plugins	ultisnipps/test.py	/^def setup_other_plugins(all_plugins):$/;"	f
setupblank	ctrlp/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
sh	vim-easymotion/t/easymotion_spec.vim	/^        normal sh$/;"	m
sha	vim-easymotion/t/easymotion_spec.vim	/^        normal sha$/;"	m
sharedstatedir	command-t/ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shb	vim-easymotion/t/easymotion_spec.vim	/^        normal shb$/;"	m
shift	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shortest	ctrlp/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_use_migemo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
should_use_regexp	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
should_use_smartcase	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartcase(input) "{{{$/;"	f
should_use_smartsign	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
should_use_wundo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_wundo() "{{{$/;"	f
show	command-t/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller.quickfix
showMenu	nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
show_body	vmail/autoload/gmail/win.vim	/^function! s:show_body(id)$/;"	f
show_buffer_finder	command-t/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_cursor	command-t/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
show_file_finder	command-t/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_jump_finder	command-t/ruby/command-t/controller.rb	/^    def show_jump_finder$/;"	f	class:CommandT.Controller
show_message	misc/autoload/xolox/misc/msg.vim	/^function! s:show_message(hlgroup, args) " {{{1$/;"	f
show_tag_finder	command-t/ruby/command-t/controller.rb	/^    def show_tag_finder$/;"	f	class:CommandT.Controller
shutil	ultisnipps/test.py	/^import shutil$/;"	i
silent_call	ultisnipps/test.py	/^def silent_call(cmd):$/;"	f
site-install	command-t/ruby/command-t/Makefile	/^site-install: site-install-so site-install-rb$/;"	t
site-install-rb	command-t/ruby/command-t/Makefile	/^site-install-rb: install-rb$/;"	t
site-install-so	command-t/ruby/command-t/Makefile	/^site-install-so: install-so$/;"	t
sitearch	command-t/ruby/command-t/Makefile	/^sitearch = $(arch)$/;"	m
sitearchdir	command-t/ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitearchhdrdir	command-t/ruby/command-t/Makefile	/^sitearchhdrdir = $(sitehdrdir)\/$(sitearch)$/;"	m
sitearchincludedir	command-t/ruby/command-t/Makefile	/^sitearchincludedir = $(includedir)\/$(sitearch)$/;"	m
sitearchlibdir	command-t/ruby/command-t/Makefile	/^sitearchlibdir = $(libdir)\/$(sitearch)$/;"	m
sitedir	command-t/ruby/command-t/Makefile	/^sitedir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
sitehdrdir	command-t/ruby/command-t/Makefile	/^sitehdrdir = $(rubyhdrdir)\/site_ruby$/;"	m
sitelibdir	command-t/ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
size	vimproc/autoload/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	file:
skip_back_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) "{{{$/;"	f
skip_double_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) "{{{$/;"	f
skip_else	vimproc/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) "{{{$/;"	f
skip_if	ultisnipps/test.py	/^    def skip_if(self):$/;"	m	class:Plugin_Neocomplete_BugTest
skip_if	ultisnipps/test.py	/^    def skip_if(self):$/;"	m	class:Plugin_YouCompleteMe_IntegrationTest
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: None$/;"	v	class:_VimTest
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()  # SendKeys can't send UTF characters$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()  # SendKeys can't send UTF characters$/;"	v	class:_UmlautsBase
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
skip_if	ultisnipps/test.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
skip_single_quote	vimproc/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) "{{{$/;"	f
sleeptime	ultisnipps/test.py	/^    sleeptime = 0.00$/;"	v	class:_VimTest
snip	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	i
snipMate_EmptyLinesContinueSnippets	ultisnipps/test.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	ultisnipps/test.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	ultisnipps/test.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	ultisnipps/test.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_MultiMatches	ultisnipps/test.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	ultisnipps/test.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	ultisnipps/test.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	ultisnipps/test.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	ultisnipps/test.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	ultisnipps/test.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	ultisnipps/test.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	ultisnipps/test.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	ultisnipps/test.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	ultisnipps/test.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_Visual_Simple	ultisnipps/test.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snipmate_files_for	ultisnipps/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def snipmate_files_for(ft):$/;"	f
snippets	ultisnipps/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	ultisnipps/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	ultisnipps/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	ultisnipps/test.py	/^     snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	ultisnipps/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	ultisnipps/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	ultisnipps/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	ultisnipps/test.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	ultisnipps/test.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	ultisnipps/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	ultisnipps/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	ultisnipps/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	ultisnipps/test.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	ultisnipps/test.py	/^    snippets = ( ("test", "Case1", "This is Case 1"),$/;"	v	class:_MultipleMatches
snippets	ultisnipps/test.py	/^    snippets = ( ("testblah", "BLAAH", "Say BLAH"),$/;"	v	class:_ListAllSnippets
snippets	ultisnipps/test.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	ultisnipps/test.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	ultisnipps/test.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	ultisnipps/test.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	ultisnipps/test.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	ultisnipps/test.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	ultisnipps/test.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	ultisnipps/test.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	ultisnipps/test.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	ultisnipps/test.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("fold",$/;"	v	class:FoldOverwrite_Simple_ECR
snippets	ultisnipps/test.py	/^    snippets = ("fold",$/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	ultisnipps/test.py	/^    snippets = ("for",$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("hi",$/;"	v	class:_TabExpand_RealWorld
snippets	ultisnipps/test.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	ultisnipps/test.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	ultisnipps/test.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	ultisnipps/test.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	ultisnipps/test.py	/^    snippets = ("superlongtrigger", "Hello")$/;"	v	class:Plugin_YouCompleteMe_IntegrationTest
snippets	ultisnipps/test.py	/^    snippets = ("t", "Hello", "", "w")$/;"	v	class:Plugin_Neocomplete_BugTest
snippets	ultisnipps/test.py	/^    snippets = ("t", "Hello", "", "w")$/;"	v	class:Plugin_unite_BugTest
snippets	ultisnipps/test.py	/^    snippets = ("te'stâ", 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict3
snippets	ultisnipps/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	ultisnipps/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	ultisnipps/test.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	ultisnipps/test.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	ultisnipps/test.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	ultisnipps/test.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	ultisnipps/test.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	ultisnipps/test.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	ultisnipps/test.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	ultisnipps/test.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	ultisnipps/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	ultisnipps/test.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	ultisnipps/test.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	ultisnipps/test.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	ultisnipps/test.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	ultisnipps/test.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	ultisnipps/test.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	ultisnipps/test.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	ultisnipps/test.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	ultisnipps/test.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	ultisnipps/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	ultisnipps/test.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	ultisnipps/test.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	ultisnipps/test.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", "h`!p import re; snip.rv = '%i' % len([re.search for i in 'aiiia'])`b")$/;"	v	class:Python_WeirdScoping_Error
snippets	ultisnipps/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	ultisnipps/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	ultisnipps/test.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world" )$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_Leave
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world" )$/;"	v	class:TabStop_Multiline_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	ultisnipps/test.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	ultisnipps/test.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	ultisnipps/test.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	ultisnipps/test.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	ultisnipps/test.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	ultisnipps/test.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	ultisnipps/test.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	ultisnipps/test.py	/^    snippets = ("test", r"`!p snip.rv = t[2].upper()`${1:h${2:welt}o}`!p snip.rv = t[2].upper()`")$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	ultisnipps/test.py	/^    snippets = ("test", r"`!p snip.rv = t[2].upper()`${1:h${2:welt}o}`!p snip.rv = t[2].upper()`")$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	ultisnipps/test.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	ultisnipps/test.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	ultisnipps/test.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	ultisnipps/test.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	ultisnipps/test.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	ultisnipps/test.py	/^    snippets = ("testme",$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("testme",$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ("testme",$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	ultisnipps/test.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	ultisnipps/test.py	/^    snippets = ('te"stâ', 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict2
snippets	ultisnipps/test.py	/^    snippets = ('testâ', 'abc123ά', '123\\'êabc')$/;"	v	class:VerifyVimDict1
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üü ${1:world} üü $1')$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	ultisnipps/test.py	/^    snippets = ('ül', 'üüüüüßßßß')$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	ultisnipps/test.py	/^    snippets = (("test it", "Expand me!", "", "i"), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	ultisnipps/test.py	/^    snippets = (("test it", "Expand me!", "", "i"), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	ultisnipps/test.py	/^    snippets = (("test it", "Expand me!", "", "w"), )$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "i"), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	ultisnipps/test.py	/^    snippets = (("test", "Expand me!", "", "w"), )$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	ultisnipps/test.py	/^    snippets = ()$/;"	v	class:_VimTest
snippets	ultisnipps/test.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	ultisnipps/test.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	ultisnipps/test.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	ultisnipps/test.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	ultisnipps/test.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts
snippets	ultisnipps/test.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts_List
snippets_in_current_scope	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self):$/;"	m	class:SnippetManager
snprintf	vimproc/autoload/proc_w32.c	/^# define snprintf /;"	d	file:
sob	vim-easymotion/t/easymotion_spec.vim	/^        normal sob$/;"	m
sock	vimproc/vest/test-socket.vim	/^  let sock = vimproc#socket_open('www.yahoo.com', 80)$/;"	v
sockets_number	vimproc/autoload/proc_w32.c	/^static int sockets_number = 0;$/;"	v	file:
sorted_matches_for	command-t/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
sortedfiles	easytags/misc/easytags/why-so-slow.py	/^sortedfiles = sorted([(s, n) for (n, s) in counters.iteritems()], reverse=True)$/;"	v
source.gather_candidates	ultisnipps/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context)$/;"	f
spa	vim-easymotion/t/easymotion_spec.vim	/^        normal spa$/;"	m
spaces_to_indent	ultisnipps/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spb	vim-easymotion/t/easymotion_spec.vim	/^        normal spb$/;"	m
spc	vim-easymotion/t/easymotion_spec.vim	/^        normal spc$/;"	m
spec	command-t/Makefile	/^spec:$/;"	t
split	vimproc/autoload/vimproc.vim	/^  function! s:split(str, sep)$/;"	f
split	vimproc/autoload/vimproc/filepath.vim	/^function! s:split(path)$/;"	f
srcdir	command-t/ruby/command-t/Makefile	/^srcdir = .$/;"	m
start	ultisnipps/pythonx/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
start	vimproc/tools/benchmark.vim	/^let start = reltime()$/;"	v
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream, chars=r'{}\\$`'):$/;"	m	class:EscapeCharToken
stat	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^import stat$/;"	i
statements	vimproc/vest/test-parser.vim	/^    let statements =$/;"	v
static	command-t/ruby/command-t/Makefile	/^static: $(STATIC_LIB)$/;"	t
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine1
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	ultisnipps/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine2
str2hd	vimproc/autoload/vimproc.vim	/^function! s:str2hd(str)$/;"	f
str2list	vimproc/autoload/vimproc.vim	/^function! s:str2list(str)$/;"	f
string	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^import string$/;"	i
string	ultisnipps/test.py	/^import string$/;"	i
strwidth	ctrlp/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
stub_finder	command-t/spec/command-t/controller_spec.rb	/^  def stub_finder(sorted_matches=[])$/;"	f
stub_match_window	command-t/spec/command-t/controller_spec.rb	/^  def stub_match_window(selection)$/;"	f
stub_prompt	command-t/spec/command-t/controller_spec.rb	/^  def stub_prompt(abbrev='')$/;"	f
stub_vim	command-t/spec/command-t/controller_spec.rb	/^  def stub_vim(working_directory)$/;"	f
sub	vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen2([cmd])$/;"	v
sub	vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen2(cmd)$/;"	v
sub	vimproc/vest/test-popen.vim	/^  let sub = vimproc#popen3([cmd])$/;"	v
sub	vimproc/vest/test-popen.vim	/^  let sub = vimproc#ptyopen('echo "foo" > test.txt | echo "bar"')$/;"	v
sublist	ctrlp/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	ctrlp/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subprocess	ultisnipps/test.py	/^import subprocess$/;"	i
supertab_close_preview	supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
syntax	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	ctrlp/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
sys	easytags/misc/easytags/highlight.py	/^import sys$/;"	i
sys	easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
sys	easytags/misc/easytags/why-so-slow.py	/^import os, sys$/;"	i
sys	ultisnipps/pythonx/UltiSnips/_diff.py	/^import sys$/;"	i
sys	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import sys$/;"	i
sys	ultisnipps/pythonx/UltiSnips/debug.py	/^import sys$/;"	i
sys	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^import sys$/;"	i
sys	ultisnipps/test.py	/^    import sys$/;"	i
sys	ultisnipps/test.py	/^import sys$/;"	i
sys	ultisnipps/utils/convert_snipmate_snippets.py	/^import sys$/;"	i
sys	ultisnipps/utils/get_tm_snippets.py	/^    import sys$/;"	i
sys	vimproc/tools/fork.py	/^import sys$/;"	i
sysconfdir	command-t/ruby/command-t/Makefile	/^sysconfdir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
system	vimproc/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) "{{{$/;"	f
t	vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
t;	vim-easymotion/t/easymotion_spec.vim	/^        normal t;$/;"	m
t;a	vim-easymotion/t/easymotion_spec.vim	/^        normal t;a$/;"	m
tH	vim-easymotion/t/easymotion_spec.vim	/^        normal tH$/;"	m
tag_finder	command-t/ruby/command-t/controller.rb	/^    def tag_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
taglist	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def taglist$/;"	f	class:CommandT.TagScanner.paths
tagsfile	easytags/misc/easytags/why-so-slow.py	/^    tagsfile = arg$/;"	v
tagsfile	easytags/misc/easytags/why-so-slow.py	/^tagsfile = '~\/.vimtags'$/;"	v
tail	ctrlp/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
target_prefix	command-t/ruby/command-t/Makefile	/^target_prefix = $/;"	m
tb	vim-easymotion/t/easymotion_spec.vim	/^        normal tb$/;"	m
tba	vim-easymotion/t/easymotion_spec.vim	/^        normal tba$/;"	m
tcomment#CollectFileTypes	tComment/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	tComment/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	tComment/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#Complete	tComment/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	tComment/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	tComment/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	tComment/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name)$/;"	f
tcomment#GuessCommentType	tComment/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	tComment/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	tComment/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	tComment/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	tComment/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#SetOption	tComment/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	tComment/autoload/tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	tComment/autoload/tcomment.vim	/^function! tcomment#TypeExists(name, ...)$/;"	f
tearDown	ultisnipps/test.py	/^    def tearDown(self):$/;"	m	class:_VimTest
tempfile	ultisnipps/pythonx/UltiSnips/text_objects/_shell_code.py	/^import tempfile$/;"	i
tempfile	ultisnipps/test.py	/^import tempfile$/;"	i
term	command-t/ruby/command-t/controller.rb	/^    def term$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
test_command_execution	misc/autoload/xolox/misc/tests.vim	/^function! s:test_command_execution()$/;"	f
test_list_handling	misc/autoload/xolox/misc/tests.vim	/^function! s:test_list_handling()$/;"	f
test_option_handling	misc/autoload/xolox/misc/tests.vim	/^function! s:test_option_handling()$/;"	f
test_string_escaping	misc/autoload/xolox/misc/tests.vim	/^function! s:test_string_escaping()$/;"	f
test_string_handling	misc/autoload/xolox/misc/tests.vim	/^function! s:test_string_handling()$/;"	f
test_version_handling	misc/autoload/xolox/misc/tests.vim	/^function! s:test_version_handling()$/;"	f
text	ultisnipps/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	ultisnipps/test.py	/^    text_after =  "\\n\\n --- some text after --- "$/;"	v	class:_VimTest
text_after	ultisnipps/test.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	ultisnipps/test.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:_VimTest
text_before	ultisnipps/test.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
textdialog	ctrlp/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
textwrap	ultisnipps/pythonx/UltiSnips/text_objects/_visual.py	/^import textwrap$/;"	i
tha	vim-easymotion/t/easymotion_spec.vim	/^        normal tha$/;"	m
thb	vim-easymotion/t/easymotion_spec.vim	/^        normal thb$/;"	m
thc	vim-easymotion/t/easymotion_spec.vim	/^        normal thc$/;"	m
thread_args_t	command-t/ruby/command-t/matcher.c	/^} thread_args_t;$/;"	t	typeref:struct:__anon3	file:
thread_count	command-t/ruby/command-t/matcher.c	/^    int thread_count;$/;"	m	struct:__anon3	file:
thread_index	command-t/ruby/command-t/matcher.c	/^    int thread_index;$/;"	m	struct:__anon3	file:
time	easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
time	ultisnipps/test.py	/^import time$/;"	i
time	vimproc/tools/fork.py	/^import time$/;"	i
to_vim	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
toggleIgnoreFilter	nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
toggle_focus	command-t/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller.quickfix
tokenize	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.snippet.parsing._lexer import tokenize, TabStopToken$/;"	i
tokenize	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	ultisnipps/pythonx/UltiSnips/snippet/parsing/_base.py	/^def tokenize_snippet_text(snippet_instance, text, indent,$/;"	f
tokenize_snippet_text	ultisnipps/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize$/;"	i
tokenize_snippet_text	ultisnipps/pythonx/UltiSnips/snippet/parsing/ultisnips.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize$/;"	i
top	vimproc/autoload/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	file:
topdir	command-t/ruby/command-t/Makefile	/^topdir = \/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.9.sdk\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/2.0\/usr\/include\/ruby-2.0.0$/;"	m
topfiles	easytags/misc/easytags/why-so-slow.py	/^    topfiles = int(arg)$/;"	v
topfiles	easytags/misc/easytags/why-so-slow.py	/^topfiles = 10$/;"	v
traceback	ultisnipps/pythonx/UltiSnips/debug.py	/^    import traceback$/;"	i
traceback	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^import traceback$/;"	i
transform	ultisnipps/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
translate	ultisnipps/pythonx/UltiSnips/_vim.py	/^    def translate(self, text):$/;"	m	class:_RealLangMapTranslator
translate	ultisnipps/pythonx/UltiSnips/_vim.py	/^    translate = lambda self, s: s$/;"	v	class:_DummyLangMapTranslator
trigger	ultisnipps/pythonx/UltiSnips/snippet/definition/_base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
truncated_match	command-t/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
txtfiles	command-t/Makefile	/^txtfiles    := $(shell find doc -name '*.txt')$/;"	m
txtfiles	command-t/Makefile	/^txtfiles    := $(shell find doc -name '*.txt')$/;"	t
undotree.Action	undotree/plugin/undotree.vim	/^function! s:undotree.Action(action)$/;"	f
undotree.ActionClearHistory	undotree/plugin/undotree.vim	/^function! s:undotree.ActionClearHistory()$/;"	f
undotree.ActionClose	undotree/plugin/undotree.vim	/^function! s:undotree.ActionClose()$/;"	f
undotree.ActionDiffToggle	undotree/plugin/undotree.vim	/^function! s:undotree.ActionDiffToggle()$/;"	f
undotree.ActionEnter	undotree/plugin/undotree.vim	/^function! s:undotree.ActionEnter()$/;"	f
undotree.ActionFocusTarget	undotree/plugin/undotree.vim	/^function! s:undotree.ActionFocusTarget()$/;"	f
undotree.ActionGoNext	undotree/plugin/undotree.vim	/^function! s:undotree.ActionGoNext()$/;"	f
undotree.ActionGoPrevious	undotree/plugin/undotree.vim	/^function! s:undotree.ActionGoPrevious()$/;"	f
undotree.ActionHelp	undotree/plugin/undotree.vim	/^function! s:undotree.ActionHelp()$/;"	f
undotree.ActionInTarget	undotree/plugin/undotree.vim	/^function! s:undotree.ActionInTarget(cmd)$/;"	f
undotree.ActionRedo	undotree/plugin/undotree.vim	/^function! s:undotree.ActionRedo()$/;"	f
undotree.ActionTimestampToggle	undotree/plugin/undotree.vim	/^function! s:undotree.ActionTimestampToggle()$/;"	f
undotree.ActionUndo	undotree/plugin/undotree.vim	/^function! s:undotree.ActionUndo()$/;"	f
undotree.AppendHelp	undotree/plugin/undotree.vim	/^function! s:undotree.AppendHelp()$/;"	f
undotree.BindAu	undotree/plugin/undotree.vim	/^function! s:undotree.BindAu()$/;"	f
undotree.BindKey	undotree/plugin/undotree.vim	/^function! s:undotree.BindKey()$/;"	f
undotree.ConvertInput	undotree/plugin/undotree.vim	/^function! s:undotree.ConvertInput(updatetree)$/;"	f
undotree.Draw	undotree/plugin/undotree.vim	/^function! s:undotree.Draw()$/;"	f
undotree.GetStatusLine	undotree/plugin/undotree.vim	/^function! s:undotree.GetStatusLine()$/;"	f
undotree.Index2Screen	undotree/plugin/undotree.vim	/^function! s:undotree.Index2Screen(index)$/;"	f
undotree.Init	undotree/plugin/undotree.vim	/^function! s:undotree.Init()$/;"	f
undotree.MarkSeqs	undotree/plugin/undotree.vim	/^function! s:undotree.MarkSeqs()$/;"	f
undotree.Render	undotree/plugin/undotree.vim	/^function! s:undotree.Render()$/;"	f
undotree.Screen2Index	undotree/plugin/undotree.vim	/^function! s:undotree.Screen2Index(line)$/;"	f
undotree.SetTargetFocus	undotree/plugin/undotree.vim	/^function! s:undotree.SetTargetFocus()$/;"	f
undotree.Show	undotree/plugin/undotree.vim	/^function! s:undotree.Show()$/;"	f
undotree.Toggle	undotree/plugin/undotree.vim	/^function! s:undotree.Toggle()$/;"	f
undotree.Update	undotree/plugin/undotree.vim	/^function! s:undotree.Update()$/;"	f
undotree.UpdateDiff	undotree/plugin/undotree.vim	/^function! s:undotree.UpdateDiff()$/;"	f
undotree._parseNode	undotree/plugin/undotree.vim	/^function! s:undotree._parseNode(in,out)$/;"	f
undotreeAction	undotree/plugin/undotree.vim	/^function! s:undotreeAction(action)$/;"	f
unescape	misc/autoload/xolox/misc/option.vim	/^function! s:unescape(s)$/;"	f
unescape	ultisnipps/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.text import unescape$/;"	i
unescape	ultisnipps/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unescape	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
unescape	ultisnipps/utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
unescape_tags	misc/autoload/xolox/misc/option.vim	/^function! s:unescape_tags(s)$/;"	f
unfocus	command-t/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	command-t/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
unidecode	ultisnipps/pythonx/UltiSnips/text_objects/_transformation.py	/^                import unidecode$/;"	i
unidecode	ultisnipps/test.py	/^    import unidecode$/;"	i
unify_separator	vimproc/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path)$/;"	f
uninstall	supertab/Makefile	/^uninstall:$/;"	t
unite#sources#ultisnips#define	ultisnipps/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define()$/;"	f
unite_source.action_table.expand.func	ultisnipps/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate)$/;"	f
unite_source.action_table.preview.func	ultisnipps/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate)$/;"	f
unite_source.gather_candidates	ultisnipps/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context)$/;"	f
unittest	ultisnipps/pythonx/UltiSnips/test_diff.py	/^import unittest$/;"	i
unittest	ultisnipps/pythonx/UltiSnips/test_position.py	/^import unittest$/;"	i
unittest	ultisnipps/test.py	/^import unittest$/;"	i
unload	command-t/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller.quickfix
unload	command-t/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unload	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:unload()$/;"	f
unlock	command-t/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
unmarksigns	ctrlp/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unregister_snippet_source	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unshift	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unused	ultisnipps/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
upDirCurrentRootClosed	nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_textobjects	ultisnipps/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self):$/;"	m	class:SnippetInstance
urllib	ultisnipps/utils/get_tm_snippets.py	/^import urllib$/;"	i
usrign	ctrlp/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
v	ultisnipps/pythonx/UltiSnips/text_objects/_python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
vacantdict	ctrlp/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	ctrlp/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
vendorarchdir	command-t/ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendorarchhdrdir	command-t/ruby/command-t/Makefile	/^vendorarchhdrdir = $(vendorhdrdir)\/$(sitearch)$/;"	m
vendordir	command-t/ruby/command-t/Makefile	/^vendordir = $(rubylibprefix)\/vendor_ruby$/;"	m
vendorhdrdir	command-t/ruby/command-t/Makefile	/^vendorhdrdir = $(rubyhdrdir)\/vendor_ruby$/;"	m
vendorlibdir	command-t/ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
version	ultisnipps/test.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:_VimTest
vfha	vim-easymotion/t/easymotion_spec.vim	/^        normal vfha$/;"	m
vim	easytags/misc/easytags/highlight.py	/^import vim$/;"	i
vim	ultisnipps/pythonx/UltiSnips/__init__.py	/^import vim  # pylint:disable=import-error$/;"	i
vim	ultisnipps/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
vim	ultisnipps/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
vimball	command-t/Makefile	/^vimball:	command-t.vba$/;"	t
vimfiles	command-t/Makefile	/^vimfiles    := $(shell find plugin -name '*.vim')$/;"	m
vimfiles	command-t/Makefile	/^vimfiles    := $(shell find plugin -name '*.vim')$/;"	t
vimproc	vimproc/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	vimproc/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
vimproc#_get_bg_processes	vimproc/autoload/vimproc.vim	/^function! vimproc#_get_bg_processes() "{{{$/;"	f
vimproc#analyze_shebang	vimproc/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) "{{{$/;"	f
vimproc#cmd#system	vimproc/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr)$/;"	f
vimproc#decode_signal	vimproc/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) "{{{$/;"	f
vimproc#delete_trash	vimproc/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) "{{{$/;"	f
vimproc#dll_version	vimproc/autoload/vimproc.vim	/^function! vimproc#dll_version() "{{{$/;"	f
vimproc#filepath#which	vimproc/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path)$/;"	f
vimproc#fopen	vimproc/autoload/vimproc.vim	/^function! vimproc#fopen(path, flags, ...) "{{{$/;"	f
vimproc#get_command_name	vimproc/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) "{{{$/;"	f
vimproc#get_last_errmsg	vimproc/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg()$/;"	f
vimproc#get_last_errmsg	vimproc/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() "{{{$/;"	f
vimproc#get_last_status	vimproc/autoload/vimproc.vim	/^  function! vimproc#get_last_status()$/;"	f
vimproc#get_last_status	vimproc/autoload/vimproc.vim	/^function! vimproc#get_last_status() "{{{$/;"	f
vimproc#host_exists	vimproc/autoload/vimproc.vim	/^function! vimproc#host_exists(host) "{{{$/;"	f
vimproc#kill	vimproc/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) "{{{$/;"	f
vimproc#lexer#init_lexer	vimproc/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text)$/;"	f
vimproc#lexer#init_reader	vimproc/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text)$/;"	f
vimproc#open	vimproc/autoload/vimproc.vim	/^function! vimproc#open(filename) "{{{$/;"	f
vimproc#parser#expand_wildcard	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) "{{{$/;"	f
vimproc#parser#parse_pipe	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) "{{{$/;"	f
vimproc#parser#parse_statements	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) "{{{$/;"	f
vimproc#parser#split_args	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) "{{{$/;"	f
vimproc#parser#split_args_through	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) "{{{$/;"	f
vimproc#parser#split_commands	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) "{{{$/;"	f
vimproc#parser#split_pipe	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) "{{{$/;"	f
vimproc#parser#split_statements	vimproc/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) "{{{$/;"	f
vimproc#pgroup_open	vimproc/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) "{{{$/;"	f
vimproc#plineopen2	vimproc/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) "{{{$/;"	f
vimproc#plineopen3	vimproc/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) "{{{$/;"	f
vimproc#popen2	vimproc/autoload/vimproc.vim	/^function! vimproc#popen2(args) "{{{$/;"	f
vimproc#popen3	vimproc/autoload/vimproc.vim	/^function! vimproc#popen3(args) "{{{$/;"	f
vimproc#ptyopen	vimproc/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) "{{{$/;"	f
vimproc#readdir	vimproc/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) "{{{$/;"	f
vimproc#shellescape	vimproc/autoload/vimproc.vim	/^function! vimproc#shellescape(string) "{{{$/;"	f
vimproc#socket_open	vimproc/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) "{{{$/;"	f
vimproc#system	vimproc/autoload/vimproc.vim	/^  function! vimproc#system(...)$/;"	f
vimproc#system	vimproc/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) "{{{$/;"	f
vimproc#system2	vimproc/autoload/vimproc.vim	/^function! vimproc#system2(...) "{{{$/;"	f
vimproc#system_bg	vimproc/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) "{{{$/;"	f
vimproc#system_gui	vimproc/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) "{{{$/;"	f
vimproc#system_passwd	vimproc/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) "{{{$/;"	f
vimproc#test_readdir	vimproc/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) "{{{$/;"	f
vimproc#util#expand	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) "{{{$/;"	f
vimproc#util#has_lua	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() "{{{$/;"	f
vimproc#util#iconv	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) "{{{$/;"	f
vimproc#util#is_cygwin	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() "{{{$/;"	f
vimproc#util#is_mac	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() "{{{$/;"	f
vimproc#util#is_windows	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() "{{{$/;"	f
vimproc#util#set_default	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...)  "{{{$/;"	f
vimproc#util#stderrencoding	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() "{{{$/;"	f
vimproc#util#stdinencoding	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() "{{{$/;"	f
vimproc#util#stdoutencoding	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() "{{{$/;"	f
vimproc#util#substitute_path_separator	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) "{{{$/;"	f
vimproc#util#termencoding	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() "{{{$/;"	f
vimproc#util#uniq	vimproc/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) "{{{$/;"	f
vimproc#version	vimproc/autoload/vimproc.vim	/^function! vimproc#version() "{{{$/;"	f
vimproc#write	vimproc/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) "{{{$/;"	f
virtual_position	ultisnipps/pythonx/UltiSnips/_vim.py	/^def virtual_position(line, col):$/;"	f
vital#	vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#of	vim-easymotion/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vp_checkpid	vimproc/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
vp_close_handle	vimproc/autoload/proc_w32.c	/^vp_close_handle(char *args)$/;"	f
vp_decode	vimproc/autoload/proc.c	/^vp_decode(char *args)$/;"	f
vp_decode	vimproc/autoload/proc_w32.c	/^vp_decode(char *args)$/;"	f
vp_delete_trash	vimproc/autoload/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f
vp_dlclose	vimproc/autoload/proc.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	vimproc/autoload/proc_w32.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	vimproc/autoload/vimproc.vim	/^function! s:vp_dlclose(handle)$/;"	f
vp_dlopen	vimproc/autoload/proc.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	vimproc/autoload/proc_w32.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	vimproc/autoload/vimproc.vim	/^function! s:vp_dlopen(path)$/;"	f
vp_dlversion	vimproc/autoload/proc.c	/^vp_dlversion(char *args)$/;"	f
vp_dlversion	vimproc/autoload/proc_w32.c	/^vp_dlversion(char *args)$/;"	f
vp_file_close	vimproc/autoload/proc.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	vimproc/autoload/proc_w32.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	vimproc/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
vp_file_open	vimproc/autoload/proc.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	vimproc/autoload/proc_w32.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	vimproc/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode)$/;"	f
vp_file_read	vimproc/autoload/proc.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	vimproc/autoload/proc_w32.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	vimproc/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
vp_file_write	vimproc/autoload/proc.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	vimproc/autoload/proc_w32.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	vimproc/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
vp_get_signals	vimproc/autoload/proc.c	/^vp_get_signals(char *args)$/;"	f
vp_get_signals	vimproc/autoload/proc_w32.c	/^vp_get_signals(char *args)$/;"	f
vp_get_winsize	vimproc/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
vp_host_exists	vimproc/autoload/proc.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	vimproc/autoload/proc_w32.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	vimproc/autoload/vimproc.vim	/^function! s:vp_host_exists(host)$/;"	f
vp_kill	vimproc/autoload/proc.c	/^vp_kill(char *args)$/;"	f
vp_kill	vimproc/autoload/proc_w32.c	/^vp_kill(char *args)$/;"	f
vp_kill	vimproc/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
vp_open	vimproc/autoload/proc_w32.c	/^vp_open(char *args)$/;"	f
vp_pgroup_close	vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
vp_pgroup_kill	vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
vp_pgroup_waitpid	vimproc/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
vp_pipe_close	vimproc/autoload/proc.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	vimproc/autoload/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
vp_pipe_open	vimproc/autoload/proc.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	vimproc/autoload/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) "{{{$/;"	f
vp_pipe_read	vimproc/autoload/proc.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	vimproc/autoload/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
vp_pipe_write	vimproc/autoload/proc.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	vimproc/autoload/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	vimproc/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
vp_pipes_close	vimproc/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
vp_pty_close	vimproc/autoload/proc.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	vimproc/autoload/proc_w32.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	vimproc/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
vp_pty_get_winsize	vimproc/autoload/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_get_winsize	vimproc/autoload/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_open	vimproc/autoload/proc.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	vimproc/autoload/proc_w32.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	vimproc/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv)$/;"	f
vp_pty_read	vimproc/autoload/proc.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	vimproc/autoload/proc_w32.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	vimproc/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
vp_pty_set_winsize	vimproc/autoload/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_set_winsize	vimproc/autoload/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_write	vimproc/autoload/proc.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	vimproc/autoload/proc_w32.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	vimproc/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
vp_readdir	vimproc/autoload/proc.c	/^vp_readdir(char *args)$/;"	f
vp_readdir	vimproc/autoload/proc_w32.c	/^vp_readdir(char *args)$/;"	f
vp_set_winsize	vimproc/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
vp_socket_close	vimproc/autoload/proc.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	vimproc/autoload/proc_w32.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	vimproc/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
vp_socket_open	vimproc/autoload/proc.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	vimproc/autoload/proc_w32.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	vimproc/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port)$/;"	f
vp_socket_read	vimproc/autoload/proc.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	vimproc/autoload/proc_w32.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	vimproc/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
vp_socket_write	vimproc/autoload/proc.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	vimproc/autoload/proc_w32.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	vimproc/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
vp_stack_free	vimproc/autoload/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	file:
vp_stack_from_args	vimproc/autoload/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	file:
vp_stack_pop_bin	vimproc/autoload/vimstack.c	/^vp_stack_pop_bin(vp_stack_t *stack, char **buf, size_t *size)$/;"	f	file:
vp_stack_pop_num	vimproc/autoload/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	file:
vp_stack_pop_str	vimproc/autoload/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	file:
vp_stack_push_bin	vimproc/autoload/vimstack.c	/^vp_stack_push_bin(vp_stack_t *stack, const char *buf, size_t size)$/;"	f	file:
vp_stack_push_num	vimproc/autoload/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_push_str	vimproc/autoload/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	file:
vp_stack_reserve	vimproc/autoload/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	file:
vp_stack_return	vimproc/autoload/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	file:
vp_stack_return_error	vimproc/autoload/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_t	vimproc/autoload/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	vimproc/autoload/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_waitpid	vimproc/autoload/proc.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	vimproc/autoload/proc_w32.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	vimproc/autoload/vimproc.vim	/^function! s:vp_waitpid() dict$/;"	f
waitpid	vimproc/autoload/vimproc.vim	/^function! s:waitpid(pid)$/;"	f
walker	ctrlp/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MatchIsTooCheap
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCheapDelete
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCommonCharacters
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCrash
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_BackspaceOneChar
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_DeleteOneChar
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar1
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestNoSubstring
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife1
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestUltiSnipsProblem
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	ultisnipps/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	ultisnipps/test.py	/^            " hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	ultisnipps/test.py	/^            "superkallifragilistik some more"$/;"	v	class:Completion_SimpleExample_ECR
wanted	ultisnipps/test.py	/^            "test try\\nSeem to work World"$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	ultisnipps/test.py	/^            "this is something\\nvery nice\\nnotmore text"$/;"	v	class:CursorMovement_Multiline_ECR
wanted	ultisnipps/test.py	/^        "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	ultisnipps/test.py	/^        "This is a longer\\ntext that should\\nwrap as\\nformatoptions are\\nenabled\\n" + "end"$/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	ultisnipps/test.py	/^     wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	ultisnipps/test.py	/^     wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	ultisnipps/test.py	/^     wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	ultisnipps/test.py	/^     wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	ultisnipps/test.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	ultisnipps/test.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	ultisnipps/test.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	ultisnipps/test.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	ultisnipps/test.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	ultisnipps/test.py	/^    wanted = "    start b isbigger a end"$/;"	v	class:PythonCode_MultilineIndented
wanted	ultisnipps/test.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	ultisnipps/test.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	ultisnipps/test.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	ultisnipps/test.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	ultisnipps/test.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	ultisnipps/test.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	ultisnipps/test.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	ultisnipps/test.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	ultisnipps/test.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	ultisnipps/test.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	ultisnipps/test.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	ultisnipps/test.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	ultisnipps/test.py	/^    wanted = ""$/;"	v	class:_VimTest
wanted	ultisnipps/test.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
wanted	ultisnipps/test.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	ultisnipps/test.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	ultisnipps/test.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	ultisnipps/test.py	/^    wanted = "#include <foo>"$/;"	v
wanted	ultisnipps/test.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	ultisnipps/test.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	ultisnipps/test.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	ultisnipps/test.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	ultisnipps/test.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	ultisnipps/test.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	ultisnipps/test.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	ultisnipps/test.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	ultisnipps/test.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	ultisnipps/test.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	ultisnipps/test.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	ultisnipps/test.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	ultisnipps/test.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	ultisnipps/test.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	ultisnipps/test.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	ultisnipps/test.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	ultisnipps/test.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	ultisnipps/test.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	ultisnipps/test.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	ultisnipps/test.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	ultisnipps/test.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	ultisnipps/test.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote
wanted	ultisnipps/test.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	ultisnipps/test.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	ultisnipps/test.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	ultisnipps/test.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v
wanted	ultisnipps/test.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	ultisnipps/test.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	ultisnipps/test.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	ultisnipps/test.py	/^    wanted = "Hello"$/;"	v	class:Plugin_YouCompleteMe_IntegrationTest
wanted	ultisnipps/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	ultisnipps/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	ultisnipps/test.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	ultisnipps/test.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	ultisnipps/test.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	ultisnipps/test.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	ultisnipps/test.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	ultisnipps/test.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	ultisnipps/test.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	ultisnipps/test.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	ultisnipps/test.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	ultisnipps/test.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	ultisnipps/test.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	ultisnipps/test.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	ultisnipps/test.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	ultisnipps/test.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	ultisnipps/test.py	/^    wanted = "This is a test snippet"$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	ultisnipps/test.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v	class:snipMate_SimpleSnippet
wanted	ultisnipps/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	ultisnipps/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	ultisnipps/test.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	ultisnipps/test.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	ultisnipps/test.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	ultisnipps/test.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	ultisnipps/test.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	ultisnipps/test.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	ultisnipps/test.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	ultisnipps/test.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	ultisnipps/test.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	ultisnipps/test.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	ultisnipps/test.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	ultisnipps/test.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	ultisnipps/test.py	/^    wanted = "\\t"$/;"	v	class:DeleteSnippetInsertion1
wanted	ultisnipps/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	ultisnipps/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	ultisnipps/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	ultisnipps/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	ultisnipps/test.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	ultisnipps/test.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	ultisnipps/test.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	ultisnipps/test.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	ultisnipps/test.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	ultisnipps/test.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	ultisnipps/test.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	ultisnipps/test.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	ultisnipps/test.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	ultisnipps/test.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	ultisnipps/test.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	ultisnipps/test.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	ultisnipps/test.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	ultisnipps/test.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	ultisnipps/test.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	ultisnipps/test.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	ultisnipps/test.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	ultisnipps/test.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	ultisnipps/test.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	ultisnipps/test.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	ultisnipps/test.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	ultisnipps/test.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	ultisnipps/test.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	ultisnipps/test.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	ultisnipps/test.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	ultisnipps/test.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	ultisnipps/test.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	ultisnipps/test.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	ultisnipps/test.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	ultisnipps/test.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	ultisnipps/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	ultisnipps/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	ultisnipps/test.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	ultisnipps/test.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	ultisnipps/test.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "blah"$/;"	v	class:snipMate_Extends
wanted	ultisnipps/test.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	ultisnipps/test.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	ultisnipps/test.py	/^    wanted = "egal Hallo End"$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	ultisnipps/test.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	ultisnipps/test.py	/^    wanted = "first line\\n\\n\\nupsy\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	ultisnipps/test.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	ultisnipps/test.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v	class:snipMate_TestMirrors
wanted	ultisnipps/test.py	/^    wanted = "form_for user, namespace: some_namespace, html: {(id: |class: |title:  )d: "$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	ultisnipps/test.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v	class:snipMate_NoNestedTabstops
wanted	ultisnipps/test.py	/^    wanted = "h5b"$/;"	v	class:Python_WeirdScoping_Error
wanted	ultisnipps/test.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	ultisnipps/test.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	ultisnipps/test.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	ultisnipps/test.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	ultisnipps/test.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	ultisnipps/test.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	ultisnipps/test.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Blah Lets replace it again" + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB*2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Hi" + 2*JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	ultisnipps/test.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	ultisnipps/test.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	ultisnipps/test.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	ultisnipps/test.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	ultisnipps/test.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	ultisnipps/test.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	ultisnipps/test.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	ultisnipps/test.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	ultisnipps/test.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	ultisnipps/test.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	ultisnipps/test.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	ultisnipps/test.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	ultisnipps/test.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	ultisnipps/test.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	ultisnipps/test.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	ultisnipps/test.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	ultisnipps/test.py	/^    wanted = "hblablubb"$/;"	v	class:snipMate_Visual_Simple
wanted	ultisnipps/test.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	ultisnipps/test.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	ultisnipps/test.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	ultisnipps/test.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v	class:snipMate_OtherFiletype
wanted	ultisnipps/test.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	ultisnipps/test.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	ultisnipps/test.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	ultisnipps/test.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	ultisnipps/test.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	ultisnipps/test.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	ultisnipps/test.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	ultisnipps/test.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	ultisnipps/test.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	ultisnipps/test.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	ultisnipps/test.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	ultisnipps/test.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v	class:PythonCode_SimpleAppend
wanted	ultisnipps/test.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v	class:PythonCode_MultiAppend
wanted	ultisnipps/test.py	/^    wanted = "hi New End"$/;"	v	class:PythonCode_UseNewOverOld
wanted	ultisnipps/test.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	ultisnipps/test.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	ultisnipps/test.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	ultisnipps/test.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	ultisnipps/test.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	ultisnipps/test.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	ultisnipps/test.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	ultisnipps/test.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	ultisnipps/test.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	ultisnipps/test.py	/^    wanted = "hi" + 100*"a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	ultisnipps/test.py	/^    wanted = "hi" + 100*"a" + 100*"\\n" + 100*"a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	ultisnipps/test.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	ultisnipps/test.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	ultisnipps/test.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	ultisnipps/test.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	ultisnipps/test.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	ultisnipps/test.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	ultisnipps/test.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	ultisnipps/test.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	ultisnipps/test.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	ultisnipps/test.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	ultisnipps/test.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	ultisnipps/test.py	/^    wanted = "iab\\\\ Hello "$/;"	v	class:Plugin_unite_BugTest
wanted	ultisnipps/test.py	/^    wanted = "iab\\\\ Hello"$/;"	v	class:Plugin_Neocomplete_BugTest
wanted	ultisnipps/test.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	ultisnipps/test.py	/^    wanted = "lac03lu"$/;"	v	class:snipMate_Interpolation
wanted	ultisnipps/test.py	/^    wanted = "laöäülu"$/;"	v	class:snipMate_InterpolationWithSystem
wanted	ultisnipps/test.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	ultisnipps/test.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "nothing"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	ultisnipps/test.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v
wanted	ultisnipps/test.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	ultisnipps/test.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	ultisnipps/test.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	ultisnipps/test.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	ultisnipps/test.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	ultisnipps/test.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	ultisnipps/test.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	ultisnipps/test.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	ultisnipps/test.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	ultisnipps/test.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	ultisnipps/test.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	ultisnipps/test.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	ultisnipps/test.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	ultisnipps/test.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	ultisnipps/test.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	ultisnipps/test.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	ultisnipps/test.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	ultisnipps/test.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	ultisnipps/test.py	/^    wanted = "test fedcab"$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	ultisnipps/test.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	ultisnipps/test.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	ultisnipps/test.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	ultisnipps/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	ultisnipps/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	ultisnipps/test.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	ultisnipps/test.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	ultisnipps/test.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	ultisnipps/test.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	ultisnipps/test.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	ultisnipps/test.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	ultisnipps/test.py	/^    wanted = "two"$/;"	v	class:snipMate_MultiMatches
wanted	ultisnipps/test.py	/^    wanted = "ultisnips"$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	ultisnipps/test.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	ultisnipps/test.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	ultisnipps/test.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	ultisnipps/test.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	ultisnipps/test.py	/^    wanted = "x first a bob b y"$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	ultisnipps/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	ultisnipps/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	ultisnipps/test.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	ultisnipps/test.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	ultisnipps/test.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	ultisnipps/test.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	ultisnipps/test.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEU"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	ultisnipps/test.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieu"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	ultisnipps/test.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	ultisnipps/test.py	/^    wanted = 'test41123\\'êabc0'$/;"	v	class:VerifyVimDict1
wanted	ultisnipps/test.py	/^    wanted = ($/;"	v	class:AddNewSnippetSource
wanted	ultisnipps/test.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	ultisnipps/test.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	ultisnipps/test.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	ultisnipps/test.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	ultisnipps/test.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	ultisnipps/test.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	ultisnipps/test.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	ultisnipps/test.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	ultisnipps/test.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	ultisnipps/test.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	ultisnipps/test.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
warn	command-t/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
warnflags	command-t/ruby/command-t/Makefile	/^warnflags = $/;"	m
warnings	ultisnipps/pythonx/UltiSnips/compatibility.py	/^    import warnings$/;"	i
which	vimproc/autoload/vimproc/filepath.vim	/^function! s:which(command, ...)$/;"	f
white	vim-monochrome/bin/generate.rb	/^def white$/;"	f
wild_ignore	command-t/ruby/command-t/vim.rb	/^    def self.wild_ignore$/;"	F	class:CommandT.VIM
win32com	ultisnipps/test.py	/^        import win32com.client, win32gui$/;"	i
win32gui	ultisnipps/test.py	/^        import win32com.client, win32gui$/;"	i
wrap_exec_test	misc/autoload/xolox/misc/tests.vim	/^function! s:wrap_exec_test(function)$/;"	f
wrapper	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:err_to_scratch_buffer
wraps	ultisnipps/pythonx/UltiSnips/snippet_manager.py	/^from functools import wraps$/;"	i
write	vimproc/autoload/proc_w32.c	/^#define write /;"	d	file:
write	vimproc/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
write_pgroup	vimproc/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
write_pipes	vimproc/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
write_snippets	ultisnipps/utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
writecache	ctrlp/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	ctrlp/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
xolox#easytags#alias_filetypes	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#alias_filetypes(...) " {{{2$/;"	f
xolox#easytags#autoload	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#autoload(event) " {{{2$/;"	f
xolox#easytags#by_filetype	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#by_filetype(undo) " {{{2$/;"	f
xolox#easytags#check_ctags_compatible	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#check_ctags_compatible(name, min_version) " {{{2$/;"	f
xolox#easytags#define_tagkind	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#define_tagkind(object) " {{{2$/;"	f
xolox#easytags#file_has_tags	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#file_has_tags(filename) " {{{2$/;"	f
xolox#easytags#get_tagsfile	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#get_tagsfile() " {{{2$/;"	f
xolox#easytags#highlight	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#highlight() " {{{2$/;"	f
xolox#easytags#initialize	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#initialize(min_version) " {{{2$/;"	f
xolox#easytags#map_filetypes	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#map_filetypes(vim_ft, ctags_ft) " {{{2$/;"	f
xolox#easytags#parse_entries	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#parse_entries(lines) " {{{2$/;"	f
xolox#easytags#parse_entry	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#parse_entry(line) " {{{2$/;"	f
xolox#easytags#read_tagsfile	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#read_tagsfile(tagsfile) " {{{2$/;"	f
xolox#easytags#register	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#register(global) " {{{2$/;"	f
xolox#easytags#select_supported_filetypes	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#select_supported_filetypes(vim_ft) " {{{2$/;"	f
xolox#easytags#supported_filetypes	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#supported_filetypes() " {{{2$/;"	f
xolox#easytags#syntax_groups_to_ignore	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#syntax_groups_to_ignore() " {{{2$/;"	f
xolox#easytags#to_ctags_ft	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#to_ctags_ft(vim_ft) " {{{2$/;"	f
xolox#easytags#to_vim_ft	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#to_vim_ft(ctags_ft) " {{{2$/;"	f
xolox#easytags#update	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#update(silent, filter_tags, filenames) " {{{2$/;"	f
xolox#easytags#write_tagsfile	easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#write_tagsfile(tagsfile, headers, entries) " {{{2$/;"	f
xolox#misc#buffer#is_empty	misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#is_empty() " {{{1$/;"	f
xolox#misc#buffer#lock	misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#lock() " {{{1$/;"	f
xolox#misc#buffer#prepare	misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#prepare(...) " {{{1$/;"	f
xolox#misc#buffer#unlock	misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#unlock() " {{{1$/;"	f
xolox#misc#complete#keywords	misc/autoload/xolox/misc/complete.vim	/^function! xolox#misc#complete#keywords(arglead, cmdline, cursorpos)$/;"	f
xolox#misc#escape#pattern	misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#pattern(string) " {{{1$/;"	f
xolox#misc#escape#shell	misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#shell(string) " {{{1$/;"	f
xolox#misc#escape#substitute	misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#substitute(string) " {{{1$/;"	f
xolox#misc#format#pluralize	misc/autoload/xolox/misc/format.vim	/^function! xolox#misc#format#pluralize(count, singular, plural) " {{{1$/;"	f
xolox#misc#format#timestamp	misc/autoload/xolox/misc/format.vim	/^function! xolox#misc#format#timestamp(ts) " {{{1$/;"	f
xolox#misc#list#binsert	misc/autoload/xolox/misc/list.vim	/^function! xolox#misc#list#binsert(list, value, ...) " {{{1$/;"	f
xolox#misc#list#unique	misc/autoload/xolox/misc/list.vim	/^function! xolox#misc#list#unique(list) " {{{1$/;"	f
xolox#misc#msg#debug	misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#debug(...) " {{{1$/;"	f
xolox#misc#msg#info	misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#info(...) " {{{1$/;"	f
xolox#misc#msg#warn	misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#warn(...) " {{{1$/;"	f
xolox#misc#open#file	misc/autoload/xolox/misc/open.vim	/^function! xolox#misc#open#file(location, ...) " {{{1$/;"	f
xolox#misc#open#url	misc/autoload/xolox/misc/open.vim	/^function! xolox#misc#open#url(url) " {{{1$/;"	f
xolox#misc#option#eval_tags	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#eval_tags(value, ...) " {{{1$/;"	f
xolox#misc#option#get	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#get(name, ...) " {{{1$/;"	f
xolox#misc#option#join	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join(values) " {{{1$/;"	f
xolox#misc#option#join_tags	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join_tags(values) " {{{1$/;"	f
xolox#misc#option#split	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split(value) " {{{1$/;"	f
xolox#misc#option#split_tags	misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split_tags(value) " {{{1$/;"	f
xolox#misc#os#can_use_dll	misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#can_use_dll() " {{{1$/;"	f
xolox#misc#os#exec	misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#exec(options) " {{{1$/;"	f
xolox#misc#os#find_vim	misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#find_vim(...) " {{{1$/;"	f
xolox#misc#os#is_mac	misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_mac() " {{{1$/;"	f
xolox#misc#os#is_win	misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_win() " {{{1$/;"	f
xolox#misc#path#absolute	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#absolute(path) " {{{1$/;"	f
xolox#misc#path#commonprefix	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#commonprefix(paths) " {{{1$/;"	f
xolox#misc#path#decode	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#decode(encoded_path) " {{{1$/;"	f
xolox#misc#path#directory_separator	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#directory_separator() " {{{1$/;"	f
xolox#misc#path#encode	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#encode(path) " {{{1$/;"	f
xolox#misc#path#equals	misc/autoload/xolox/misc/path.vim	/^  function! xolox#misc#path#equals(a, b)$/;"	f
xolox#misc#path#is_relative	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#is_relative(path) " {{{1$/;"	f
xolox#misc#path#join	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#join(parts) " {{{1$/;"	f
xolox#misc#path#merge	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#merge(parent, child, ...) " {{{1$/;"	f
xolox#misc#path#relative	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#relative(path, base) " {{{1$/;"	f
xolox#misc#path#split	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#split(path) " {{{1$/;"	f
xolox#misc#path#tempdir	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#tempdir() " {{{1$/;"	f
xolox#misc#path#which	misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#which(...) " {{{1$/;"	f
xolox#misc#str#compact	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#compact(s) " {{{1$/;"	f
xolox#misc#str#dedent	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#dedent(text) " {{{1$/;"	f
xolox#misc#str#indent	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#indent(text, num_spaces) " {{{1$/;"	f
xolox#misc#str#slug	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#slug(s) " {{{1$/;"	f
xolox#misc#str#trim	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#trim(s) " {{{1$/;"	f
xolox#misc#str#ucfirst	misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#ucfirst(s) " {{{1$/;"	f
xolox#misc#test#assert_equals	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_equals(expected, received) " {{{1$/;"	f
xolox#misc#test#assert_same_type	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_same_type(expected, received) " {{{1$/;"	f
xolox#misc#test#assert_true	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_true(expr) " {{{1$/;"	f
xolox#misc#test#failed	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#failed() " {{{1$/;"	f
xolox#misc#test#passed	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#passed() " {{{1$/;"	f
xolox#misc#test#reset	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#reset() " {{{1$/;"	f
xolox#misc#test#summarize	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#summarize() " {{{1$/;"	f
xolox#misc#test#wrap	misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#wrap(function) " {{{1$/;"	f
xolox#misc#tests#asynchronous_command_execution	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#asynchronous_command_execution() " {{{2$/;"	f
xolox#misc#tests#binary_insertion	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#binary_insertion() " {{{2$/;"	f
xolox#misc#tests#finding_vim_on_the_search_path	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#finding_vim_on_the_search_path() " {{{2$/;"	f
xolox#misc#tests#getting_configuration_options	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#getting_configuration_options() " {{{2$/;"	f
xolox#misc#tests#joining_of_multi_valued_options	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#joining_of_multi_valued_options() " {{{2$/;"	f
xolox#misc#tests#making_a_list_unique	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#making_a_list_unique() " {{{2$/;"	f
xolox#misc#tests#multiline_string_dedent	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#multiline_string_dedent()$/;"	f
xolox#misc#tests#pattern_escaping	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#pattern_escaping() " {{{2$/;"	f
xolox#misc#tests#run	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#run() " {{{1$/;"	f
xolox#misc#tests#shell_escaping	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#shell_escaping() " {{{2$/;"	f
xolox#misc#tests#splitting_of_multi_valued_options	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#splitting_of_multi_valued_options() " {{{2$/;"	f
xolox#misc#tests#string_case_transformation	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_case_transformation()$/;"	f
xolox#misc#tests#string_whitespace_compaction	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_whitespace_compaction()$/;"	f
xolox#misc#tests#string_whitespace_trimming	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_whitespace_trimming()$/;"	f
xolox#misc#tests#substitute_escaping	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#substitute_escaping() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_with_raising_of_errors	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_with_raising_of_errors() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_with_stderr	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_with_stderr() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_without_raising_errors	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_without_raising_errors() " {{{2$/;"	f
xolox#misc#tests#version_string_comparison	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#version_string_comparison() " {{{2$/;"	f
xolox#misc#tests#version_string_parsing	misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#version_string_parsing() " {{{2$/;"	f
xolox#misc#timer#force	misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#force(...) " {{{1$/;"	f
xolox#misc#timer#start	misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#start() " {{{1$/;"	f
xolox#misc#timer#stop	misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#stop(...) " {{{1$/;"	f
xolox#misc#version#at_least	misc/autoload/xolox/misc/version.vim	/^function! xolox#misc#version#at_least(expected_version, available_version)$/;"	f
xolox#misc#version#parse	misc/autoload/xolox/misc/version.vim	/^function! xolox#misc#version#parse(version_string)$/;"	f
yellow	vim-monochrome/bin/generate.rb	/^def yellow$/;"	f
{autoload}.c{autoload}.obj	vimproc/make_msvc.mak	/^{autoload}.c{autoload}.obj::$/;"	t
